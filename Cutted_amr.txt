# ::snt Once when I was six years old I saw a magnificent picture in a book , called True Stories from Nature , about the primeval forest .
(s / see-01
   :ARG0 (i / i)
   :ARG1 (p / picture
            :mod (m / magnificent)
            :location (b2 / book))
   :mod (o / once)
   :time (a / age-01
            :ARG1 i
            :ARG2 (t / temporal-quantity)))


# ::snt It was a picture of a boa constrictor in the act of swallowing an animal .
(p / picture
   :domain (i / it)
   :topic (b2 / boa
              :mod (c2 / constrictor)
              :ARG0-of (s / swallow-01
                          :ARG1 (a / animal))))


# ::snt Here is a copy of the drawing .
(b / be-located-at-91
   :ARG1 (t2 / thing
             :ARG2-of (c / copy-01
                         :ARG1 (p / picture
                                  :ARG1-of (d / draw-01))))
   :ARG2 (h / here))


# ::snt In the book it said : " Boa constrictors swallow their prey whole , without chewing it .
(s2 / say-01
    :ARG0 (b2 / book)
    :ARG1 (s / swallow-01
             :ARG0 (b / boa)
             :ARG1 (p / prey
                      :poss b)
             :manner (c2 / chew-01
                         :ARG0 b
                         :ARG1 p)))


# ::snt After that they are not able to move , and they sleep through the six months that they need for digestion . "
(a / and
   :op1 (p / possible-01
           :ARG1 (m / move-01))
   :op2 (s / sleep-01
           :duration (t2 / temporal-quantity
                         :ARG1-of (n / need-01
                                     :purpose (d / digest-01)))))


# ::snt I pondered deeply , then , over the adventures of the jungle .
(p / ponder-01
   :ARG0 (i / i)
   :ARG1 (a / adventure
            :location (j / jungle))
   :ARG1-of (d / deep-02)
   :time (t / then))


# ::snt And after some work with a colored pencil I succeeded in making my first drawing .
(a2 / and
    :op2 (s / succeed-01
            :ARG0 (i / i
                     :ARG0-of (d / draw-01
                                 :ord (o / ordinal-entity)))
            :ARG1 (m / make-01
                     :ARG0 i)
            :time (a / after)))


# ::snt My Drawing Number One .
(p / picture
   :name (n2 / name)
   :poss (i / i))


# ::snt It looked like this : I showed my masterpiece to the grown - ups , and asked them whether the drawing frightened them .
(a / and
   :op1 (l / look-02
           :ARG0 (i / it)
           :ARG1 (t / this))
   :op2 (s / show-01
           :ARG0 (i2 / i)
           :ARG1 (m / masterpiece
                    :poss i2)
           :ARG2 (g / grown-up))
   :op3 (a2 / ask-01
            :ARG0 i2
            :ARG1 (t2 / truth-value
                      :polarity-of (f / frighten-01
                                      :ARG0 (p / picture
                                               :ARG1-of (d / draw-01))
                                      :ARG1 g))
            :ARG2 g))


# ::snt But they answered : " Frighten ?
(c / contrast-01
   :ARG2 (a / answer-01
            :ARG0 (t / they)
            :ARG2 (f / frighten-01
                     :ARG1-of (c2 / cause-01
                                  :ARG0 (a2 / amr-unknown)))))


# ::snt Why should any one be frightened by a hat ? "
(f / frighten-01
   :ARG0 (h / hat)
   :ARG1 (o / one
            :mod (a / any))
   :ARG1-of (c / cause-01
               :ARG0 (a2 / amr-unknown)))


# ::snt My drawing was not a picture of a hat .
(p / picture-01
   :ARG0 (p2 / picture
             :ARG1-of (d / draw-01
                         :ARG0 (i / i)))
   :ARG1 (h / hat))


# ::snt It was a picture of a boa constrictor digesting an elephant .
(p / picture-01
   :ARG0 (i / it)
   :ARG1 (b2 / boa
             :mod (c / constrictor)
             :ARG0-of (d / digest-01
                         :ARG1 (e / elephant))))


# ::snt They always need to have things explained .
(n / need-01
   :ARG0 (t / they)
   :ARG1 (e / explain-01)
   :time (a / always))


# ::snt That is why , at the age of six , I gave up what might have been a magnificent career as a painter .
# ::snt I had been disheartened by the failure of my Drawing Number One and my Drawing Number Two .
(d / dishearten-01
   :ARG0 (f / fail-01
            :ARG1 (a / and)))


# ::snt Grown - ups never understand anything by themselves , and it is tiresome for children to be always and forever explaining things to them .
(a / and
   :op1 (u / understand-01
           :ARG0 (g / grown-up)
           :ARG1 (a3 / anything)
           :time (e2 / ever)
           :mod (b / by-oneself))
   :op2 (t / tire-03
           :ARG0 (e / explain-01
                    :ARG2 g)))


# ::snt So then I chose another profession , and learned to pilot airplanes .
(c2 / cause-01
    :ARG1 (a / and
             :op1 (c / choose-01)
             :op2 (l / learn-01)))


# ::snt I have flown a little over all parts of the world ; and it is true that geography has been very useful to me .
# ::snt At a glance I can distinguish China from Arizona .
(p / possible-01
   :ARG1 (d / distinguish-01
            :ARG0 (i / i)
            :ARG1 (c / country)
            :ARG2 (s / state)
            :manner (g / glance-01
                       :ARG0 i)))


# ::snt If one gets lost in the night , such knowledge is valuable .
(v / value-02
   :ARG1 (k / knowledge
            :mod (s / such))
   :condition (g / get-03
                 :ARG1 (o / one)
                 :ARG2 (l / lost)))


# ::snt In the course of this life I have had a great many encounters with a great many people who have been concerned with matters of consequence .
(e / encounter-01
   :ARG0 (i / i)
   :ARG1 (p / person
            :quant (m2 / many)
            :ARG1-of (c / concern-01
                        :ARG0 (m3 / matter
                                  :ARG1-of (c2 / consequential-01))))
   :quant (m / many
             :mod (g / great))
   :time (c3 / course
             :poss (l / life)))


# ::snt I have lived a great deal among grown - ups .
(l / live-01
   :ARG0 (i / i)
   :mod (d / deal
           :mod (g2 / great))
   :location (a / among
                :op1 (g / grown-up)))


# ::snt I have seen them intimately , close at hand .
(s / see-01
   :ARG0 (i / i)
   :ARG1 (t / they)
   :ARG1-of (c / close-10
               :ARG2 (a / at-hand-14
                        :ARG1 t))
   :ARG2-of (i2 / intimate-02
                :ARG1 i))


# ::snt And that has n't much improved my opinion of them .
(a / and
   :op2 (i / improve-01
           :ARG0 (t / that)
           :ARG1 (t3 / thing
                     :ARG1-of (o2 / opine-01
                                  :ARG0 (i2 / i)
                                  :topic (t2 / they)))
           :degree (m2 / much)))


# ::snt Whenever I met one of them who seemed to me at all clear - sighted , I tried the experiment of showing him my Drawing Number One , which I have always kept .
# ::snt I would try to find out , so , if this was a person of true understanding .
(t / try-01
   :ARG0 (i / i)
   :ARG1 (f / find-out-03
            :ARG0 i
            :ARG1 (t4 / truth-value
                      :polarity-of (u2 / understand-01
                                       :ARG0 (p / person
                                                :mod (t2 / this))
                                       :ARG1-of (t3 / true-01)))))


# ::snt But , whoever it was , he , or she , would always say : " That is a hat . "
(c / contrast-01
   :ARG2 (s / say-01
            :ARG0 (o / or)
            :ARG1 (h2 / hat)
            :time (a / always)))


# ::snt Then I would never talk to that person about boa constrictors , or primeval forests , or stars .
(t / talk-01
   :ARG0 (i / i)
   :ARG1 (o / or
            :op1 (b / boa)
            :op2 (f / forest)
            :op3 (s / star))
   :ARG2 (p / person
            :mod (t2 / that))
   :time (e / ever))


# ::snt I would talk to him about bridge , and golf , and politics , and neckties .
(t / talk-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (b / bridge)
            :op2 (g / golf)
            :op3 (p / politics)
            :op4 (n2 / necktie))
   :ARG2 (h / he))


# ::snt And the grown - up would be greatly pleased to have met such a sensible man .
# ::snt Chapter 2 .
(c / chapter)


# ::snt So I lived my life alone , without anyone that I could really talk to , until I had an accident with my plane in the Desert of Sahara , six years ago .
(c / cause-01
   :ARG1 (l / live-01
            :ARG0 (i / i
                     :ARG0-of (t3 / talk-01
                                  :ARG2 (a5 / anyone)
                                  :ARG1-of (r / real-04)))
            :ARG1 (l2 / life
                      :poss i)
            :manner (a / alone)
            :duration (u / until)))


# ::snt Something was broken in my engine .
(b / break-01
   :ARG1 (s / something
            :location (e / engine)))


# ::snt It was a question of life or death for me : I had scarcely enough drinking water to last a week .
(q / question-01
   :ARG0 (i / i)
   :ARG1 (o / or
            :op1 (l / live-01)
            :op2 (d / die-01))
   :ARG1-of (c / cause-01
               :ARG0 (h / have-03
                        :ARG0 i
                        :ARG1 (w / water
                                 :ARG1-of (h2 / have-quant-91
                                              :ARG3 (e / enough
                                                       :mod (s / scarce))
                                              :ARG6 (l2 / last-03
                                                        :ARG2 (t / temporal-quantity)
                                                        :ARG3 i))))))


# ::snt The first night , then , I went to sleep on the sand , a thousand miles from any human habitation .
(s / sleep-01
   :ARG0 (i / i)
   :location (s2 / sand)
   :time (d2 / date-entity
             :dayperiod (n / night)
             :ord (o / ordinal-entity))
   :location (r / relative-position
                :op1 (p / place
                        :ARG1-of (i2 / inhabit-01
                                     :ARG0 (h / human)))
                :quant (d / distance-quantity)
                :direction (a3 / away)))


# ::snt I was more isolated than a shipwrecked sailor on a raft in the middle of the ocean .
(h / have-degree-91
   :ARG1 (i / i)
   :ARG2 (i2 / isolate-01
             :ARG1 i)
   :ARG3 (m / more)
   :ARG4 (p / person
            :ARG0-of (s / sail-01)
            :ARG1-of (s2 / shipwreck-01)
            :location (r / raft)))


# ::snt Thus you can imagine my amazement , at sunrise , when I was awakened by an odd little voice .
# ::snt It said : " If you please -- draw me a sheep ! "
(s / say-01
   :ARG0 (i / it)
   :ARG1 (d / draw-01
            :ARG0 (y2 / you)
            :ARG1 (s2 / sheep)
            :ARG2 (i2 / i)))


# ::snt " What ! "
(s / string-entity)


# ::snt " Draw me a sheep ! "
(d / draw-01
   :ARG0 (y / you)
   :ARG1 (s / sheep)
   :ARG2 (i / i))


# ::snt I jumped to my feet , completely thunderstruck .
(j / jump-03
   :ARG0 (i / i
            :mod (t / thunderstruck
                    :ARG1-of (c / complete-02))
            :part f)
   :destination (f / foot))


# ::snt I blinked my eyes hard .
(b / blink-01
   :ARG0 (i / i
            :part e)
   :ARG1 (e / eye)
   :ARG1-of (h / hard-04))


# ::snt I looked carefully all around me .
(l / look-01
   :ARG0 (i / i)
   :direction (a / around
                 :op1 i
                 :mod (a2 / all))
   :manner (c / careful))


# ::snt And I saw a most extraordinary small person , who stood there examining me with great seriousness .
(a / and
   :op2 (s / see-01
           :ARG0 (i / i)
           :ARG1 (p / person
                    :ARG1-of (h / have-degree-91
                                :ARG2 (e / extraordinary)
                                :ARG3 (m / most))
                    :ARG1-of (s3 / stand-01
                                 :ARG2 (t / there))
                    :ARG0-of (e2 / examine-01
                                 :ARG1 i
                                 :ARG2-of (s4 / serious-01
                                              :degree (g / great))))))


# ::snt Here you may see the best portrait that , later , I was able to make of him .
(p / possible-01
   :ARG1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (p2 / portrait
                      :ARG1-of (h3 / have-degree-91
                                   :ARG2 (g / good-02
                                            :ARG1 p2)
                                   :ARG3 (m / most)
                                   :ARG5 (p4 / portrait
                                             :ARG1-of (m2 / make-01
                                                          :ARG0 (i / i)
                                                          :ARG1-of (p3 / possible-01)
                                                          :time (a / after)))))
            :location (h2 / here)))


# ::snt But my drawing is certainly very much less charming than its model .
(c3 / contrast-01
    :ARG2 (h / have-degree-91
             :ARG1 (p / picture
                      :ARG1-of (d / draw-01
                                  :ARG0 (i / i)))
             :ARG2 (c / charm-01
                      :ARG0 p)
             :ARG3 (l / less)
             :ARG4 (m2 / model
                       :poss p)
             :mod (c2 / certain)))


# ::snt That , however , is not my fault .
(c / contrast-01
   :ARG2 (f / fault-01
            :ARG1 (i / i)
            :ARG2 (t / that)))


# ::snt The grown - ups discouraged me in my painter 's career when I was six years old , and I never learned to draw anything , except boas from the outside and boas from the inside .
(d / discourage-01
   :ARG0 (g / grown-up)
   :ARG1 (i / i)
   :ARG2 (c / career
            :topic (p / person
                      :ARG0-of (p2 / paint-02))
            :poss i)
   :ARG0-of (c2 / cause-01
                :ARG1 (l / learn-01
                         :ARG0 i
                         :ARG1 (d2 / draw-01
                                   :ARG0 i)
                         :time (e / ever)
                         :ARG2-of (e2 / except-01
                                      :ARG1 (a3 / and
                                                :op1 (b / boa)
                                                :op2 (b2 / boa)))))
   :time (a / age-01
            :ARG1 i
            :ARG2 (t2 / temporal-quantity)))


# ::snt Now I stared at this sudden apparition with my eyes fairly starting out of my head in astonishment .
(s / stare-01
   :ARG0 (i / i
            :part e
            :part h)
   :ARG1 (t / thing
            :ARG1-of (a / appear-01
                        :manner (s2 / sudden))
            :mod (t2 / this))
   :time (n / now)
   :manner (s3 / start-03
               :ARG0 (e / eye)
               :ARG1-of (c / cause-01
                           :ARG0 (a2 / astonish-01
                                     :ARG1 i))
               :ARG1-of (f / fair-04)
               :manner (o / out-06
                          :ARG1 e
                          :ARG2 (h / head))))


# ::snt Remember , I had crashed in the desert a thousand miles from any inhabited region .
# ::snt And yet my little man seemed neither to be straying uncertainly among the sands , nor to be fainting from fatigue or hunger or thirst or fear .
# ::snt Nothing about him gave any suggestion of a child lost in the middle of the desert , a thousand miles from any human habitation .
(s / suggest-01
   :ARG0 (n / nothing
            :topic (h / he))
   :ARG1 (c / child
            :ARG1-of (l / lose-02
                        :location (d / desert
                                     :part (m / middle))
                        :location (r / relative-position
                                     :op1 (t / thing
                                             :ARG1-of (i / inhabit-01
                                                         :ARG0 (h2 / human)))
                                     :quant (d2 / distance-quantity)
                                     :direction (a2 / away)))))


# ::snt When at last I was able to speak , I said to him : " But -- what are you doing here ? "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (c / contrast-01
            :ARG2 (b2 / be-located-at-91
                      :ARG1-of (c2 / cause-01
                                   :ARG0 (a / amr-unknown))))
   :ARG2 (h / he)
   :time (p / possible-01
            :ARG1 (s2 / speak-01
                      :ARG0 i)))


# ::snt And in answer he repeated , very slowly , as if he were speaking of a matter of great consequence : " If you please -- draw me a sheep ... "
# ::snt When a mystery is too overpowering , one dare not disobey .
(d / dare-01
   :ARG0 (o / one)
   :ARG2 (d2 / disobey-01
             :ARG0 o)
   :condition (h / have-quant-91
                 :ARG1 (o2 / overpower-01)
                 :ARG3 (t / too)))


# ::snt Absurd as it might seem to me , a thousand miles from any human habitation and in danger of death , I took out of my pocket a sheet of paper and my fountain - pen .
# ::snt But then I remembered how my studies had been concentrated on geography , history , arithmetic , and grammar , and I told the little chap ( a little crossly , too ) that I did not know how to draw .
(c4 / contrast-01
    :ARG2 (a / and
             :op1 (r / remember-01)
             :op2 (t2 / tell-01)))


# ::snt He answered me : " That does n't matter .
(a / answer-01
   :ARG0 (h / he)
   :ARG1 (i / i)
   :ARG2 (m2 / matter-01
             :ARG1 (t / that)))


# ::snt Draw me a sheep ... "
(d / draw-01
   :ARG0 (y / you)
   :ARG1 (s / sheep)
   :ARG2 (i / i))


# ::snt But I had never drawn a sheep .
(c / contrast-01
   :ARG2 (d / draw-01
            :ARG0 (i / i)
            :ARG1 (s / sheep)
            :time (e / ever)))


# ::snt So I drew for him one of the two pictures I had drawn so often .
(c / cause-01
   :ARG1 (d / draw-01
            :ARG0 (i / i)
            :ARG1 (p / picture
                     :ARG1-of (i2 / include-91
                                  :ARG2 (p2 / picture
                                            :ARG1-of (d2 / draw-01
                                                         :ARG0 i
                                                         :time (o / often
                                                                  :degree (s / so))))))
            :ARG2 (h / he)))


# ::snt It was that of the boa constrictor from the outside .
(b / boa
   :mod (c2 / constrictor)
   :direction (f / from
                 :op1 (o / outside)))


# ::snt And I was astounded to hear the little fellow greet it with , " No , no , no !
(a / and
   :op2 (a2 / astound-01
            :ARG0 (h / hear-01)))


# ::snt I do not want an elephant inside a boa constrictor .
(w / want-01
   :ARG0 (i / i)
   :ARG1 (e / elephant
            :location (i2 / inside)))


# ::snt A boa constrictor is a very dangerous creature , and an elephant is very cumbersome .
(a / and
   :op1 (c2 / creature
            :mod (d2 / dangerous)
            :domain (b / boa))
   :op2 (c3 / cumbersome
            :degree (v2 / very)
            :domain (e / elephant)))


# ::snt Where I live , everything is very small .
(s / small
   :degree (v / very)
   :domain (e / everything)
   :location (l2 / live-01
                 :ARG0 (i / i)))


# ::snt What I need is a sheep .
(n / need-01
   :ARG0 (i / i)
   :ARG1 (s / sheep))


# ::snt Draw me a sheep . "
(d / draw-01
   :ARG0 (y / you)
   :ARG1 (s / sheep)
   :ARG2 (i / i))


# ::snt So then I made a drawing .
(c / cause-01
   :ARG1 (d / draw-01
            :ARG0 (i / i)
            :time (t2 / then)))


# ::snt He looked at it carefully , then he said : " No .
(a / and
   :op1 (l / look-01
           :ARG0 (h / he)
           :ARG1 (i / it)
           :manner (c / careful))
   :op2 (s / say-01
           :ARG0 h
           :ARG1 (n / no)
           :time (t / then)))


# ::snt This sheep is already very sickly .
(s2 / sick-05
    :ARG1 (s / sheep
             :mod (t / this))
    :degree (v / very)
    :time (a / already))


# ::snt Make me another . "
(m / make-01
   :ARG0 (y / you)
   :ARG1 (a / another)
   :ARG3 (i / i))


# ::snt So I made another drawing .
(c / cause-01
   :ARG1 (m / make-01
            :ARG0 (i / i)
            :ARG1 (p / picture
                     :ARG1-of (d / draw-01
                                 :ARG0 i))))


# ::snt My friend smiled gently and indulgently .
(s / smile-01
   :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                        :ARG1 (i / i)
                        :ARG2 (f / friend)))
   :manner (g / gentle)
   :manner (i2 / indulgent))


# ::snt " You see yourself , " he said , " that this is not a sheep .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (s2 / see-01
             :ARG0 (y / you)
             :ARG1 (s4 / sheep)))


# ::snt This is a ram .
(r2 / ram
    :domain (t2 / this))


# ::snt It has horns . "
(h / have-03
   :ARG0 (i / it)
   :ARG1 (h2 / horn))


# ::snt So then I did my drawing over once more .
(c / cause-01
   :ARG1 (d / do-02
            :ARG0 (i / i)
            :ARG1 (p / picture
                     :ARG1-of (d2 / draw-01
                                  :ARG0 i))
            :mod (o / over)
            :mod (a / again)
            :time (t2 / then)))


# ::snt But it was rejected too , just like the others .
(c / contrast-01
   :ARG1 (r / reject-01
            :ARG1 (i / it)
            :ARG1-of (r2 / resemble-01
                         :ARG2 (o / other))
            :mod (t / too)))


# ::snt " This one is too old .
(h / have-degree-91
   :ARG1 (o / one
            :mod (t / this))
   :ARG2 (o2 / old)
   :ARG3 (t2 / too))


# ::snt I want a sheep that will live a long time . "
(w / want-01
   :ARG0 (i / i)
   :ARG1 (s / sheep
            :ARG0-of (l / live-01
                        :ARG1-of (l2 / long-03))))


# ::snt By this time my patience was exhausted , because I was in a hurry to start taking my engine apart .
(e / exhaust-01
   :ARG1 (p / patient-01
            :ARG1 (i / i))
   :ARG1-of (c / cause-01
               :ARG0 (h / hurry-01
                        :ARG1 i
                        :ARG2 (s / start-01
                                 :ARG0 i)))
   :time (b / by
            :op1 (t / time)))


# ::snt So I tossed off this drawing .
(c / cause-01
   :ARG1 (t / toss-out-02
            :ARG0 (i / i)
            :ARG1 (p / picture
                     :ARG1-of (d / draw-01
                                 :ARG0 i))
            :direction (o / off)))


# ::snt And I threw out an explanation with it .
(a / and
   :op2 (e / explain-01
           :ARG0 (i / i)
           :ARG1 (i3 / it)))


# ::snt " This is only his box .
(b / box
   :poss (h / he)
   :domain (t / this)
   :mod (o / only))


# ::snt The sheep you asked for is inside . "
(b / be-located-at-91
   :ARG1 (s2 / sheep
             :ARG1-of (a / ask-01
                         :ARG0 (y / you)))
   :ARG2 (i2 / inside))


# ::snt I was very surprised to see a light break over the face of my young judge : " That is exactly the way I wanted it !
# ::snt Do you think that this sheep will have to have a great deal of grass ? "
(t / think-01
   :ARG0 (y / you)
   :ARG1 (o / obligate-01
            :ARG2 (h / have-03))
   :polarity (a / amr-unknown))


# ::snt " Why ? "
(c / cause-01
   :ARG0 (a / amr-unknown))


# ::snt " Because where I live everything is very small ... "
(c / cause-01
   :ARG0 (s / small
            :degree (v / very)
            :domain (e / everything)))


# ::snt " There will surely be enough grass for him , "
(h / have-quant-91
   :ARG1 (g / grass)
   :ARG3 (e / enough
            :ARG1-of (s / sure-02))
   :ARG6 (h2 / he))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " It is a very small sheep that I have given you . "
(g / give-01
   :ARG0 (i / i)
   :ARG1 (s / sheep
            :mod (s2 / small))
   :ARG2 (y / you))


# ::snt He bent his head over the drawing : " Not so small that -- Look !
# ::snt He has gone to sleep ... "
(s / sleep-01
   :ARG0 (h / he))


# ::snt And that is how I made the acquaintance of the little prince .
(a / and
   :op2 (a2 / acquaint-01
            :ARG1 (i / i)
            :ARG2 (p / prince)
            :manner (t / that)))


# ::snt Chapter 3 .
(c2 / chapter)


# ::snt It took me a long time to learn where he came from .
(t2 / take-10
    :ARG1 (t / temporal-quantity
             :ARG2-of (l / long-03
                         :ARG1 (l2 / learn-01
                                   :ARG0 (i / i)
                                   :ARG1 (p / place
                                            :ARG3-of (c / come-01
                                                        :ARG1 (h / he)))))))


# ::snt The little prince , who asked me so many questions , never seemed to hear the ones I asked him .
(s / seem-01
   :ARG1 (h / hear-01
            :ARG0 (p / prince
                     :ARG0-of (q / question-01
                                 :ARG2 (i / i)
                                 :quant (m / many
                                           :degree (s2 / so))))
            :ARG1 (o / one
                     :ARG1-of (a2 / ask-01
                                  :ARG0 i
                                  :ARG2 p))
            :time (e2 / ever)))


# ::snt It was from words dropped by chance that , little by little , everything was revealed to me .
(r / reveal-01
   :ARG0 (w / word
            :ARG1-of (d / drop-06
                        :ARG1-of (c / chance-02)))
   :ARG1 (e / everything)
   :ARG2 (i / i)
   :manner (l / little-by-little))


# ::snt The first time he saw my airplane , for instance ( I shall not draw my airplane ; that would be much too complicated for me ) , he asked me : " What is that object ? "
(a4 / and
    :op1 (a / ask-01
            :ARG0 (h / he)
            :ARG1 (o / object)
            :ARG2 (i / i)
            :time (s / see-01
                     :ARG0 h))
    :op2 (h2 / have-polarity-91
             :ARG1 (d / draw-01
                      :ARG0 i
                      :ARG1-of (h3 / have-degree-91
                                   :ARG2 (c2 / complicate-01
                                             :ARG1 d
                                             :ARG2 i)
                                   :ARG3 (t3 / too
                                             :quant (m / much))))))


# ::snt " That is not an object .
(o / object
   :domain (t / that))


# ::snt It flies .
(f / fly-01
   :ARG1 (i / it))


# ::snt It is an airplane .
(a / airplane
   :domain (i / it))


# ::snt It is my airplane . "
(a2 / airplane
    :poss (i2 / i)
    :domain (i / it))


# ::snt And I was proud to have him learn that I could fly .
(a / and
   :op2 (p / pride-01
           :ARG0 (i / i)
           :ARG2 (l / learn-01)))


# ::snt He cried out , then : " What !
(c / cry-out-03
   :ARG0 (h / he)
   :ARG1 (s / string-entity)
   :time (t / then))


# ::snt You dropped down from the sky ? "
(d / drop-01
   :ARG1 (y / you)
   :ARG3 (s / sky)
   :direction (d2 / down)
   :polarity (a / amr-unknown))


# ::snt " Yes , "
(y2 / yes)


# ::snt I answered , modestly .
(a / answer-01
   :ARG0 (i / i)
   :manner (m / modest))


# ::snt " Oh !
(o / oh)


# ::snt That is funny ! "
(f2 / funny
    :domain (t2 / that))


# ::snt And the little prince broke into a lovely peal of laughter , which irritated me very much .
(a / and
   :op2 (b / break-in-17
           :ARG0 (p / prince)
           :ARG1 (l2 / laugh-01)
           :ARG0-of (i / irritate-01
                       :ARG1 (i2 / i)
                       :degree (m / much
                                  :degree (v / very)))))


# ::snt I like my misfortunes to be taken seriously .
(l / like-02
   :ARG0 (i / i)
   :ARG1 (t / take-04
            :ARG1 (m / misfortune
                     :poss i)
            :manner (s / serious-01)))


# ::snt Then he added : " So you , too , come from the sky !
(a / add-01
   :ARG0 (h / he)
   :ARG1 (c2 / cause-01
             :ARG1 (c / come-01))
   :time (t / then))


# ::snt Which is your planet ? "
(p / planet
   :poss (y / you)
   :domain (a / amr-unknown))


# ::snt At that moment I caught a gleam of light in the impenetrable mystery of his presence ; and I demanded , abruptly : " Do you come from another planet ? "
# ::snt But he did not reply .
(c / contrast-01
   :ARG2 (r / reply-01
            :ARG0 (h / he)))


# ::snt He tossed his head gently , without taking his eyes from my plane : " It is true that on that you can n't have come from very far away ... "
(a / and
   :op1 (t / toss-01
           :ARG0 (h / he)
           :manner (g / gentle)
           :manner (t2 / take-away-05
                       :ARG0 h))
   :op2 (s / say-01
           :ARG0 h
           :ARG1 (p / possible-01)))


# ::snt And he sank into a reverie , which lasted a long time .
(a / and
   :op2 (s / sink-01
           :ARG0 (h / he)
           :ARG4 (r / reverie
                    :ARG1-of (l / long-03))))


# ::snt You can imagine how my curiosity was aroused by this half - confidence about the " other planets . "
(p / possible-01
   :ARG1 (i2 / imagine-01
             :ARG0 (y / you)
             :ARG1 (a / arouse-01)))


# ::snt I made a great effort , therefore , to find out more on this subject .
(c / cause-01
   :ARG1 (e / effort-01
            :ARG0 (i / i)
            :ARG1 (f / find-out-03
                     :ARG0 i)
            :mod (g / great)))


# ::snt " My little man , where do you come from ?
(s / say-01
   :ARG1 (c / come-01
            :ARG1 (y / you)
            :ARG3 (a / amr-unknown))
   :ARG2 (m / man
            :mod (l / little)
            :poss (i / i)))


# ::snt What is this ' where I live , ' of which you speak ?
(l / live-01
   :ARG0 (y / you)
   :location (p / place
                :ARG1-of (s / speak-01
                            :ARG0 y)
                :domain (a / amr-unknown)))


# ::snt Where do you want to take your sheep ? "
(w / want-01
   :ARG0 (y / you)
   :ARG1 (t / take-01
            :ARG0 y
            :ARG1 (s / sheep
                     :poss y)
            :ARG3 (a / amr-unknown)))


# ::snt After a reflective silence he answered : " The thing that is so good about the box you have given me is that at night he can use it as his house . "
(a / answer-01
   :ARG0 (h / he)
   :ARG1 (h4 / have-degree-91
             :ARG1 (b / box
                      :ARG1-of (g2 / give-01
                                   :ARG0 (y / you)
                                   :ARG2 h))
             :ARG2 (g / good-02
                      :ARG1 b)
             :ARG3 (s2 / so)
             :ARG6 (p / possible-01))
   :time (a2 / after
             :op1 (s / silent)))


# ::snt " That is so .
(s / so
   :domain (t / that))


# ::snt And if you are good I will give you a string , too , so that you can tie him during the day , and a post to tie him to . "
# ::snt But the little prince seemed shocked by this offer : " Tie him !
# ::snt What a queer idea ! "
(q / queer
   :domain (i / idea))


# ::snt " But if you do n't tie him , "
(c / contrast-01
   :ARG2 (t / tie-01
            :ARG0 (y / you)
            :ARG1 (h / he)
            :condition-of (t2 / thing)))


# ::snt I said , " he will wander off somewhere , and get lost . "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (w / wander-01)
            :op2 (g / get-03)))


# ::snt My friend broke into another peal of laughter : " But where do you think he would go ? "
(b / break-in-17
   :ARG0 (p2 / person
             :ARG0-of (h2 / have-rel-role-91
                          :ARG1 (i / i)
                          :ARG2 (f / friend))
             :ARG0-of (s / say-01
                         :ARG1 (c / contrast-01
                                  :ARG2 (t / think-01))))
   :ARG1 (l / laugh-01
            :quant (p / peal)))


# ::snt " Anywhere .
(a / anywhere)


# ::snt Straight ahead of him . "
(a / ahead
   :op1 (h / he)
   :ARG1-of (s / straight-04))


# ::snt Then the little prince said , earnestly : " That does n't matter .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / matter-01
            :ARG1 (t2 / that))
   :manner (e / earnest-01)
   :time (t / then))


# ::snt Where I live , everything is so small ! "
(s / small
   :degree (s2 / so)
   :domain (e / everything
              :location (l / live-01)))


# ::snt And , with perhaps a hint of sadness , he added : " Straight ahead of him , nobody can go very far ... "
# ::snt Chapter 4 .
(c / chapter)


# ::snt I had thus learned a second fact of great importance : this was that the planet the little prince came from was scarcely any larger than a house !
# ::snt But that did not really surprise me much .
(c / contrast-01
   :ARG2 (s / surprise-01
            :ARG0 (t / that)
            :ARG1 (i / i)
            :degree (m / much)
            :ARG1-of (r / real-04)))


# ::snt I knew very well that in addition to the great planets -- such as the Earth , Jupiter , Mars , Venus -- to which we have given names , there are also hundreds of others , some of which are so small that one has a hard time seeing them through the telescope .
# ::snt When an astronomer discovers one of these he does not give it a name , but only a number .
(g / give-01
   :ARG0 (a / astronomer)
   :ARG1 (n2 / number)
   :ARG2 (t / thing
            :ARG1-of (i / include-91
                        :ARG2 (t2 / this)))
   :mod (o2 / only)
   :time (d / discover-01
            :ARG0 a
            :ARG1 t)
   :ARG1-of (i2 / instead-of-91
                :ARG2 (n3 / name-01
                          :ARG0 a
                          :ARG1 t)))


# ::snt He might call it , for example , " Asteroid 325 . "
(p / possible-01
   :ARG1 (c / call-01
            :ARG0 (h / he)
            :ARG1 (i / it)
            :ARG2 (n2 / name)
            :ARG0-of (e / exemplify-01)))


# ::snt I have serious reason to believe that the planet from which the little prince came is the asteroid known as B-612 .
(c / cause-01
   :ARG0 (r / reason
            :ARG1-of (s / serious-02))
   :ARG1 (b / believe-01
            :ARG0 (i / i)
            :ARG1 (c2 / come-01)))


# ::snt This asteroid has only once been seen through the telescope .
(s / see-01
   :ARG1 (a / asteroid
            :mod (t / this))
   :instrument (t2 / telescope)
   :ARG1-of (h / have-frequency-91
               :mod (o / only)))


# ::snt That was by a Turkish astronomer , in 1909 .
(s / see-01
   :ARG0 (a / astronomer
            :mod (c / country))
   :time (d / date-entity))


# ::snt On making his discovery , the astronomer had presented it to the International Astronomical Congress , in a great demonstration .
(p / present-01
   :ARG0 (a / astronomer)
   :ARG1 (i / it)
   :ARG2 (o / organization
            :name (n / name))
   :manner (d2 / demonstrate-01
               :ARG0 a
               :mod (g / great))
   :time (d3 / discover-01
             :ARG0 a))


# ::snt But he was in Turkish costume , and so nobody would believe what he said .
(c4 / contrast-01
    :ARG2 (c / costume-01
             :ARG1 (h / he)
             :manner (c2 / country)
             :ARG0-of (c3 / cause-01
                          :ARG1 (b2 / believe-01
                                    :ARG0 (s / somebody)
                                    :ARG1 (t / thing
                                             :ARG1-of (s2 / say-01
                                                          :ARG0 h))))))


# ::snt Grown - ups are like that ...
(r / resemble-01
   :ARG1 (g / grown-up)
   :ARG2 (t / that))


# ::snt Fortunately , however , for the reputation of Asteroid B-612 , a Turkish dictator made a law that his subjects , under pain of death , should change to European costume .
(c5 / contrast-01
    :ARG2 (m / make-01
             :ARG0 (p3 / person
                       :ARG0-of (h / have-org-role-91
                                   :ARG1 (c / country
                                            :name (n / name))))
             :ARG1 (l / law)
             :ARG2-of (f / fortunate-01
                         :ARG1 (r / reputation
                                  :poss (p2 / planet)))))


# ::snt So in 1920 the astronomer gave his demonstration all over again , dressed with impressive style and elegance .
(c / cause-01
   :ARG1 (d4 / demonstrate-01
             :ARG0 (a / astronomer
                      :ARG1-of (d2 / dress-01
                                   :ARG2 (a4 / and
                                             :op1 (s / style)
                                             :op2 (e / elegance)
                                             :ARG0-of (i / impress-01))))
             :time (d3 / date-entity)
             :mod (a3 / again)))


# ::snt And this time everybody accepted his report .
(a / and
   :op2 (a2 / accept-01
            :ARG0 (e / everybody)
            :ARG1 (t3 / thing
                      :ARG1-of (r / report-01
                                  :ARG0 (h2 / he)))
            :time (t / time)))


# ::snt WHen you tell them that you have made a new friend , they never ask you any questions about essential matters .
# ::snt They never say to you , " What does his voice sound like ?
(s / say-01
   :ARG0 (t / they)
   :ARG1 (s2 / sound-01
             :ARG1 (v / voice)
             :ARG2 (a2 / amr-unknown))
   :ARG2 (y / you)
   :time (e / ever))


# ::snt What games does he love best ?
(l / love-01
   :ARG0 (h / he)
   :ARG1 (a2 / amr-unknown
             :mod (g2 / game)
             :ARG1-of (h2 / have-degree-91
                          :ARG2 (g / good-02)
                          :ARG3 (m / most))))


# ::snt Does he collect butterflies ? "
(c / collect-01
   :ARG0 (h / he)
   :ARG1 (b / butterfly)
   :polarity (a / amr-unknown))


# ::snt Instead , they demand : " How old is he ?
(d / demand-01
   :ARG0 (t / they)
   :ARG1 (a2 / age-01
             :ARG1 (h2 / he)
             :ARG2 (a3 / amr-unknown))
   :ARG1-of (i2 / instead-of-91))


# ::snt How many brothers has he ?
(h / have-rel-role-91
   :ARG0 (p / person
            :quant (a / amr-unknown))
   :ARG1 (h2 / he)
   :ARG2 (b / brother))


# ::snt How much does he weigh ?
(w / weigh-01
   :ARG1 (h / he)
   :ARG3 (a / amr-unknown))


# ::snt How much money does his father make ? "
(m / make-05
   :ARG0 (p / person
            :ARG0-of (h2 / have-rel-role-91
                         :ARG1 (h / he)
                         :ARG2 (f / father)))
   :ARG1 (m2 / monetary-quantity
             :quant (a / amr-unknown)))


# ::snt Only from these figures do they think they have learned anything about him .
(t / think-01
   :ARG0 (t2 / they)
   :ARG1 (l / learn-01
            :ARG0 t2
            :ARG1 (a / anything)
            :source (f / figure)))


# ::snt If you were to say to the grown - ups : " I saw a beautiful house made of rosy brick , with geraniums in the windows and doves on the roof , " they would not be able to get any idea of that house at all .
# ::snt You would have to say to them : " I saw a house that cost $ 20,000 . "
# ::snt Then they would exclaim : " Oh , what a pretty house that is ! "
(e / exclaim-01
   :ARG0 (t / they)
   :ARG1 (p2 / pretty
             :domain (h2 / house))
   :time (t3 / then))


# ::snt Just so , you might say to them : " The proof that the little prince existed is that he was charming , that he laughed , and that he was looking for a sheep .
(p / possible-01
   :ARG1 (s2 / say-01
             :ARG0 (y / you)
             :ARG1 (p2 / prove-01)
             :ARG2 (t / they)
             :manner (j / just-so)))


# ::snt If anybody wants a sheep , that is a proof that he exists . "
(p / prove-01
   :ARG0 (w / want-01
            :ARG0 (a / anybody)
            :ARG1 (s / sheep))
   :ARG1 (e / exist-01
            :ARG1 a))


# ::snt And what good would it do to tell them that ?
(a / and
   :op2 (d / do-02
           :ARG0 (t / tell-01)
           :ARG1 (g / good-04)))


# ::snt They would shrug their shoulders , and treat you like a child .
(a / and
   :op1 (s / shrug-01
           :ARG0 (t / they)
           :ARG1 (s2 / shoulder
                     :poss t))
   :op2 (t2 / treat-01
            :ARG0 t
            :ARG1 (y / you)
            :ARG2 (c / child)))


# ::snt But if you said to them : " The planet he came from is Asteroid B-612 , " then they would be convinced , and leave you in peace from their questions .
(c3 / contrast-01
    :ARG2 (a / and
             :op1 (c / convince-01)
             :op2 (l / leave-14)
             :condition (s / say-01)))


# ::snt They are like that .
(r / resemble-01
   :ARG1 (t / they)
   :ARG2 (t2 / that))


# ::snt One must not hold it against them .
(o / obligate-01
   :ARG1 (o2 / one)
   :ARG2 (h / hold-01
            :ARG0 o2
            :ARG1 (i / it)
            :ARG2 (a / against)))


# ::snt Children should always show great forbearance toward grown - up people .
(r / recommend-01
   :ARG1 (s / show-01
            :ARG0 (c / child)
            :ARG1 (f / forbearance)
            :ARG2 (g2 / grown-up)
            :time (a / always)))


# ::snt But certainly , for us who understand life , figures are a matter of indifference .
# ::snt I should have liked to begin this story in the fashion of the fairy - tales .
(l / like-02
   :ARG0 (i / i)
   :ARG1 (b / begin-01
            :ARG0 i
            :ARG1 (s / story)
            :manner (f / fashion)))


# ::snt I should have like to say : " Once upon a time there was a little prince who lived on a planet that was scarcely any bigger than himself , and who had need of a sheep ... "
(l / like-02
   :ARG0 (i / i)
   :ARG1 (s / say-01
            :ARG0 i
            :ARG1 (p / prince
                     :ARG0-of (l3 / live-01
                                  :location (p2 / planet
                                                :ARG1-of (h / have-degree-91
                                                            :ARG2 (b / big)
                                                            :ARG3 (m / more
                                                                     :quant (s2 / scarce))
                                                            :ARG4 p)))
                     :ARG0-of (n / need-01
                                 :ARG1 (s3 / sheep)))))


# ::snt To those who understand life , that would have given a much greater air of truth to my story .
(g / give-01
   :ARG0 (t / that)
   :ARG1 (t3 / truth
             :quant (a / air
                       :ARG1-of (h / have-degree-91
                                   :ARG2 (g2 / great)
                                   :ARG3 (m / more
                                            :quant (m2 / much)))))
   :ARG2 (s / story
            :poss (i / i))
   :beneficiary (p / person
                   :ARG0-of (u / understand-01
                               :ARG1 (l / life))))


# ::snt For I do not want any one to read my book carelessly .
(c / cause-01
   :ARG0 (w / want-01
            :ARG0 (i / i)
            :ARG1 (r / read-01)))


# ::snt I have suffered too much grief in setting down these memories .
(h / have-quant-91
   :ARG1 (g / grief
            :ARG1-of (s / suffer-01
                        :ARG0 (i / i)
                        :ARG1-of (c / cause-01
                                    :ARG0 (s2 / set-down-09
                                              :ARG0 i
                                              :ARG1 (m2 / memory)))))
   :ARG2 (m / much)
   :ARG3 (t / too))


# ::snt Six years have already passed since my friend went away from me , with his sheep .
(g / go-02
   :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                        :ARG1 (i / i)
                        :ARG2 (f / friend)))
   :direction (a / away
                 :op1 i)
   :accompanier (s / sheep
                   :poss p)
   :time (b / before
            :op1 (n / now)
            :quant (t / temporal-quantity))
   :time (a3 / already))


# ::snt If I try to describe him here , it is to make sure that I shall not forget him .
(e / ensure-01
   :ARG1 (f / forget-01
            :ARG0 (i / i)
            :ARG1 (h / he))
   :condition (t / try-01
                 :ARG0 i
                 :ARG1 (d / describe-01
                          :ARG0 i
                          :ARG1 h)))


# ::snt To forget a friend is sad .
(s / sad-02
   :ARG0 (f3 / forget-01
             :ARG1 (p / person
                      :ARG0-of (h / have-rel-role-91
                                  :ARG2 (f / friend)))))


# ::snt Not every one has had a friend .
(h / have-03
   :ARG0 (e / everyone)
   :ARG1 (p / person
            :ARG0-of (h2 / have-rel-role-91
                         :ARG1 e
                         :ARG2 (f / friend))))


# ::snt And if I forget him , I may become like the grown - ups who are no longer interested in anything but figures ...
# ::snt It is for that purpose , again , that I have bought a box of paints and some pencils .
(b / buy-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (b2 / box
                     :ARG0-of (c / contain-01
                                 :ARG1 (p / paint)))
            :op2 (p2 / pencil))
   :purpose (t2 / that))


# ::snt It is hard to take up drawing again at my age , when I have never made any pictures except those of the boa constrictor from the outside and the boa constrictor from the inside , since I was six .
(h / hard-02
   :ARG1 (t / take-up-31
            :ARG0 (i / i
                     :ARG1-of (a3 / age-01
                                  :op1-of (s / since
                                             :time-of (m / make-01
                                                         :ARG1 (p / picture
                                                                  :mod (a5 / any)
                                                                  :ARG2-of (e2 / except-01
                                                                               :ARG1 (a6 / and
                                                                                         :op1 (p2 / picture)
                                                                                         :op2 (p3 / picture))))
                                                         :time (e / ever)))))
            :ARG1 (d / draw-01)
            :mod (a / again))
   :ARG1-of (c / cause-01))


# ::snt I shall certainly try to make my portraits as true to life as possible .
(t / try-01
   :ARG0 (i / i)
   :ARG1 (m / make-02
            :ARG0 i
            :ARG1 (h / have-degree-91))
   :mod (c / certain))


# ::snt But I am not at all sure of success .
(c / contrast-01
   :ARG2 (s / sure-02
            :ARG0 (i / i)
            :degree (a / at-all)
            :ARG1-of (s2 / succeed-01
                         :ARG0 i)))


# ::snt One drawing goes along all right , and another has no resemblance to its subject .
(a / and
   :op1 (g / go-06
           :ARG1 (p2 / picture
                     :ARG1-of (d / draw-01))
           :ARG2 (a2 / along)
           :mod (a3 / all-right))
   :op2 (r2 / resemble-01
            :ARG1 (p / picture
                     :ARG1-of (d2 / draw-01))
            :ARG2 (s / subject
                     :poss p)))


# ::snt I make some errors , too , in the little prince 's height : in one place he is too tall and in another too short .
(e / err-01
   :ARG0 (i / i)
   :topic (h / high-02
             :ARG1 (p / prince))
   :mod (t / too)
   :example (a / and
               :op1 (h2 / have-degree-91
                        :ARG1 p)
               :op2 (h3 / have-degree-91
                        :ARG1 p))
   :mod (s2 / some))


# ::snt And I feel some doubts about the color of his costume .
(a / and
   :op2 (f / feel-01
           :ARG0 (i / i)
           :ARG1 (d / doubt-01
                    :ARG0 i)))


# ::snt So I fumble along as best I can , now good , now bad , and I hope generally fair - to - middling .
(c / cause-01
   :ARG1 (h2 / have-degree-91
             :ARG1 (f / fumble-01)
             :ARG2 (g / good-03
                      :ARG2 f)
             :ARG3 (e / equal)
             :ARG4 (p / possible-01
                      :ARG1 f)
             :example (g2 / good-03)
             :example (b / bad-02)
             :example (b2 / between
                          :ARG1-of (g3 / general-02)
                          :ARG1-of (h / hope-01))))


# ::snt In certain more important details I shall make mistakes , also .
(m2 / mistake-02
    :ARG0 (i / i)
    :ARG1 (d / detail
             :mod (c / certain)
             :ARG1-of (h / have-degree-91
                         :ARG2 (i2 / important-01
                                   :ARG1 d)
                         :ARG3 (m3 / more)))
    :mod (a / also))


# ::snt But that is something that will not be my fault .
(c / contrast-01
   :ARG2 (f2 / fault-01
             :ARG1 (i / i)
             :ARG2 (s2 / something)))


# ::snt My friend never explained anything to me .
(e / explain-01
   :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                        :ARG1 (i / i)
                        :ARG2 (f / friend)))
   :ARG1 (a / anything)
   :ARG2 i
   :time (e2 / ever))


# ::snt He thought , perhaps , that I was like himself .
(t / think-01
   :ARG0 (h / he)
   :ARG1 (r / resemble-01
            :ARG1 (i / i)
            :ARG2 h)
   :mod (p / perhaps))


# ::snt But I , alas , do not know how to see sheep through the walls of boxes .
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (i / i)
            :ARG1 (t2 / thing
                      :manner-of (s / see-01
                                    :ARG1 (s2 / sheep)
                                    :path (t / through
                                             :op1 (w / wall
                                                     :consist-of (b2 / box))))))
   :mod (a / alas))


# ::snt Perhaps I am a little like the grown - ups .
(r / resemble-01
   :ARG1 (i / i)
   :ARG2 (g / grown-up)
   :mod (p / perhaps)
   :quant (l / little))


# ::snt I have had to grow old .
(o / obligate-01
   :ARG1 (i / i)
   :ARG2 (g / grow-02
            :ARG1 i
            :ARG2 (o2 / old)))


# ::snt Chapter 5 .
(c / chapter)


# ::snt As each day passed I would learn , in our talk , something about the little prince 's planet , his departure from it , his journey .
(l / learn-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (s / something)
            :op2 (d2 / depart-01)
            :op3 (j / journey-01))
   :time (p / pass-03
            :ARG1 (d / day))
   :source (t / talk-01
              :ARG0 (w / we)))


# ::snt The information would come very slowly , as it might chance to fall from his thoughts .
(c / come-01
   :ARG1 (i / information)
   :ARG1-of (s / slow-05
               :degree (v / very))
   :time (f / fall-01
            :ARG1 i
            :ARG3 (t / thing
                     :ARG1-of (t2 / think-01
                                  :ARG0 (h / he)))
            :ARG1-of (c2 / chance-01)))


# ::snt It was in this way that I heard , on the third day , about the catastrophe of the baobabs .
(h / hear-01
   :ARG0 (i / i)
   :ARG1 (c / catastrophe
            :poss (b / baobab))
   :manner (t / this)
   :time (d / day
            :ord (o / ordinal-entity)))


# ::snt This time , once more , I had the sheep to thank for it .
(o / obligate-01
   :ARG2 (t / thank-01
            :ARG0 (i / i)
            :ARG1 (s / sheep)
            :ARG2 (i2 / it))
   :time (t2 / time
             :mod (t3 / this))
   :mod (a / again))


# ::snt For the little prince asked me abruptly -- as if seized by a grave doubt -- " It is true , is n't it , that sheep eat little bushes ? "
(r2 / request-confirmation-91
    :ARG0 (p / prince
             :mod (l2 / little))
    :ARG1 (e / eat-01
             :ARG0 (s / sheep)
             :ARG1 (b / bush))
    :ARG2 (i2 / i)
    :manner (a2 / abrupt)
    :conj-as-if (s2 / seize-01
                    :ARG0 (d / doubt-01
                             :ARG0 p)
                    :ARG1 p))


# ::snt " Yes , that is true . "
(t / true-01
   :ARG1 (t2 / that))


# ::snt " Ah !
(a / ah)


# ::snt I am glad ! "
(g / glad-02
   :ARG1 (i / i))


# ::snt I did not understand why it was so important that sheep should eat little bushes .
(u / understand-01
   :ARG0 (i / i)
   :ARG1 (i2 / important-01
             :mod (s2 / so)
             :ARG1 (r / recommend-01)
             :ARG1-of (c / cause-01
                         :ARG0 (a / amr-unknown))))


# ::snt But the little prince added : " Then it follows that they also eat baobabs ? "
(c / contrast-01
   :ARG1 (a / add-01
            :ARG0 (p / prince)
            :ARG1 (f / follow-05
                     :ARG1-of (h / have-condition-91)
                     :ARG1-of (r / request-confirmation-91))))


# ::snt I pointed out to the little prince that baobabs were not little bushes , but , on the contrary , trees as big as castles ; and that even if he took a whole herd of elephants away with him , the herd would not eat up one single baobab .
# ::snt The idea of the herd of elephants made the little prince laugh .
(m / make-02
   :ARG0 (i / idea
            :topic (h / herd
                      :consist-of (e / elephant)))
   :ARG1 (l / laugh-01
            :ARG0 (p / prince)))


# ::snt " We would have to put them one on top of the other , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (o / obligate-01
            :ARG2 (s2 / stack-01)))


# ::snt But he made a wise comment : " Before they grow so big , the baobabs start out by being little . "
(c2 / contrast-01
    :ARG2 (c / comment-01
             :ARG0 (h / he)
             :ARG1 (s / start-out-05)
             :manner (w / wise)))


# ::snt " That is strictly correct , "
(c / correct-02
   :ARG1 (t / that)
   :mod (s / strict))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " But why do you want the sheep to eat the little baobabs ? "
(c / contrast-01
   :ARG2 (c2 / cause-01
             :ARG0 (a / amr-unknown)
             :ARG1 (w / want-01)))


# ::snt And I was obliged to make a great mental effort to solve this problem , without any assistance .
(a / and
   :op1 (o / oblige-02
           :ARG1 (i / i
                    :ARG1-of (a2 / assist-01))
           :ARG2 (e / effort-01
                    :ARG0 i)))


# ::snt Indeed , as I learned , there were on the planet where the little prince lived -- as on all planets -- good plants and bad plants .
(b2 / be-located-at-91
    :ARG1 (a3 / and
              :op1 (p / plant
                      :ARG1-of (g / good-02))
              :op2 (p2 / plant
                       :ARG1-of (b / bad-07))
              :mod (i / indeed))
    :ARG2 (a / and
             :op1 (p3 / planet
                      :location-of (l / live-01
                                      :ARG0 (p4 / prince
                                                :mod (l2 / little))))
             :op2 (p5 / planet))
    :ARG1-of (l3 / learn-01
                 :ARG0 (i2 / i)))


# ::snt In consequence , there were good seeds from good plants , and bad seeds from bad plants .
# ::snt But seeds are invisible .
(c / contrast-01
   :ARG2 (p / possible-01
            :ARG1 (s2 / see-01)))


# ::snt They sleep deep in the heart of the earth 's darkness , until some one among them is seized with the desire to awaken .
(s / sleep-01
   :ARG0 (t / they
            :ARG2-of (i / include-91))
   :location (h / heart
                :ARG2-of (d / deep-02)
                :part-of (d2 / darkness
                             :poss (e / earth)))
   :time (u / until
            :op1 (s2 / seize-01)))


# ::snt If it is only a sprout of radish or the sprig of a rose - bush , one would let it grow wherever it might wish .
(a / allow-01
   :ARG0 (o / one)
   :ARG1 (g / grow-01
            :ARG1 (i / it)
            :location (w2 / wish-01
                          :ARG0 i
                          :ARG1-of (p / possible-01)))
   :condition (o2 / or
                  :op1 (s / sprout
                          :part-of (r / radish))
                  :op2 (s2 / sprig
                           :part-of (b2 / bush
                                        :mod (r2 / rose)))
                  :mod (o3 / only)
                  :domain i))


# ::snt But when it is a bad plant , one must destroy it as soon as possible , the very first instant that one recognizes it .
# ::snt Now there were some terrible seeds on the planet that was the home of the little prince ; and these were the seeds of the baobab .
(b2 / be-located-at-91
    :ARG1 (s / seed
             :ARG1-of (t / terrible-01)
             :quant (s2 / some)
             :poss (b / baobab))
    :ARG2 (p / planet
             :location-of (h / home
                             :poss (p2 / prince
                                       :mod (l / little))))
    :time (n / now))


# ::snt The soil of that planet was infested with them .
(i / infest-01
   :ARG1 (s / soil
            :poss (p / planet))
   :ARG2 (t / they))


# ::snt A baobab is something you will never , never be able to get rid of if you attend to it too late .
(p / possible-01
   :ARG1 (e / eliminate-01
            :ARG0 (y / you)
            :ARG1 (b / baobab)
            :time (e2 / ever))
   :condition (a / attend-02
                 :ARG0 y
                 :ARG1 b
                 :ARG1-of (h / have-degree-91
                             :ARG2 (l / late)
                             :ARG3 (t / too))))


# ::snt It spreads over the entire planet .
(s / spread-01
   :ARG1 (i / it)
   :ARG2 (p / planet
            :mod (e / entire)))


# ::snt It bores clear through it with its roots .
(b / bore-01
   :ARG0 (i / it)
   :ARG2 (t2 / through
             :op1 (i2 / it)
             :mod (c / clear-03))
   :ARG3 (r / root
            :poss i))


# ::snt And if the planet is too small , and the baobabs are too many , they split it in pieces ...
(a / and
   :op1 (s / split-01
           :ARG0 (b / baobab)
           :ARG1 (p2 / planet)
           :ARG2 (p / piece)
           :condition (a2 / and)))


# ::snt " It is a question of discipline , " the little prince said to me later on .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (q / question
            :topic (d / discipline)
            :domain (i / it))
   :ARG2 (i2 / i)
   :time (a / after))


# ::snt " When you 've finished your own toilet in the morning , then it is time to attend to the toilet of your planet , just so , with the greatest care .
(a / attend-02
   :ARG0 (y / you)
   :ARG1 (t2 / toilet
             :poss (p / planet
                      :poss y)
             :ARG1-of (r / resemble-01
                         :ARG2 (t / toilet
                                  :poss y)))
   :manner (c / care-04
              :ARG1-of (h / have-degree-91
                          :ARG2 (g / great)
                          :ARG3 (m2 / most)))
   :time (f / finish-01
            :ARG0 y
            :ARG1 t
            :time (d / date-entity)))


# ::snt You must see to it that you pull up regularly all the baobabs , at the very first moment when they can be distinguished from the rosebushes which they resemble so closely in their earliest youth .
(o2 / obligate-01
    :ARG1 (p / pull-01
             :ARG0 (y / you)
             :ARG1 (b / baobab)
             :ARG1-of (r / regular-02)
             :time (m / moment
                      :time-of (p2 / possible-01
                                   :ARG1 (d / distinguish-01
                                            :ARG1 b
                                            :ARG2 (r2 / rosebush
                                                      :ARG2-of (r3 / resemble-01
                                                                   :ARG1 b
                                                                   :ARG1-of (c / close-10
                                                                               :degree (s / so))
                                                                   :time (e / early
                                                                            :op1 (y2 / youth
                                                                                     :poss b)
                                                                            :degree (v2 / very)))))))))


# ::snt It is very tedious work , " the little prince added , " but very easy . "
(a / add-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (c / contrast-01
            :ARG1 (t / tedious)
            :ARG2 (e / easy-05)))


# ::snt And one day he said to me : " You ought to make a beautiful drawing , so that the children where you live can see exactly how all this is .
# ::snt That would be very useful to them if they were to travel some day .
(u / useful-05
   :ARG0 (t2 / they)
   :ARG1 (t / that)
   :degree (v / very)
   :condition (t3 / travel-01
                  :ARG0 t2
                  :time (d / day)))


# ::snt Sometimes , " he added , " there is no harm in putting off a piece of work until another day .
# ::snt But when it is a matter of baobabs , that always means a catastrophe .
(c2 / contrast-01
    :ARG2 (m3 / mean-01
              :ARG1 (t / that)
              :ARG2 (c / catastrophe)
              :time (a / always)
              :condition (b / baobab)))


# ::snt I knew a planet that was inhabited by a lazy man .
(k / know-02
   :ARG0 (i / i)
   :ARG1 (p / planet
            :ARG1-of (i2 / inhabit-01
                         :ARG0 (m / man
                                  :mod (l / lazy)))))


# ::snt He neglected three little bushes ... "
(n / neglect-01
   :ARG0 (h / he)
   :ARG1 (b / bush
            :mod (l / little)))


# ::snt So , as the little prince described it to me , I have made a drawing of that planet .
(d / draw-01
   :ARG0 (i / i)
   :ARG1 (p / planet
            :mod (t / that))
   :manner (d2 / describe-01
               :ARG0 (p2 / prince)
               :ARG1 p
               :beneficiary i)
   :ARG1-of (c / cause-01))


# ::snt I do not much like to take the tone of a moralist .
(d / dislike-01
   :ARG0 (i / i)
   :ARG1 (t / take-01
            :ARG0 i
            :ARG1 (t2 / tone))
   :degree (m / much))


# ::snt But the danger of the baobabs is so little understood , and such considerable risks would be run by anyone who might get lost on an asteroid , that for once I am breaking through my reserve .
# ::snt " Children , "
(c2 / child)


# ::snt I say plainly , " watch out for the baobabs ! "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (w / watch-out-02
            :ARG0 (y / you)
            :ARG1 (b / baobab))
   :manner (p / plain))


# ::snt My friends , like myself , have been skirting this danger for a long time , without ever knowing it ; and so it is for them that I have worked so hard over this drawing .
# ::snt The lesson which I pass on by this means is worth all the trouble it has cost me .
(w / worth-02
   :ARG1 (l / lesson
            :ARG1-of (p / pass-on-09
                        :ARG0 (i / i)
                        :manner (t2 / this)))
   :ARG2 (t / trouble-05
            :ARG2-of (c / cost-01
                        :ARG1 l
                        :ARG3 i)
            :mod (a / all)))


# ::snt Perhaps you will ask me , " Why are there no other drawing in this book as magnificent and impressive as this drawing of the baobabs ? "
(p / possible-01
   :ARG1 (a / ask-01
            :ARG0 (y / you)
            :ARG1 (p2 / picture
                      :ARG1-of (d / draw-01)
                      :ARG0-of (c / cause-01
                                  :ARG1 (a2 / amr-unknown))
                      :ARG1-of (h / have-degree-91
                                  :ARG2 (m / magnificent)
                                  :ARG3 (e / equal)
                                  :ARG4 (p3 / picture
                                            :ARG1-of (d2 / draw-01)
                                            :mod (t2 / this)
                                            :topic (b2 / baobab)))
                      :ARG1-of (h2 / have-degree-91
                                   :ARG2 (i3 / impress-01
                                             :ARG0 p2)
                                   :ARG3 (e2 / equal)
                                   :ARG4 p3))
            :ARG2 (i2 / i)))


# ::snt The reply is simple .
(s / simple-02
   :ARG1 (t / thing
            :ARG2-of (r / reply-01)))


# ::snt I have tried .
(t / try-01
   :ARG0 (i / i))


# ::snt But with the others I have not been successful .
(c / contrast-01
   :ARG2 (s / succeed-01
            :ARG0 (i / i)
            :ARG1 (o / other)))


# ::snt When I made the drawing of the baobabs I was carried beyond myself by the inspiring force of urgent necessity .
(c / carry-01
   :ARG0 (f / force-01
            :ARG0 (n / necessity)
            :ARG0-of (i2 / inspire-01))
   :ARG1 (i / i)
   :destination (b / beyond
                   :op1 i)
   :time (d / draw-01
            :ARG0 i
            :ARG1 (b2 / baobab)))


# ::snt Chapter 6 .
(c / chapter)


# ::snt Oh , little prince !
(p / prince
   :mod (l / little))


# ::snt Bit by bit I came to understand the secrets of your sad little life ...
(u / understand-01
   :ARG0 (i / i)
   :ARG1 (s / secret
            :poss (l / life
                     :ARG1-of (s2 / sad-02)))
   :manner (b / bit-by-bit))


# ::snt For a long time you had found your only entertainment in the quiet pleasure of looking at the sunset .
# ::snt I learned that new detail on the morning of the fourth day , when you said to me : " I am very fond of sunsets .
(l / learn-01
   :ARG0 (i / i)
   :ARG1 (d / detail
            :ARG1-of (n / new-01)
            :mod (t / that))
   :time (d3 / date-entity
             :dayperiod (m / morning)
             :mod (d2 / day))
   :time (s / say-01
            :ARG0 (y / you)
            :ARG1 (l2 / like-01
                      :ARG0 y)
            :ARG2 i))


# ::snt Come , let us go look at a sunset now . "
(a / and
   :op1 (c / come-01
           :ARG1 (y / you))
   :op2 (g / go-05
           :ARG0 (w / we)
           :ARG1 (l / look-01
                    :ARG0 w)))


# ::snt " But we must wait , "
(c / contrast-01
   :ARG2 (o / obligate-01
            :ARG2 (w2 / wait-01)))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " Wait ?
(w / wait-01
   :polarity (a / amr-unknown))


# ::snt For what ? "
(w / wait-01
   :ARG2 (a / amr-unknown))


# ::snt " For the sunset .
(w / wait-01
   :ARG2 (s / sunset))


# ::snt We must wait until it is time . "
(o / obligate-01
   :ARG2 (w2 / wait-01
             :ARG1 (w / we)
             :duration (u / until)))


# ::snt At first you seemed to be very much surprised .
(s / seem-01
   :ARG1 (s2 / surprise-01
             :ARG1 (y / you)
             :degree (m / much))
   :time (a / at-first))


# ::snt You said to me : " I am always thinking that I am at home ! "
(s / say-01
   :ARG0 (y / you)
   :ARG1 (t / think-01
            :ARG0 y
            :ARG1 (b / be-located-at-91
                     :ARG1 y)
            :time (a / always))
   :ARG2 (i / i))


# ::snt Just so .
(j / just-so)


# ::snt Everybody knows that when it is noon in the United States the sun is setting over France .
(k / know-01
   :ARG0 (e / everybody)
   :ARG1 (s / set-11
            :ARG1 (s2 / sun)
            :location (c2 / country)
            :time (d / date-entity)))


# ::snt If you could fly to France in one minute , you could go straight into the sunset , right from noon .
(p / possible-01
   :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG3 (d / date-entity)
            :ARG4 (s / sunset)
            :ARG1-of (s2 / straight-04))
   :condition (p2 / possible-01
                  :ARG1 (f / fly-01
                           :ARG1 y)))


# ::snt Unfortunately , France is too far away for that .
(f / fortunate-01
   :ARG2 (b / be-located-at-91
            :ARG1 (c / country)
            :ARG2 (a / away
                     :ARG1-of (h / have-degree-91
                                 :ARG2 (f2 / far)
                                 :ARG3 (t / too)
                                 :ARG6 (t2 / that)))))


# ::snt But on your tiny planet , my little prince , all you need do is move your chair a few steps .
(s2 / say-01
    :ARG1 (c2 / contrast-01
              :ARG2 (o / obligate-01)))


# ::snt You can see the day end and the twilight falling whenever you like ...
(p / possible-01
   :ARG1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (a / and)
            :time (l / like-02
                     :ARG0 y
                     :ARG1 s)))


# ::snt " One day , " you said to me , " I saw the sunset forty - four times ! "
(s / say-01
   :ARG0 (y / you)
   :ARG1 (s2 / see-01
             :ARG0 y
             :ARG1 (s3 / sunset)
             :time (d / day))
   :ARG2 (i / i))


# ::snt And a little later you added : " You know -- one loves the sunset , when one is so sad ... "
(a / and
   :op1 (a2 / add-01
            :ARG0 (y / you)
            :ARG1 (l3 / love-01)
            :time (a3 / after)))


# ::snt " Were you so sad , then ? "
(s / sad-02
   :polarity (a / amr-unknown)
   :ARG1 (y / you)
   :time (t / then)
   :degree (s2 / so))


# ::snt I asked , " on the day of the forty - four sunsets ? "
(a / ask-01
   :ARG0 (i / i)
   :ARG1 (t / truth-value
            :polarity-of (b / be-temporally-at-91
                            :ARG2 (d / day
                                     :ARG0-of (h / have-03
                                                 :ARG1 (s / sunset))))))


# ::snt But the little prince made no reply .
(c / contrast-01
   :ARG2 (r / reply-01
            :ARG0 (p / prince)))


# ::snt Chapter 7 .
(c / chapter)


# ::snt On the fifth day -- again , as always , it was thanks to the sheep -- the secret of the little prince 's life was revealed to me .
(r / reveal-01
   :ARG0 (s / sheep
            :ARG1-of (t / thank-01))
   :ARG1 (s2 / secret
             :poss (l / life))
   :ARG2 (i / i)
   :time (d / day
            :ord (o / ordinal-entity))
   :mod (a / again)
   :time (a2 / always))


# ::snt Abruptly , without anything to lead up to it , and as if the question had been born of long and silent meditation on his problem , he demanded : " A sheep -- if it eats little bushes , does it eat flowers , too ? "
(d / demand-01
   :ARG0 (h / he)
   :ARG1 (t3 / truth-value
             :polarity-of (e / eat-01
                             :ARG0 (s / sheep)
                             :ARG1 (f / flower
                                      :mod (t / too))
                             :condition (e2 / eat-01
                                            :ARG0 s
                                            :ARG1 (b / bush))))
   :manner (a / abrupt)
   :conj-as-if (b2 / bear-02
                   :ARG0 (m / meditate-01
                            :ARG1-of (l3 / long-03))
                   :ARG1 (t2 / thing
                             :ARG1-of (q / question-01)))
   :ARG2-of (l2 / lead-up-05
                :ARG1 (a2 / anything)))


# ::snt " A sheep , "
(s / sheep)


# ::snt I answered , " eats anything it finds in its reach . "
(a / answer-01
   :ARG0 (i / i)
   :ARG1 (e / eat-01
            :ARG1 (a2 / anything
                      :ARG1-of (f / find-01
                                  :ARG0 (i2 / it)
                                  :location (r / reach-03
                                               :ARG0 i2)))))


# ::snt " Even flowers that have thorns ? "
(f / flower
   :polarity (a / amr-unknown)
   :mod (e / even)
   :ARG0-of (h / have-03
               :ARG1 (t / thorn)))


# ::snt " Yes , even flowers that have thorns . "
(f / flower
   :mod (e / even)
   :ARG0-of (h / have-03
               :ARG1 (t / thorn)))


# ::snt " Then the thorns -- what use are they ? "
(h / have-purpose-91
   :ARG1 (t / thorn)
   :ARG2 (a / amr-unknown)
   :ARG1-of (h2 / have-condition-91))


# ::snt I did not know .
(k / know-01
   :ARG0 (i / i))


# ::snt At that moment I was very busy trying to unscrew a bolt that had got stuck in my engine .
(t / try-01
   :ARG0 (i / i
            :ARG1-of (b2 / busy-01
                         :degree (v / very)))
   :ARG1 (u / unscrew-01
            :ARG0 i
            :ARG1 (b / bolt
                     :ARG1-of (s / stick-01
                                 :ARG2 (e / engine
                                          :poss i))))
   :time (m / moment
            :mod (t2 / that)))


# ::snt I was very much worried , for it was becoming clear to me that the breakdown of my plane was extremely serious .
(c2 / cause-01
    :ARG0 (c / clear-06
             :ARG1 (s / serious-02))
    :ARG1 (w / worry-01
             :quant (m / much)))


# ::snt And I had so little drinking - water left that I had to fear for the worst .
# ::snt " The thorns - - what use are they ? "
(u / use-01
   :ARG1 (t / thorn)
   :ARG2 (a / amr-unknown))


# ::snt The little prince never let go of a question , once he had asked it .
(l / let-01
   :ARG0 (p / prince
            :mod (l2 / little))
   :ARG1 (g / go-01
            :ARG1 (t / thing))
   :time (o / once
            :op1 (a / ask-01
                    :ARG0 p)))


# ::snt As for me , I was upset over that bolt .
(u / upset-01
   :ARG0 (b / bolt
            :mod (t / that))
   :ARG1 (i / i))


# ::snt And I answered with the first thing that came into my head : " The thorns are of no use at all .
(a / and
   :op1 (a2 / answer-01
            :ARG0 (i / i)
            :ARG2 (t / thing
                     :ARG1-of (c / come-01))))


# ::snt Flowers have thorns just for spite ! "
(h / have-03
   :ARG0 (f / flower)
   :ARG1 (t / thorn)
   :purpose (s / spite)
   :mod (j / just))


# ::snt " Oh ! "
(o / oh)


# ::snt There was a moment of complete silence .
(m / moment
   :ARG1-of (c / compose-01
               :ARG2 (s / silent
                        :ARG1-of (c2 / complete-02))))


# ::snt Then the little prince flashed back at me , with a kind of resentfulness : " I do n't believe you !
(f / flash-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b / believe-01
            :ARG0 p
            :ARG1 (i / i))
   :ARG2 i
   :time (t / then)
   :manner (r / resent-01
              :ARG0 p
              :mod (k / kind))
   :direction (b2 / back))


# ::snt Flowers are weak creatures .
(c / creature
   :ARG1-of (w / weak-02)
   :domain (f / flower))


# ::snt They are naïve .
(n / naive
   :domain (t / they))


# ::snt They believe that their thorns are terrible weapons ... "
(b2 / believe-01
    :ARG0 (t / they)
    :ARG1 (w / weapon
             :domain (t2 / thorn
                         :poss t)
             :ARG1-of (t3 / terrible-01)))


# ::snt I did not answer .
(a / answer-01
   :ARG0 (i / i))


# ::snt Again the little prince disturbed my thoughts .
(d / disturb-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / think-01
            :ARG0 (i / i))
   :mod (a / again))


# ::snt " And you actually believe that the flowers - - "
(a / and
   :op1 (b / believe-01
           :ARG0 (y / you)
           :ARG1 (d / do-02)
           :ARG1-of (a2 / actual-02)))


# ::snt " Oh , no ! "
(n / no
   :mod (o / oh))


# ::snt I cried .
(c / cry-01
   :ARG0 (i / i))


# ::snt " No , no no !
(n / no)


# ::snt I do n't believe anything .
(b2 / believe-01
    :ARG0 (i / i)
    :ARG1 (a2 / anything))


# ::snt I answered you with the first thing that came into my head .
(a / answer-01
   :ARG0 (i / i
            :part h)
   :ARG1 (y / you)
   :ARG2 (t / thing
            :ord (o / ordinal-entity)
            :ARG1-of (c / come-01
                        :ARG4 (h / head))))


# ::snt Do n't you see - - I am very busy with matters of consequence ! "
(s / see-01
   :ARG0 (y / you)
   :ARG1 (b / busy-01
            :ARG1 (i / i)
            :ARG2 (m / matter
                     :ARG1-of (c / consequential-01))
            :degree (v / very))
   :ARG1-of (r / request-confirmation-91))


# ::snt He stared at me , thunderstruck .
(s / stare-01
   :ARG0 (h / he
            :mod (t / thunderstruck))
   :ARG1 (i / i))


# ::snt " Matters of consequence ! "
(m / matter
   :ARG1-of (c / consequential-01))


# ::snt He looked at me there , with my hammer in my hand , my fingers black with engine - grease , bending down over an object which seemed to him extremely ugly ...
(l / look-01
   :ARG0 (h / he)
   :ARG1 (i / i
            :ARG0-of (b2 / bend-01
                         :destination (d / down)
                         :location (o / object
                                      :mod (u / ugly)))
            :ARG0-of (h4 / have-03
                         :ARG1 (h2 / hammer
                                   :poss i)
                         :location (h3 / hand))
            :part h3
            :ARG0-of (h5 / have-03
                         :ARG1 (f / finger
                                  :ARG1-of (b / black-04
                                              :ARG0 (g / grease
                                                       :mod (e / engine)))))
            :part f)
   :location (t / there))


# ::snt " You talk just like the grown - ups ! "
(t2 / talk-01
    :ARG0 (y / you)
    :ARG1-of (r / resemble-01
                :ARG2 (g2 / grown-up)
                :mod (j2 / just)))


# ::snt That made me a little ashamed .
(s / shame-01
   :ARG0 (t / that)
   :ARG1 (i / i)
   :degree (l / little))


# ::snt But he went on , relentlessly : " You mix everything up together ...
(c / contrast-01
   :ARG2 (g / go-on-25
            :ARG0 (h / he)
            :ARG1 (m / mix-up-02)
            :manner (r / relentless)))


# ::snt You confuse everything ... "
(c2 / confuse-01
    :ARG0 (y2 / you)
    :ARG2 (e2 / everything))


# ::snt He was really very angry .
(a / angry
   :domain (h / he)
   :degree (v / very)
   :ARG1-of (r / real-04))


# ::snt He tossed his golden curls in the breeze .
(t / toss-01
   :ARG0 (h / he)
   :ARG1 (c / curl
            :poss h
            :mod (g / golden))
   :location (b / breeze))


# ::snt " I know a planet where there is a certain red - faced gentleman .
(k / know-02
   :ARG0 (i / i)
   :ARG1 (p / planet
            :location-of (g2 / gentleman
                             :mod (c / certain)
                             :part (f / face
                                      :ARG1-of (r / red-02)))))


# ::snt He has never smelled a flower .
(s / smell-01
   :ARG0 (h / he)
   :ARG1 (f / flower)
   :time (e / ever))


# ::snt He has never looked at a star .
(l / look-01
   :ARG0 (h / he)
   :ARG1 (s / star)
   :time (e / ever))


# ::snt He has never loved any one .
(l2 / love-01
    :ARG0 (h3 / he)
    :ARG1 (a2 / anyone)
    :time (e / ever))


# ::snt He has never done anything in his life but add up figures .
(d / do-02
   :ARG0 (h / he)
   :ARG1 (a2 / anything)
   :time (l / live-01
            :ARG0 h)
   :time (e / ever)
   :ARG2-of (e2 / except-01
                :ARG1 (a / add-up-04
                         :ARG0 h
                         :ARG1 (f / figure))))


# ::snt And all day he says over and over , just like you : ' I am busy with matters of consequence ! ' And that makes him swell up with pride .
# ::snt But he is not a man - - he is a mushroom ! "
(c / contrast-01
   :ARG2 (a / and
            :op1 (m / man)
            :op2 (m2 / mushroom)))


# ::snt " A what ? "
(a / amr-unknown)


# ::snt " A mushroom ! "
(m / mushroom)


# ::snt The little prince was now white with rage .
(w / white-03
   :ARG1 (p / prince
            :mod (l / little))
   :time (n / now)
   :ARG1-of (c / cause-01
               :ARG0 (e / enrage-01
                        :ARG1 p)))


# ::snt " The flowers have been growing thorns for millions of years .
(g / grow-03
   :ARG0 (f / flower)
   :ARG1 (t / thorn)
   :duration (m / multiple
                :op1 (t2 / temporal-quantity)))


# ::snt For millions of years the sheep have been eating them just the same .
(e / eat-01
   :ARG0 (s / sheep)
   :ARG1 (t / they)
   :duration (m / multiple
                :op1 (t2 / temporal-quantity))
   :ARG1-of (h / have-concession-91))


# ::snt And is it not a matter of consequence to try to understand why the flowers go to so much trouble to grow thorns which are never of any use to them ?
# ::snt Is the warfare between the sheep and the flowers not important ?
(i / important-01
   :ARG1 (w / war-01
            :ARG0 (s / sheep)
            :ARG1 (f / flower))
   :ARG1-of (r / request-confirmation-91))


# ::snt Is this not of more consequence than a fat red - faced gentleman 's sums ?
# ::snt And if I know - - I , myself - - one flower which is unique in the world , which grows nowhere but on my planet , but which one little sheep can destroy in a single bite some morning , without even noticing what he is doing - - Oh !
# ::snt You think that is not important ! "
(t / think-01
   :ARG0 (y / you)
   :ARG1 (t2 / that
             :ARG1-of (i / important-01)))


# ::snt His face turned from white to red as he continued : " If some one loves a flower , of which just one single blossom grows in all the millions and millions of stars , it is enough to make him happy just to look at the stars .
# ::snt And you think that is not important ! "
(a2 / and
    :op1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (i / important-01)))


# ::snt He could not say anything more .
(p / possible-01
   :ARG1 (s / say-01
            :ARG0 (h / he)
            :ARG1 (a / anything)))


# ::snt His words were choked by sobbing .
(c / choke-up-04
   :ARG0 (s / sob-01)
   :ARG1 (w / word
            :poss (h / he)))


# ::snt The night had fallen .
(f / fall-04
   :ARG1 (n / night))


# ::snt I had let my tools drop from my hands .
(l / let-01
   :ARG0 (i / i
            :part h)
   :ARG1 (d / drop-01
            :ARG1 (t / tool
                     :poss i)
            :ARG3 (h / hand)))


# ::snt Of what moment now was my hammer , my bolt , or thirst , or death ?
(o / or
   :op1 (h / hammer
           :poss (i / i))
   :op2 (b / bolt
           :poss i)
   :op3 (t / thirst-01
           :ARG0 i)
   :op4 (d / die-01
           :ARG1 i)
   :time (m / moment
            :mod (a / amr-unknown)))


# ::snt On one star , one planet , my planet , the Earth , there was a little prince to be comforted .
(b / be-located-at-91
   :ARG1 (p / prince
            :mod (l / little)
            :ARG1-of (c / comfort-01
                        :ARG2-of (o / obligate-01)))
   :ARG2 (a / and
            :op1 (s / star)
            :op2 (p2 / planet)
            :op3 (p4 / planet)))


# ::snt I took him in my arms , and rocked him .
(a / and
   :op1 (t / take-01
           :ARG0 (i / i)
           :ARG1 (h / he))
   :op2 (r / rock-01
           :ARG0 i
           :ARG1 h))


# ::snt I said to him : " The flower that you love is not in danger .
(s / say-01
   :ARG0 (i / i)
   :ARG1 (e / endanger-01
            :ARG1 (f / flower
                     :ARG1-of (l / love-01
                                 :ARG0 (h / he))))
   :ARG2 h)


# ::snt I will draw you a muzzle for your sheep .
(d / draw-01
   :ARG0 (i / i)
   :ARG1 (t / thing
            :ARG2-of (m / muzzle-01
                        :ARG1 (s / sheep
                                 :poss (y / you))))
   :ARG2 y)


# ::snt I will draw you a railing to put around your flower .
(d2 / draw-01
    :ARG0 (i / i)
    :ARG1 (r / railing
             :ARG1-of (p / put-01
                         :ARG2 (a / around
                                  :op1 (f / flower
                                          :poss (y / you)))))
    :ARG2 y)


# ::snt I will - - "
(d / do-02
   :ARG0 (i / i))


# ::snt I did not know what to say to him .
(k / know-01
   :ARG0 (i / i)
   :ARG1 (t / thing
            :ARG1-of (s / say-01
                        :ARG0 i
                        :ARG2 (h / he))))


# ::snt I felt awkward and blundering .
(f / feel-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (a2 / awkward)
            :op2 (b / blunder-01
                    :ARG0 i)))


# ::snt I did not know how I could reach him , where I could overtake him and go on hand in hand with him once more .
(k / know-01
   :ARG0 (i / i)
   :ARG1 (a2 / and
             :op1 (m / manner
                     :manner-of (r / reach-02
                                   :ARG0 i
                                   :ARG1 (h / he)
                                   :ARG1-of (p / possible-01)))
             :op2 (l / location
                     :location-of (o / overtake-01
                                     :ARG0 i
                                     :ARG1 h
                                     :ARG1-of (p2 / possible-01))
                     :location-of (g / go-on-15
                                     :ARG1 i
                                     :mod (a3 / again
                                              :mod (o2 / once))
                                     :manner (a / accompany-01
                                                :ARG0 h
                                                :ARG1 i
                                                :manner (h2 / hand-in-hand))))))


# ::snt It is such a secret place , the land of tears .
(p / place
   :mod (s / secret
           :degree (s2 / such))
   :domain (l / land
              :location-of (t / tear)))


# ::snt Chapter 8 .
(c / chapter)


# ::snt I soon learned to know this flower better .
(l / learn-01
   :ARG0 (i / i)
   :ARG1 (k / know-02
            :ARG0 i
            :ARG1 (f / flower)
            :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-03
                                 :ARG1 k)
                        :ARG3 (m / more)))
   :time (s / soon))


# ::snt On the little prince 's planet the flowers had always been very simple .
(s / simple-02
   :ARG1 (f / flower)
   :degree (v / very)
   :time (a / always)
   :location (p / planet
                :poss (p2 / prince)))


# ::snt They had only one ring of petals ; they took up no room at all ; they were a trouble to nobody .
(m / multi-sentence
   :snt1 (h / have-03
            :ARG0 (t / they)
            :ARG1 (r / ring
                     :consist-of (p / petal)))
   :snt2 (t2 / take-up-13
             :ARG0 t
             :ARG1 (r2 / room)
             :degree (a / at-all))
   :snt3 (t3 / trouble-01
             :ARG0 t
             :ARG1 (a2 / anybody)))


# ::snt One morning they would appear in the grass , and by night they would have faded peacefully away .
(a / and
   :op1 (a2 / appear-01
            :ARG1 (t / they)
            :time (d / date-entity)
            :location (g / grass))
   :op2 (f / fade-01
           :ARG1 t
           :manner (p / peaceful)
           :time (b / by)))


# ::snt But one day , from a seed blown from no one knew where , a new flower had come up ; and the little prince had watched very closely over this small sprout which was not like any other small sprouts on his planet .
# ::snt It might , you see , have been a new kind of baobab .
(p / possible-01
   :ARG1 (b2 / baobab
             :mod (k / kind
                     :ARG1-of (n / new-01))
             :domain (i / it)))


# ::snt The little prince , who was present at the first appearance of a huge bud , felt at once that some sort of miraculous apparition must emerge from it .
# ::snt But the flower was not satisfied to complete the preparations for her beauty in the shelter of her green chamber .
# ::snt She chose her colours with the greatest care .
(c / choose-01
   :ARG0 (s / she)
   :ARG1 (c2 / color
             :poss s)
   :manner (c3 / care-04
               :ARG1-of (h / have-degree-91
                           :ARG2 (g / great)
                           :ARG3 (m / most))))


# ::snt She adjusted her petals one by one .
(a / adjust-01
   :ARG0 (s / she)
   :ARG1 (p / petal
            :poss s)
   :manner (o / one-by-one))


# ::snt She did not wish to go out into the world all rumpled , like the field poppies .
(w / wish-01
   :ARG0 (s / she
            :ARG1-of (r / rumple-02
                        :mod (a / all))
            :ARG1-of (r2 / resemble-01
                         :ARG2 (p / poppy
                                  :mod (f / field))))
   :ARG1 (g / go-out-17
            :ARG0 s
            :destination (w2 / world)))


# ::snt It was only in the full radiance of her beauty that she wished to appear .
(w / wish-01
   :ARG0 (s / she)
   :ARG1 (a / appear-01
            :ARG1 s
            :manner (r / radiate-01
                       :ARG0 s)))


# ::snt Oh , yes !
(y / yes)


# ::snt She was a coquettish creature !
(r / resemble-01
   :ARG1 (s / she)
   :ARG2 (c / creature
            :mod (c2 / coquet)))


# ::snt And her mysterious adornment lasted for days and days .
(a / and
   :op1 (l / last-01
           :ARG1 (t / thing
                    :ARG2-of (a2 / adorn-01
                                 :ARG1 (s / she)
                                 :mod (m / mysterious)))
           :ARG2 (m2 / multiple)))


# ::snt And , after working with all this painstaking precision , she yawned and said : " Ah !
(a / and
   :op1 (y / yawn-01
           :ARG0 (s2 / she))
   :op2 (s / say-01
           :ARG0 s2
           :ARG1 (a2 / ah))
   :time (a3 / after
             :op1 (w / work-01
                     :ARG0 s2)))


# ::snt I am scarcely awake .
(a / awake-03
   :ARG1 (i / i)
   :degree (s / scarce))


# ::snt I beg that you will excuse me .
(b2 / beg-01
    :ARG0 (i / i)
    :ARG1 (y2 / you)
    :ARG2 (e2 / excuse-01
              :ARG0 y2
              :ARG1 i))


# ::snt My petals are still all disarranged ... "
(a3 / arrange-01
    :ARG1 (p2 / petal
              :part-of (i / i)
              :mod (a4 / all))
    :mod (s4 / still))


# ::snt But the little prince could not restrain his admiration : " Oh !
# ::snt How beautiful you are ! "
(b / beautiful-02
   :ARG1 (y / you)
   :degree (s / so))


# ::snt " Am I not ? " the flower responded , sweetly .
(r / respond-01
   :ARG0 (f / flower)
   :ARG2 (r2 / request-confirmation-91
             :ARG1 (b / beautiful-02
                      :ARG1 f))
   :manner (s / sweet-03))


# ::snt " And I was born at the same moment as the sun ... "
(a / and
   :op2 (b / bear-02
           :ARG1 (i / i)
           :time (m / moment
                    :ARG1-of (s / same-01
                                :ARG2 (s2 / sun)))))


# ::snt The little prince could guess easily enough that she was not any too modest - - but how moving - - and exciting - - she was !
(p / possible-01
   :ARG1 (g / guess-01
            :ARG0 (p2 / prince)
            :ARG1 (c / contrast-01)
            :ARG1-of (e / easy-05
                        :mod (e2 / enough))))


# ::snt " I think it is time for breakfast , " she added an instant later .
(a / add-01
   :ARG0 (s / she)
   :ARG1 (t / think-01
            :ARG0 s
            :ARG1 (t2 / time))
   :time (a2 / after
             :quant (i / instant)))


# ::snt " If you would have the kindness to think of my needs - - "
(t / think-01
   :ARG0 (y / you)
   :ARG1 (t2 / thing
             :ARG1-of (n / need-01
                         :ARG0 (i / i)))
   :ARG1-of (k2 / kind-01
                :ARG0 y
                :ARG2 i))


# ::snt And the little prince , completely abashed , went to look for a sprinkling - can of fresh water .
# ::snt So , he tended the flower .
(t / tend-01
   :ARG0 (h / he)
   :ARG1 (f / flower)
   :ARG1-of (c / cause-01))


# ::snt So , too , she began very quickly to torment him with her vanity - - which was , if the truth be known , a little difficult to deal with .
(b / begin-01
   :ARG0 (s / she)
   :ARG1 (t2 / torment-01
             :ARG0 s
             :ARG1 (h / he)
             :ARG2 (v2 / vanity
                       :poss s
                       :ARG2-of (d3 / deal-01
                                    :ARG0 h
                                    :mod (d / difficult
                                            :degree (l / little))
                                    :condition (k / know-01
                                                  :ARG1 (t3 / truth)))))
   :mod (t / too)
   :ARG1-of (q / quick-02
               :degree (v / very)))


# ::snt One day , for instance , when she was speaking of her four thorns , she said to the little prince : " Let the tigers come with their claws ! "
(s / say-01
   :ARG0 (s2 / she
             :part t2)
   :ARG1 (c / come-01
            :ARG1 (t / tiger))
   :ARG2 (p / prince
            :mod (l / little))
   :time (d / day
            :mod (o / one))
   :ARG0-of (e / exemplify-01)
   :time (s3 / speak-01
             :ARG0 s2
             :ARG1 (t2 / thorn)))


# ::snt " There are no tigers on my planet , " the little prince objected .
(o / object-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / tiger
            :location (p2 / planet
                          :poss p)))


# ::snt " And , anyway , tigers do not eat weeds . "
(a / and
   :op2 (e / eat-01
           :ARG0 (t / tiger)
           :ARG1 (w / weed)
           :mod (a2 / anyway)))


# ::snt " I am not a weed , " the flower replied , sweetly .
(r / reply-01
   :ARG0 (f / flower)
   :ARG2 (w / weed
            :domain f)
   :manner (s / sweet-03))


# ::snt " Please excuse me ... "
(e / excuse-01
   :ARG0 (y / you)
   :ARG1 (i / i))


# ::snt " I am not at all afraid of tigers , " she went on , " but I have a horror of drafts .
(g / go-on-25
   :ARG0 (s / she)
   :ARG1 (c / contrast-01
            :ARG1 (f / fear-01
                     :ARG0 s)
            :ARG2 (a2 / abhor-01
                      :ARG0 s)))


# ::snt I suppose you would n't have a screen for me ? "
(s / suppose-01
   :ARG0 (i / i)
   :ARG1 (h / have-03
            :ARG0 (y / you)
            :ARG1 (s2 / screen)
            :beneficiary i
            :ARG1-of (r / request-confirmation-91)))


# ::snt " At night I want you to put me under a glass globe .
# ::snt It is very cold where you live .
(c / cold-01
   :degree (v / very)
   :location (l / live-01
                :ARG0 (y / you)))


# ::snt In the place I came from - - "
(l / location
   :ARG3-of (c / come-01
               :ARG1 (i / i)))


# ::snt She had come in the form of a seed .
(c / come-01
   :ARG1 (s / she)
   :time-of (s2 / seed
                :domain s))


# ::snt She could not have known anything of any other worlds .
(p / possible-01
   :ARG1 (k / know-01
            :ARG0 (s / she)
            :ARG1 (a / anything)))


# ::snt Embarassed over having let herself be caught on the verge of such a naïve untruth , she coughed two or three times , in order to put the little prince in the wrong .
(c / cough-01
   :ARG0 (s / she
            :ARG1-of (e / embarrass-01
                        :ARG0 (l2 / let-01
                                  :ARG0 s
                                  :ARG1 (c2 / catch-03
                                            :ARG1 s))))
   :purpose (p / put-03
               :ARG0 s
               :ARG1 (p2 / prince)
               :ARG2 (w / wrong-04
                        :ARG1 p2))
   :frequency (o / or))


# ::snt " The screen ? "
(s / screen
   :polarity (a / amr-unknown))


# ::snt " I was just going to look for it when you spoke to me ... "
(l3 / look-01
    :ARG0 (i / i)
    :ARG1 (i2 / it)
    :time (s3 / speak-01
              :ARG0 (y2 / you)
              :ARG2 i))


# ::snt Then she forced her cough a little more so that he should suffer from remorse just the same .
(f / force-02
   :ARG0 (s / she)
   :ARG1 (c / cough-01
            :ARG0 s
            :ARG1-of (h3 / have-quant-91
                         :ARG3 (m / more
                                  :quant (l / little))))
   :time (t / then)
   :purpose (s2 / suffer-01
                :ARG0 (h / he)
                :ARG1 (r / remorse)
                :ARG1-of (h2 / have-concession-91)))


# ::snt So the little prince , in spite of all the good will that was inseparable from his love , had soon come to doubt her .
(c / come-04
   :ARG1 (p / prince
            :mod (l / little))
   :ARG2 (d / doubt-01
            :ARG0 p
            :ARG1 (s3 / she))
   :time (s / soon)
   :ARG1-of (c2 / cause-01)
   :concession (w / will
                  :ARG1-of (g / good-02)
                  :mod (a / all)
                  :ARG1-of (s2 / separate-01
                               :ARG2 (l2 / love-01
                                         :ARG0 p)
                               :ARG1-of (p2 / possible-01))))


# ::snt He had taken seriously words which were without importance , and it made him very unhappy .
(s / serious-01
   :ARG1 (h / he)
   :ARG2 (w / word-01
            :ARG1-of (i / important-01))
   :ARG0-of (m / make-02
               :ARG1 (h2 / happy-01
                         :ARG1 h
                         :degree (v / very))))


# ::snt " I ought not to have listened to her , " he confided to me one day . "
(c / confide-01
   :ARG0 (h / he)
   :ARG1 (r / recommend-01
            :ARG1 (l / listen-01
                     :ARG0 h)
            :ARG2 h)
   :ARG2 (i / i)
   :time (d / day
            :mod (o / one)))


# ::snt One never ought to listen to the flowers .
(r / recommend-01
   :ARG1 (l / listen-01
            :ARG0 (o2 / one)
            :ARG1 (f / flower)
            :time (e / ever)))


# ::snt One should simply look at them and breathe their fragrance .
(r / recommend-01
   :ARG1 (a / and
            :op1 (l / look-01)
            :op2 (b / breathe-01)))


# ::snt Mine perfumed all my planet .
(p / perfume-01
   :ARG0 (t / thing
            :poss (i / i))
   :ARG1 (p2 / planet
             :mod (a / all)
             :poss i))


# ::snt But I did not know how to take pleasure in all her grace .
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (i / i)
            :manner (p2 / please-01
                        :ARG1 i)))


# ::snt This tale of claws , which disturbed me so much , should only have filled my heart with tenderness and pity . "
(r2 / recommend-01
    :ARG1 (f / fill-01
             :ARG0 (t2 / tale
                       :ARG0-of (d / disturb-01
                                   :ARG1 (i / i
                                            :part h)
                                   :degree (m / much
                                              :degree (s / so))))
             :ARG1 (h / heart)
             :ARG2 (a / and)
             :mod (o / only)))


# ::snt And he continued his confidences : " The fact is that I did not know how to understand anything !
(a / and
   :op1 (c / continue-02
           :ARG0 (h / he
                    :ARG0-of (u / understand-01
                                :ARG1 (a2 / anything)))
           :ARG1 (c2 / confide-01
                     :ARG0 h)))


# ::snt I ought to have judged by deeds and not by words .
(r2 / recommend-01
    :ARG1 (a2 / and
              :op1 (j / judge-01)
              :op2 (j2 / judge-01)))


# ::snt She cast her fragrance and her radiance over me .
(c / cast-01
   :ARG0 (s / she)
   :ARG1 (a / and
            :op1 (f / fragrance
                    :poss s)
            :op2 (t / thing
                    :ARG1-of (r / radiate-01
                                :ARG0 s)))
   :ARG2 (i / i))


# ::snt I ought never to have run away from her ...
(r / recommend-01
   :ARG1 (r2 / run-02
             :ARG0 (i / i)
             :time (e / ever)
             :direction (a2 / away)))


# ::snt I ought to have guessed all the affection that lay behind her poor little strategems .
(r / recommend-01
   :ARG1 (g / guess-01
            :ARG0 (i / i)
            :ARG1 (a / affection
                     :ARG1-of (l / lie-07
                                 :ARG2 (b / behind
                                          :op1 (s / strategem))))))


# ::snt Flowers are so inconsistent !
(c / consistent-01
   :ARG1 (f / flower)
   :degree (s / so))


# ::snt But I was too young to know how to love her ... "
(c / contrast-01
   :ARG2 (h / have-degree-91
            :ARG1 (i / i
                     :ARG0-of (l / love-01
                                 :ARG1 (s / she)))
            :ARG2 (y / young)
            :ARG3 (t / too)
            :ARG6 (k / know-01
                     :ARG0 i)))


# ::snt Chapter 9 .
(c / chapter)


# ::snt I believe that for his escape he took advantage of the migration of a flock of wild birds .
(b / believe-01
   :ARG0 (i / i)
   :ARG1 (t / take-advantage-02
            :ARG0 (h / he)
            :ARG1 (m / migrate-01)
            :purpose (e / escape-01
                        :ARG0 h)))


# ::snt On the morning of his departure he put his planet in perfect order .
(o / order-03
   :ARG0 (h / he)
   :ARG1 (p2 / planet
             :poss h)
   :ARG1-of (p / perfect-02)
   :time (d2 / date-entity
             :dayperiod (m / morning)
             :time-of (d / depart-01
                         :ARG0 h)))


# ::snt He carefully cleaned out his active volcanoes .
(c / clean-out-03
   :ARG0 (h / he)
   :ARG1 (v / volcano
            :poss h
            :ARG0-of (a / activity-06))
   :manner (c2 / careful))


# ::snt He possessed two active volcanoes ; and they were very convenient for heating his breakfast in the morning .
(a / and
   :op1 (p / possess-01
           :ARG0 (h / he
                    :ARG0-of (b2 / breakfast-01))
           :ARG1 (v / volcano
                    :ARG0-of (a2 / activity-06)))
   :op2 (c / convenient
           :degree (v2 / very)
           :purpose (h2 / heat-01
                        :ARG2 v)
           :domain v))


# ::snt He also had one volcano that was extinct .
(h / have-03
   :ARG0 (h2 / he)
   :ARG1 (v / volcano
            :mod (e / extinct))
   :mod (a / also))


# ::snt But , as he said , " One never knows ! "
(c / contrast-01
   :ARG2 (s / say-01
            :ARG0 (h / he)
            :ARG1 (k / know-01)))


# ::snt So he cleaned out the extinct volcano , too .
(c / clean-out-03
   :ARG0 (h / he)
   :ARG1 (v / volcano
            :mod (e / extinct))
   :mod (t / too))


# ::snt If they are well cleaned out , volcanoes burn slowly and steadily , without any eruptions .
(b / burn-01
   :ARG1 (v / volcano
            :ARG1-of (e2 / erupt-01))
   :condition (c / clean-out-03
                 :ARG1 v
                 :degree (w / well))
   :manner (s3 / steady)
   :ARG1-of (s / slow-05))


# ::snt Volcanic eruptions are like fires in a chimney .
(e / erupt-01
   :ARG1 (v / volcano)
   :ARG1-of (r / resemble-01
               :ARG2 (f / fire
                        :location (c / chimney))))


# ::snt On our earth we are obviously much too small to clean out our volcanoes .
(h / have-degree-91
   :ARG1 (w / we)
   :ARG2 (s / small)
   :ARG3 (t2 / too
             :degree (m / much))
   :ARG6 (c / clean-out-03
            :ARG0 w
            :ARG1 (v / volcano
                     :poss w))
   :ARG1-of (o / obvious-01)
   :location (e / earth
                :poss w))


# ::snt That is why they bring no end of trouble upon us .
(c / cause-01
   :ARG0 (t3 / that)
   :ARG1 (t2 / trouble-01
             :ARG0 (t4 / they)
             :ARG1 (w / we)
             :quant (e / end)))


# ::snt The little prince also pulled up , with a certain sense of dejection , the last little shoots of the baobabs .
(p / pull-01
   :ARG0 (p2 / prince
             :mod (l / little)
             :ARG0-of (s2 / sense-01
                          :ARG1 (d2 / deject-01)
                          :mod (c / certain)))
   :ARG1 (s / shoot
            :part-of (b / baobab)
            :mod (l2 / little)
            :ord (o / ordinal-entity))
   :mod (a / also)
   :direction (u / up))


# ::snt He believed that he would never want to return .
(b / believe-01
   :ARG0 (h / he)
   :ARG1 (w / want-01
            :ARG0 h
            :ARG1 (r / return-01
                     :ARG1 h)
            :time (e / ever)))


# ::snt But on this last morning all these familiar tasks seemed very precious to him .
(c / contrast-01
   :ARG2 (s / seem-01
            :ARG1 (p / precious)
            :ARG2 (h / he)
            :time (d / date-entity)))


# ::snt " Goodbye , " he said to the flower .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (g / goodbye)
   :ARG2 (f / flower))


# ::snt But she made no answer .
(c / contrast-01
   :ARG2 (a2 / answer-01
             :ARG0 (s / she)))


# ::snt " Goodbye , " he said again .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (g / goodbye)
   :mod (a / again))


# ::snt The flower coughed .
(c / cough-01
   :ARG0 (f / flower))


# ::snt But it was not because she had a cold .
(c2 / contrast-01
    :ARG2 (c3 / cause-01
              :ARG0 (h / have-03)
              :ARG1 (i / it)))


# ::snt " I have been silly , " she said to him , at last .
(s / say-01
   :ARG0 (s2 / she)
   :ARG1 (s4 / silly
             :domain s2)
   :ARG2 (h / he)
   :time (a / at-last))


# ::snt " I ask your forgiveness .
(a / ask-02
   :ARG0 (i / i)
   :ARG1 (f / forgive-01
            :ARG0 (y / you)
            :ARG1 i)
   :ARG2 y)


# ::snt Try to be happy ... "
(t / try-01
   :ARG0 (y / you)
   :ARG1 (h / happy-01
            :ARG1 y))


# ::snt He was surprised by this absence of reproaches .
(s / surprise-01
   :ARG0 (a / absent-01
            :ARG1 (r / reproach-01))
   :ARG1 (h / he))


# ::snt He stood there all bewildered , the glass globe held arrested in mid - air .
(s / stand-01
   :ARG1 (h / he
            :ARG1-of (b / bewilder-01
                        :degree (a / all))
            :ARG0-of (h2 / hold-01
                         :ARG1 (g / globe
                                  :consist-of (g2 / glass)
                                  :ARG1-of (a2 / arrest-02
                                               :location (m / midair)))))
   :ARG2 (t / there))


# ::snt He did not understand this quiet sweetness .
(u / understand-01
   :ARG0 (h / he)
   :ARG1 (s / sweet-05
            :ARG1 (t / this)
            :ARG1-of (q / quiet-04)))


# ::snt " Of course I love you , " the flower said to him .
(s / say-01
   :ARG0 (f / flower-01)
   :ARG1 (l / love-01
            :ARG0 f
            :ARG1 (h / he)
            :mod (o / of-course))
   :ARG2 h)


# ::snt " It is my fault that you have not known it all the while .
(f / fault-01
   :ARG1 (i3 / i)
   :ARG2 (k / know-01
            :ARG0 (y / you)
            :ARG1 (i2 / it)
            :time (w / while-away-01)))


# ::snt That is of no importance .
(i / important-01
   :ARG1 (t / that))


# ::snt But you - - you have been just as foolish as I .
(c / contrast-01
   :ARG2 (h / have-degree-91
            :ARG1 (y / you)
            :ARG2 (f / foolish)
            :ARG3 (e / equal)
            :ARG4 (i / i)))


# ::snt Try to be happy ... let the glass globe be .
# ::snt I do n't want it any more . "
(w / want-01
   :ARG0 (i / i)
   :ARG1 (i2 / it)
   :time (a / anymore))


# ::snt " But the wind - - "
(c / contrast-01
   :ARG2 (w / wind))


# ::snt " My cold is not so bad as all that ... the cool night air will do me good .
(a / and
   :op1 (h / have-degree-91
           :ARG1 (c3 / cold)
           :ARG2 (b / bad-05
                    :ARG1 c3)
           :ARG3 (e / equal)
           :ARG4 (t / that))
   :op2 (g / good-04
           :ARG1 (a3 / air
                     :ARG1-of (c / cool-06))))


# ::snt I am a flower . "
(f / flower
   :domain (i / i))


# ::snt " But the animals - - "
(c / contrast-01
   :ARG2 (a / animal))


# ::snt " Well , I must endure the presence of two or three caterpillars if I wish to become acquainted with the butterflies .
(h / have-concession-91
   :ARG2 (o / obligate-01
            :ARG1 (i / i)
            :ARG2 (e / endure-01
                     :ARG1 i)))


# ::snt It seems that they are very beautiful .
(s / seem-01
   :ARG1 (b / beautiful-02
            :ARG1 (t2 / they)
            :degree (v2 / very)))


# ::snt And if not the butterflies - - and the caterpillars - - who will call upon me ?
(c / call-on-05
   :ARG0 (a / amr-unknown)
   :ARG1 (i / i)
   :condition (c3 / call-on-05
                  :ARG0 (a2 / and)
                  :ARG1 i))


# ::snt You will be far away ... as for the large animals - - I am not at all afraid of any of them .
(a / and
   :op1 (a2 / away
            :extent (f / far)
            :location-of (y / you))
   :op2 (f2 / fear-01
            :ARG0 (i / i)
            :ARG1 (a3 / animal)
            :degree (a5 / at-all)))


# ::snt I have my claws . "
(h / have-03
   :ARG0 (i / i
            :part c)
   :ARG1 (c / claw))


# ::snt And , naïvely , she showed her four thorns .
(s / show-01
   :ARG0 (s2 / she
             :part t)
   :ARG1 (t / thorn)
   :manner (n / naive))


# ::snt Then she added : " Do n't linger like this .
(a / add-01
   :ARG0 (s / she)
   :ARG1 (l / linger-01
            :ARG1 (y / you)
            :manner (t3 / this))
   :time (t / then))


# ::snt You have decided to go away .
(d / decide-01
   :ARG0 (y / you)
   :ARG1 (g / go-02
            :ARG0 y
            :direction (a / away)))


# ::snt Now go ! "
(g / go-02
   :ARG0 (y / you)
   :time (n / now))


# ::snt For she did not want him to see her crying .
(w / want-01
   :ARG0 (s / she)
   :ARG1 (s2 / see-01
             :ARG0 (h / he)
             :ARG1 (c / cry-02
                      :ARG0 s)))


# ::snt She was such a proud flower ...
(p / pride-01
   :ARG0 (f2 / flower
             :domain (s / she))
   :degree (s2 / such))


# ::snt Chapter 10 .
(c / chapter)


# ::snt He found himself in the neighborhood of the asteroids 325 , 326 , 327 , 328 , 329 , and 330 .
(f / find-out-03
   :ARG0 (h / he)
   :ARG1 (b / be-located-at-91
            :ARG1 h
            :ARG2 (n / neighborhood
                     :location-of (a3 / and
                                      :op1 (a4 / asteroid
                                               :name (n2 / name))
                                      :op2 (a5 / asteroid
                                               :name (n3 / name))
                                      :op3 (a6 / asteroid
                                               :name (n4 / name))
                                      :op4 (a7 / asteroid
                                               :name (n5 / name))
                                      :op5 (a8 / asteroid
                                               :name (n6 / name))
                                      :op6 (a9 / asteroid
                                               :name (n7 / name))))))


# ::snt He began , therefore , by visiting them , in order to add to his knowledge .
(b / begin-01
   :ARG0 (h / he)
   :ARG2 (v / visit-01
            :ARG0 h
            :ARG1 (t2 / they))
   :mod (t / therefore)
   :purpose (a / add-02
               :ARG0 v
               :ARG2 (k / knowledge
                        :poss h)))


# ::snt The first of them was inhabited by a king .
(i / inhabit-01
   :ARG0 (k / king)
   :ARG1 (t2 / thing
             :ord (o / ordinal-entity)
             :ARG1-of (i2 / include-91
                          :ARG2 (t / they))))


# ::snt Clad in royal purple and ermine , he was seated upon a throne which was at the same time both simple and majestic .
(s / seat-01
   :ARG1 (h / he
            :ARG1-of (c / clad-01
                        :ARG2 (a / and
                                 :op1 (p / purple-02)
                                 :op2 (e / ermine))))
   :ARG2 (t / throne
            :ARG1-of (s2 / simple-02)
            :mod (m / majesty)))


# ::snt " Ah !
(a2 / ah)


# ::snt Here is a subject , " exclaimed the king , when he saw the little prince coming .
(e / exclaim-01
   :ARG0 (k / king)
   :ARG1 (h2 / here
             :location-of (s / subject))
   :time (s2 / see-01
             :ARG0 k
             :ARG1 (p / prince
                      :ARG1-of (c / come-01))))


# ::snt He did not know how the world is simplified for kings .
(k / know-01
   :ARG0 (h / he)
   :ARG1 (s / simplify-01
            :ARG1 (w / world)
            :beneficiary (k2 / king)))


# ::snt To them , all men are subjects .
(o / opine-01
   :ARG0 (t2 / they)
   :ARG1 (s2 / subject
             :domain (m2 / man)))


# ::snt " Approach , so that I may see you better , " said the king , who felt consumingly proud of being at last a king over somebody .
(s / say-01
   :ARG0 (k / king
            :ARG0-of (p / pride-01
                        :ARG2 (r / reign-01
                                 :ARG0 k
                                 :ARG1 (s3 / somebody)
                                 :time (a2 / at-last))))
   :ARG1 (a / approach-01
            :ARG1 (y / you)
            :purpose (s2 / see-01
                         :ARG0 k
                         :ARG1 y
                         :ARG1-of (h / have-degree-91
                                     :ARG2 (w / well)
                                     :ARG3 (m / more)))))


# ::snt The little prince looked everywhere to find a place to sit down ; but the entire planet was crammed and obstructed by the king 's magnificent ermine robe .
(a / and
   :op1 (c / cram-01
           :ARG1 (r2 / robe)
           :ARG2 (p3 / planet))
   :op2 (o / obstruct-01
           :ARG0 r2
           :ARG1 p3)
   :concession (l / look-01
                  :ARG0 (p / prince)
                  :ARG1 (p2 / place)
                  :location (e / everywhere)))


# ::snt So he remained standing upright , and , since he was tired , he yawned .
(a / and
   :op1 (r / remain-01
           :ARG1 (h / he)
           :ARG3 (s / stand-01
                    :ARG1 h))
   :op2 (y / yawn-01
           :ARG0 h
           :ARG1-of (c / cause-01
                       :ARG0 (t / tire-01
                                :ARG1 h))))


# ::snt " It is contrary to etiquette to yawn in the presence of a king , " the monarch said to him .
(s / say-01
   :ARG0 (m / monarch)
   :ARG1 (c / contrary-01
            :ARG1 (y / yawn-01)
            :ARG2 (e / etiquette))
   :ARG2 (h / he))


# ::snt " I forbid you to do so . "
(f / forbid-01
   :ARG0 (i / i)
   :ARG1 (d / do-02
            :ARG0 (y / you)
            :ARG1 (s / so))
   :ARG2 y)


# ::snt " I can n't help it .
(p / possible-01
   :ARG1 (h / help-02
            :ARG0 (i / i)
            :ARG1 (i2 / it)))


# ::snt " I have come on a long journey , and I have had no sleep ... "
(a / and
   :op1 (c / come-01
           :ARG1 (i / i)
           :ARG2 (j / journey-01
                    :ARG0 i
                    :ARG1-of (l / long-03)))
   :op2 (s / sleep-01
           :ARG0 i))


# ::snt " Ah , then , " the king said .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (a / ah
            :mod (t / then)))


# ::snt " I order you to yawn .
(o / order-01
   :ARG0 (i / i)
   :ARG1 (y / you)
   :ARG2 (y2 / yawn-01
             :ARG0 y))


# ::snt It is years since I have seen anyone yawning .
# ::snt Yawns , to me , are objects of curiosity .
(c2 / curious-01
    :ARG0 (y2 / yawn-01)
    :ARG1 (i / i))


# ::snt Come , now !
(c / come-01
   :ARG1 (y / you)
   :time (n / now))


# ::snt Yawn again !
(y / yawn-01
   :ARG0 (y2 / you)
   :mod (a / again))


# ::snt It is an order . "
(o2 / order-01
    :ARG2 (i2 / it))


# ::snt " That frightens me ...
(f / frighten-01
   :ARG0 (t / that)
   :ARG1 (i / i))


# ::snt I can not , any more ... " murmured the little prince , now completely abashed .
(m / murmur-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG1-of (a2 / abash-01
                         :ARG1-of (c / complete-02)
                         :time (n / now)))
   :ARG1 (p2 / possible-01
             :time (a / anymore)))


# ::snt " Hum !
(h / hum)


# ::snt Hum ! " replied the king .
(r / reply-01
   :ARG0 (k / king)
   :ARG2 (h / hum))


# ::snt " Then I - - I order you sometimes to yawn and sometimes to - - "
(o / order-01
   :ARG0 (i / i)
   :ARG1 (y / you)
   :ARG2 (a / and
            :op1 (y2 / yawn-01
                     :ARG0 y)
            :op2 (d / do-02))
   :mod (t2 / then))


# ::snt He sputtered a little , and seemed vexed .
(a / and
   :op1 (s / sputter-01
           :ARG0 (h / he)
           :degree (l / little))
   :op2 (s2 / seem-01
            :ARG1 (v / vex-01
                     :ARG1 h)))


# ::snt For what the king fundamentally insisted upon was that his authority should be respected .
(i / insist-01
   :ARG0 (k / king)
   :ARG1 (r / respect-01
            :ARG1 (a / authority
                     :poss k))
   :mod (f / fundamental))


# ::snt He tolerated no disobedience .
(t / tolerate-01
   :ARG0 (h / he)
   :ARG1 (d / disobey-01
            :ARG1 h))


# ::snt He was an absolute monarch .
(m / monarch
   :mod (a / absolute)
   :domain (h2 / he))


# ::snt But , because he was a very good man , he made his orders reasonable .
# ::snt It would be my fault . "
(f / fault-01
   :ARG1 (i2 / i))


# ::snt " May I sit down ? " came now a timid inquiry from the little prince .
(i / inquire-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t2 / truth-value
             :polarity-of (p2 / permit-01
                              :ARG1 (s / sit-down-02
                                       :ARG1 p)))
   :manner (t / timid)
   :time (n / now))


# ::snt " I order you to do so , " the king answered him , and majestically gathered in a fold of his ermine mantle .
(a / and
   :op1 (a2 / answer-01
            :ARG0 (k / king)
            :ARG1 (h / he)
            :ARG2 (o / order-01
                     :ARG0 k
                     :ARG1 h))
   :op2 (g / gather-01
           :ARG0 k
           :ARG1 (f / fold
                    :part-of (m3 / mantle
                                 :consist-of (e2 / ermine)))
           :manner (m / majesty)))


# ::snt But the little prince was wondering ...
(w / wonder-01
   :ARG0 (p / prince
            :mod (l / little)))


# ::snt The planet was tiny .
(t / tiny
   :domain (p / planet))


# ::snt Over what could this king really rule ?
(p / possible-01
   :ARG1 (r / rule-03
            :ARG0 (k / king)
            :ARG1 (a / amr-unknown)
            :ARG1-of (r2 / real-04)))


# ::snt " Sire , " he said to him , " I beg that you will excuse my asking you a question - - "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (b / beg-01
            :ARG0 h
            :ARG1 (p / person
                     :ARG1-of (t / title-01
                                 :ARG2 (s2 / sire)))
            :ARG2 (e / excuse-01
                     :ARG0 p
                     :ARG1 h))
   :ARG2 p)


# ::snt " I order you to ask me a question , " the king hastened to assure him .
(h / hasten-01
   :ARG0 (k / king)
   :ARG1 (a / assure-01
            :ARG0 k
            :ARG1 (h2 / he)
            :ARG2 (o / order-01
                     :ARG0 k
                     :ARG1 h2)))


# ::snt " Sire - - over what do you rule ? "
(s / say-01
   :ARG1 (r / rule-03
            :ARG0 (p / person
                     :ARG1-of (t / title-01
                                 :ARG2 (s2 / sire)))
            :ARG1 (a / amr-unknown))
   :ARG2 p)


# ::snt " Over everything , " said the king , with magnificent simplicity .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (e / everything)
   :ARG1-of (s2 / simple-02
                :mod (m / magnificence)))


# ::snt " Over everything ? "
(o / over
   :polarity (a / amr-unknown)
   :op1 (e / everything))


# ::snt The king made a gesture , which took in his planet , the other planets , and all the stars .
(g / gesture-01
   :ARG0 (k / king)
   :ARG0-of (t / take-in-23
               :ARG1 (a / and
                        :op1 (p / planet
                                :poss k)
                        :op2 (p2 / planet)
                        :op3 (s / star))))


# ::snt " Over all that ? " asked the little prince .
(a / ask-01
   :polarity (a2 / amr-unknown)
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (o / over
            :op1 (t / that)))


# ::snt " Over all that , " the king answered .
(a / answer-01
   :ARG0 (k / king)
   :ARG2 (o / over
            :op1 (t / that)))


# ::snt For his rule was not only absolute : it was also universal .
(a3 / and
    :op1 (a4 / absolute
             :domain (r / rule-03))
    :op2 (u2 / universal
             :domain r))


# ::snt " And the stars obey you ? "
(a / and
   :op2 (o / obey-01
           :ARG0 (s / star)
           :ARG1 (y / you)
           :ARG1-of (r / request-confirmation-91)))


# ::snt " Certainly they do , " the king said .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (d / do-02
            :ARG0 (t / they)
            :mod (c / certain)))


# ::snt " They obey instantly .
(o / obey-01
   :ARG0 (t / they)
   :manner (i / instant))


# ::snt I do not permit insubordination . "
(p / permit-01
   :ARG0 (i / i)
   :ARG1 (i2 / insubordinate-00))


# ::snt Such power was a thing for the little prince to marvel at .
(m / marvel-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (p2 / power
             :degree (s / such)))


# ::snt If he had been master of such complete authority , he would have been able to watch the sunset , not forty - four times in one day , but seventy - two , or even a hundred , or even two hundred times , without ever having to move his chair .
(p / possible-01
   :ARG1 (w / watch-01
            :ARG0 (h / he)
            :ARG1 (s / sunset
                     :ARG1-of (h3 / have-frequency-91
                                  :range (t5 / temporal-quantity
                                             :unit (y / year)))
                     :ARG1-of (h4 / have-frequency-91
                                  :ARG2 (o / or)
                                  :range t5))
            :manner (m2 / move-01
                        :ARG0 h))
   :condition (m / master
                 :poss-of (a / authority
                             :ARG1-of (c / complete-02)
                             :mod (s2 / such))
                 :domain h))


# ::snt And because he felt a bit sad as he remembered his little planet which he had forsaken , he plucked up his courage to ask the king a favor : " I should like to see a sunset ... do me that kindness ...
(p / pluck-01
   :ARG0 (h / he
            :ARG2-of (k2 / kind-01))
   :ARG1 (c / courage
            :poss h)
   :mod (u / up)
   :ARG1-of (c2 / cause-01
                :ARG0 (f / feel-01
                         :ARG0 h
                         :ARG1 (s3 / sad-02
                                   :ARG1 h)
                         :ARG1-of (c3 / cause-01
                                      :ARG0 (r / remember-01
                                               :ARG0 h
                                               :ARG1 (p2 / planet
                                                         :poss h
                                                         :ARG1-of (f2 / forsake-01
                                                                      :ARG0 h))))))
   :ARG0-of (c4 / cause-01
                :ARG1 (a / ask-02
                         :ARG0 h
                         :ARG1 (a2 / and))))


# ::snt Order the sun to set ... "
(o / order-01
   :ARG0 (y / you)
   :ARG1 (s / sun)
   :ARG2 (s2 / set-11
             :ARG1 s))


# ::snt " The general , or myself ? "
(a / amr-choice
   :op1 (p / person
           :ARG0-of (h / have-org-role-91
                       :ARG2 (g / general)))
   :op2 (i / i))


# ::snt " You , " said the little prince firmly .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (y / you)
   :ARG1-of (f / firm-03))


# ::snt " Exactly .
(e / exact)


# ::snt One much require from each one the duty which each one can perform , " the king went on .
# ::snt " Accepted authority rests first of all on reason .
(r / rest-02
   :ARG1 (a / authority
            :ARG1-of (a2 / accept-01))
   :ARG2 (r2 / reason-01)
   :mod (f / first-of-all))


# ::snt I have the right to require obedience because my orders are reasonable . "
(r / right-05
   :ARG1 (i / i)
   :ARG2 (r2 / require-01
             :ARG0 i
             :ARG1 (o / obey-01
                      :ARG1 i))
   :ARG1-of (c / cause-01
               :ARG0 (r3 / reasonable-02
                         :ARG1 (t / thing
                                  :ARG2-of (o2 / order-01)))))


# ::snt " Then my sunset ? " the little prince reminded him : for he never forgot a question once he had asked it .
(r / remind-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t2 / truth-value
             :polarity-of (s / sunset
                             :poss p))
   :ARG2 (h / he)
   :ARG1-of (c / cause-01
               :ARG0 (f / forget-01
                        :ARG0 p
                        :ARG1 (t / thing
                                 :ARG1-of (q / question-01))
                        :condition (a / ask-01
                                      :ARG0 p
                                      :ARG1 t)
                        :time (e / ever))))


# ::snt " You shall have your sunset .
(h / have-03
   :ARG0 (y / you)
   :ARG1 (s / sunset
            :poss y))


# ::snt I shall command it .
(c / command-02
   :ARG0 (i / i)
   :ARG2 (i2 / it))


# ::snt But , according to my science of government , I shall wait until conditions are favorable . "
(c3 / contrast-01
    :ARG2 (w / wait-01
             :ARG1 (i / i)
             :ARG2 (c / condition)
             :ARG1-of (c2 / cause-01
                          :ARG0 (s2 / science
                                    :domain (g / government-organization
                                               :ARG0-of (g2 / govern-01))
                                    :poss i))))


# ::snt " When will that be ? " inquired the little prince .
(i / inquire-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b2 / be-temporally-at-91
             :ARG1 (t / that)
             :ARG2 (a / amr-unknown)))


# ::snt " Hum !
(h / hum)


# ::snt Hum ! " replied the king ; and before saying anything else he consulted a bulky almanac .
(a / and
   :op1 (r / reply-01
           :ARG0 (k / king)
           :ARG2 (h / hum))
   :op2 (c / consult-01
           :ARG0 k
           :ARG1 (a2 / almanac
                     :ARG1-of (b / bulky-02))
           :time (b2 / before)))


# ::snt " Hum !
(h / hum)


# ::snt Hum !
(h / hum)


# ::snt That will be about - - about - - that will be this evening about twenty minutes to eight .
(b / be-temporally-at-91
   :ARG1 (t3 / that)
   :ARG2 (a / about
            :op1 (d / date-entity)))


# ::snt And you will see how well I am obeyed . "
(s / see-01
   :ARG0 (y / you)
   :ARG1 (o / obey-01
            :ARG1 (i / i)
            :manner (w / well)))


# ::snt The little prince yawned .
(y / yawn-01
   :ARG0 (p / prince
            :mod (l / little)))


# ::snt He was regretting his lost sunset .
(r / regret-01
   :ARG0 (h / he)
   :ARG1 (l / lose-02
            :ARG0 h
            :ARG1 (s / sunset)))


# ::snt And then , too , he was already beginning to be a little bored .
(a2 / and
    :op2 (b / begin-01
            :ARG1 (b4 / bore-02)
            :time (a / already)))


# ::snt " I have nothing more to do here , " he said to the king .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (r / remain-01
            :ARG1 (t / thing
                     :ARG1-of (d2 / do-02))
            :location (h2 / here))
   :ARG2 (k / king))


# ::snt " So I shall set out on my way again . "
(c / cause-01
   :ARG1 (s / set-out-07
            :ARG0 (i / i)
            :ARG1 (w / way
                     :poss i)
            :mod (a / again)))


# ::snt " Do not go , " said the king , who was very proud of having a subject .
(s / say-01
   :ARG0 (k / king
            :ARG0-of (p / pride-01
                        :ARG2 (h / have-03
                                 :ARG0 k
                                 :ARG1 (s2 / subject))
                        :degree (v / very)))
   :ARG1 (g / go-02
            :ARG0 (y / you)))


# ::snt " Do not go .
(g / go-02
   :ARG0 (y / you))


# ::snt I will make you a Minister ! "
(m / make-02
   :ARG0 (i / i)
   :ARG1 (h / have-org-role-91
            :ARG0 (y / you)
            :ARG2 (m2 / minister)))


# ::snt " Minister of what ? "
(m / minister
   :topic (a / amr-unknown))


# ::snt " Minster of - - of Justice ! "
(m / minister
   :topic (j / justice))


# ::snt " But there is nobody here to judge ! "
(n / nobody
   :location (h / here)
   :ARG1-of (j / judge-01))


# ::snt " We do not know that , " the king said to him .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (k2 / know-01
             :ARG0 (w / we)
             :ARG1 (t / that))
   :ARG2 (h / he))


# ::snt " I have not yet made a complete tour of my kingdom .
(t / tour-01
   :ARG0 (i / i)
   :ARG1 (k / kingdom
            :poss i)
   :ARG1-of (c / complete-02))


# ::snt I am very old .
(o2 / old
    :domain (i / i)
    :degree (v / very))


# ::snt There is no room here for a carriage .
(r / room
   :purpose (c / carriage)
   :location (h / here))


# ::snt And it tires me to walk . "
(t / tire-01
   :ARG0 (w / walk-01
            :ARG0 (i / i))
   :ARG1 i)


# ::snt On that side , as on this , there was nobody at all ...
(n2 / nobody
    :location (s / side
                 :mod (t / that)
                 :ARG1-of (s2 / same-01
                              :ARG2 (t2 / this)))
    :mod (a / at-all))


# ::snt " that is the most difficult thing of all .
(h / have-degree-91
   :ARG1 (t / that)
   :ARG2 (d / difficult)
   :ARG3 (m / most)
   :ARG5 (a / all))


# ::snt I do not need to live on this planet .
(n / need-01
   :ARG0 (i / i)
   :ARG1 (l / live-01
            :ARG0 i
            :location (p / planet)))


# ::snt " Hum !
(h / hum)


# ::snt Hum ! " said the king .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (h / hum))


# ::snt " I have good reason to believe that somewhere on my planet there is an old rat .
(h2 / have-03
    :ARG0 (i / i)
    :ARG1 (r3 / reason
              :ARG1-of (g / good-02)
              :ARG0-of (c / cause-01
                          :ARG1 (b3 / believe-01
                                    :ARG0 i
                                    :ARG1 (r2 / rat)))))


# ::snt I hear him at night .
(h / hear-01
   :ARG0 (i / i)
   :ARG1 (h2 / he)
   :time (d / date-entity
            :dayperiod (n / night)))


# ::snt You can judge this old rat .
(p / possible-01
   :ARG1 (j / judge-01
            :ARG0 (y / you)
            :ARG1 (r / rat)))


# ::snt From time to time you will condemn him to death .
(c / condemn-01
   :ARG0 (y / you)
   :ARG1 (h / he)
   :ARG3 (d / die-01
            :ARG1 h)
   :frequency (t / time-to-time))


# ::snt Thus his life will depend on your justice .
(d / depend-01
   :ARG0 (l / live-01
            :ARG0 (h / he))
   :ARG1 (j / justice
            :poss (y / you)))


# ::snt But you will pardon him on each occasion ; for he must be treated thriftily .
(p / pardon-01
   :ARG0 (y / you)
   :ARG1 (h / he)
   :frequency (o2 / occasion-02
                  :quant (e / each))
   :ARG1-of (c / cause-01
               :ARG0 (o / obligate-01
                        :ARG2 (t / treat-04
                                 :ARG1 h))))


# ::snt He is the only one we have . "
(o / one
   :mod (o2 / only)
   :domain (h2 / he)
   :ARG1-of (h / have-03
               :ARG0 (w / we)))


# ::snt " I , " replied the little prince , " do not like to condemn anyone to death .
(r / reply-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (d2 / dislike-01
             :ARG0 p
             :ARG1 (c / condemn-01
                      :ARG0 p)))


# ::snt And now I think I will go on my way . "
(t / think-01
   :ARG0 (i / i)
   :ARG1 (g / go-02
            :ARG0 i
            :ARG1 (w / way
                     :poss i))
   :time (n / now))


# ::snt " No , " said the king .
(s / say-01
   :ARG0 (k / king)
   :ARG1 (n / no))


# ::snt But the little prince , having now completed his preparations for departure , had no wish to grieve the old monarch .
(w / wish-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (c / complete-01
                        :ARG1 (p2 / prepare-02
                                  :ARG0 p
                                  :ARG2 (d / depart-01
                                           :ARG0 p))
                        :time (n / now)))
   :ARG1 (g / grieve-01
            :ARG0 p
            :ARG1 (m / monarch)))


# ::snt " If Your Majesty wishes to be promptly obeyed , " he said , " he should be able to give me a reasonable order .
# ::snt He should be able , for example , to order me to be gone by the end of one minute .
(e2 / exemplify-01
    :ARG0 (p / possible-01
             :ARG1 (o / order-01)))


# ::snt It seems to me that conditions are favorable ... "
(s / seem-01
   :ARG1 (f / favorable
            :domain (c / condition))
   :ARG2 (i2 / i))


# ::snt As the king made no answer , the little prince hesitated a moment .
(h / hesitate-01
   :ARG0 (p / prince
            :mod (l / little))
   :duration (m / moment)
   :ARG1-of (c / cause-01
               :ARG0 (a / answer-01
                        :ARG0 (k / king))))


# ::snt Then , with a sigh , he took his leave .
(t / take-01
   :ARG0 (h / he
            :ARG0-of (s / sigh-02))
   :ARG1 (l / leave-11
            :ARG0 h)
   :time (t2 / then))


# ::snt " I made you my Ambassador , " the king called out , hastily .
(c / call-07
   :ARG0 (k / king)
   :ARG1 (m / make-02
            :ARG0 k
            :ARG1 (h2 / have-org-role-91
                      :ARG1 k))
   :manner (h / hasty))


# ::snt He had a magnificent air of authority .
(h / have-03
   :ARG0 (h2 / he)
   :ARG1 (a / air
            :mod (m / magnificence)
            :domain (a2 / authority)))


# ::snt Chapter 11 .
(c / chapter)


# ::snt The second planet was inhabited by a conceited man .
(i / inhabit-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG1 (p / planet
            :ord (o / ordinal-entity)))


# ::snt " Ah !
(a / ah)


# ::snt Ah !
(a / ah)


# ::snt I am about to receive a visit from an admirer ! " he exclaimed from afar , when he first saw the little prince coming .
(e / exclaim-01
   :ARG0 (h / he)
   :ARG1 (v / visit-01
            :ARG0 h
            :ARG1 (p / person
                     :ARG0-of (a / admire-01
                                 :ARG1 h))
            :time (a3 / about-to))
   :time (s / see-01
            :ARG0 h
            :ARG1 (c / come-01)
            :ord (o / ordinal-entity))
   :direction (f2 / from
                  :op1 (a2 / afar)))


# ::snt For , to conceited men , all other men are admirers .
(o2 / opine-01
    :ARG0 (m2 / man
              :mod (c / conceit))
    :ARG1 (p2 / person
              :ARG0-of (a3 / admire-01)
              :domain (m / man)))


# ::snt " Good morning , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt " That is a queer hat you are wearing . "
(h2 / hat
    :mod (q2 / queer)
    :domain (t2 / that)
    :ARG1-of (w2 / wear-01))


# ::snt " It is a hat for salutes , " the conceited man replied .
(r / reply-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG1 (h2 / hat
             :purpose (s / salute-01)
             :instrument-of s
             :domain (i / it)))


# ::snt " It is to raise in salute when people acclaim me .
(h / have-purpose-91
   :ARG1 (i / it)
   :ARG2 (r / raise-01
            :ARG1 i
            :subevent-of (s / salute-01
                            :time (a / acclaim-01
                                     :ARG0 (p / person)
                                     :ARG1 (i2 / i))
                            :instrument i)))


# ::snt Unfortunately , nobody at all ever passes this way . "
(p / pass-03
   :ARG1 (n / nobody
            :degree (a / at-all))
   :path (w / way
            :mod (t / this))
   :ARG2-of (f / fortunate-01)
   :time (e / ever))


# ::snt " Yes ? " said the little prince , who did not understand what the conceited man was talking about .
(r / request-response-91
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (u / understand-01
                        :ARG1 (t2 / thing
                                  :ARG1-of (t / talk-01
                                              :ARG0 (m / man
                                                       :mod (c / conceit)))))))


# ::snt " Clap your hands , one against the other , " the conceited man now directed him .
(d / direct-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG1 (h / he
            :part h2
            :part h3
            :part h4)
   :ARG2 (c2 / clap-01
             :ARG0 h
             :ARG1 (h2 / hand)
             :manner (c3 / clap-01
                         :ARG0 h
                         :ARG1 (h3 / hand)
                         :ARG2 (h4 / hand
                                   :ARG1-of (d2 / differ-02
                                                :ARG2 h3))))
   :time (n / now))


# ::snt The little prince clapped his hands .
(c / clap-01
   :ARG0 (p / prince
            :mod (l / little)
            :part h)
   :ARG1 (h / hand))


# ::snt The conceited man raised his hat in a modest salute .
(r / raise-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG1 (h / hat
            :poss m)
   :subevent-of (s / salute-01
                   :ARG0 m
                   :manner (m2 / modest)
                   :instrument h))


# ::snt And he began again to clap his hands , one against the other .
(b / begin-01
   :ARG0 (h / he
            :part h2
            :part h3
            :part h4)
   :ARG1 (c / clap-01
            :ARG0 h
            :ARG1 (h2 / hand)
            :manner (c2 / clap-01
                        :ARG0 h
                        :ARG1 (h3 / hand)
                        :ARG2 (h4 / hand
                                  :ARG1-of (d / differ-02
                                              :ARG2 h3))))
   :mod (a / again))


# ::snt The conceited man against raised his hat in salute .
(r / raise-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG1 (h2 / hat)
   :mod (a / again)
   :subevent-of (s / salute-01
                   :ARG0 m
                   :instrument h2))


# ::snt After five minutes of this exercise the little prince grew tired of the game 's monotony .
(t / tire-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / monotony
            :poss (g2 / game))
   :time (a / after
            :op1 (e / exercise)))


# ::snt " And what should one do to make the hat come down ? " he asked .
(a / ask-01
   :ARG0 (h / he)
   :ARG1 (d / do-02
            :ARG0 (o / one)
            :ARG1 (a2 / amr-unknown)
            :ARG2 (m / make-02
                     :ARG0 o)))


# ::snt But the conceited man did not hear him .
(h / hear-01
   :ARG0 (m / man
            :mod (c / conceit))
   :ARG2 (h2 / he))


# ::snt Conceited people never hear anything but praise .
(h / hear-01
   :ARG0 (p / person
            :mod (c / conceit))
   :ARG1 (a / anything
            :concession (p2 / praise-01))
   :time (e / ever))


# ::snt " Do you really admire me very much ? " he demanded of the little prince .
(d / demand-01
   :ARG0 (h / he)
   :ARG1 (t / truth-value
            :polarity-of (a / admire-01
                            :ARG0 (p / prince
                                     :mod (l / little))
                            :ARG1 h
                            :degree (m / much
                                       :degree (v / very))
                            :ARG1-of (r / real-04)))
   :ARG2 p)


# ::snt " What does that mean - - ' admire ' ? "
(m / mean-01
   :ARG1 (a / admire-01)
   :ARG2 (a2 / amr-unknown))


# ::snt " To admire mean that you regard me as the handsomest , the best - dressed , the richest , and the most intelligent man on this planet . "
(m / mean-01
   :ARG1 (a / admire-01)
   :ARG2 (r / regard-01
            :ARG0 (y / you)
            :ARG1 (i / i)
            :ARG2 (m6 / man
                      :ARG1-of (h2 / have-degree-91
                                   :ARG2 (h / handsome)
                                   :ARG3 (m2 / most)
                                   :ARG5 (p2 / planet
                                             :mod (t / this)))
                      :ARG1-of (h3 / have-degree-91
                                   :ARG2 (w2 / well-09
                                             :ARG1 (d / dress-01
                                                      :ARG1 m6))
                                   :ARG3 (m3 / most)
                                   :ARG5 p2)
                      :ARG1-of (h4 / have-degree-91
                                   :ARG2 (r2 / rich)
                                   :ARG3 (m4 / most)
                                   :ARG5 p2)
                      :ARG1-of (h5 / have-degree-91
                                   :ARG2 (i2 / intelligent-01
                                             :ARG1 m6)
                                   :ARG3 (m5 / most)
                                   :ARG5 p2))))


# ::snt " But you are the only man on your planet ! "
(c / contrast-01
   :ARG2 (m / man
            :quant (o / only)))


# ::snt " Do me this kindness .
(k2 / kind-01
    :ARG0 (y / you)
    :ARG1 (t / this)
    :ARG2 (i / i))


# ::snt Admire me just the same . "
(a / admire-01
   :ARG0 (y / you)
   :ARG1 (i / i)
   :manner (s / same-01
              :degree (j / just)))


# ::snt " I admire you , " said the little prince , shrugging his shoulders slightly , " but what is there in that to interest you so much ? "
(s / say-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (s2 / shrug-01
                         :ARG1 (s3 / shoulder)
                         :degree (s4 / slight))
            :part s3)
   :ARG1 (c2 / contrast-01
             :ARG1 (a / admire-01)
             :ARG2 (i2 / interest-01
                       :ARG0 a
                       :ARG1-of (c / cause-01
                                   :ARG0 (a2 / amr-unknown)))))


# ::snt And the little prince went away .
(a / and
   :op2 (g / go-02
           :ARG0 (p / prince)
           :direction (a2 / away)))


# ::snt Chapter 12 .
(c / chapter)


# ::snt The next planet was inhabited by a tippler .
(i / inhabit-01
   :ARG0 (p / person
            :ARG0-of (t / tipple-01))
   :ARG1 (p2 / planet
             :mod (n / next)))


# ::snt This was a very short visit , but it plunged the little prince into deep dejection .
(h / have-concession-91
   :ARG1 (d / deject-01
            :ARG0 (v / visit-01
                     :ARG1-of (s / short-07
                                 :degree (v2 / very)))
            :ARG1 (p2 / prince)
            :ARG1-of (d2 / deep-02))
   :ARG2 v)


# ::snt " What are you doing there ? " he said to the tippler , whom he found settled down in silence before a collection of empty bottles and also a collection of full bottles .
# ::snt " I am drinking , " replied the tippler , with a lugubrious air .
(r / reply-01
   :ARG0 (p / person
            :ARG0-of (t / tipple-01))
   :ARG2 (d / drink-01
            :ARG0 p)
   :manner (l / lugubrious))


# ::snt " Why are you drinking ? " demanded the little prince .
(d / demand-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (d2 / drink-01)))


# ::snt " So that I may forget , " replied the tippler .
(r / reply-01
   :ARG0 (p / person
            :ARG0-of (t / tipple-01))
   :ARG2 (c / cause-01
            :ARG0 (p2 / possible-01)))


# ::snt " Forget what ? " inquired the little prince , who already was sorry for him .
(i / inquire-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG1-of (s / sorry-01
                        :ARG2 (h / he)
                        :time (a2 / already)))
   :ARG1 (f / forget-01
            :ARG0 h
            :ARG1 (a / amr-unknown))
   :ARG2 h)


# ::snt " Forget that I am ashamed , " the tippler confessed , hanging his head .
(c / confess-01
   :ARG0 (p / person
            :ARG0-of (t / tipple-01)
            :ARG0-of (h / hang-01
                        :ARG1 (h2 / head))
            :part h2)
   :ARG1 (f / forget-01
            :ARG0 p
            :ARG1 (s / shame-01
                     :ARG1 p)))


# ::snt " Ashamed of what ? " insisted the little prince , who wanted to help him .
(i / insist-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (w / want-01
                        :ARG1 (h / help-01
                                 :ARG0 p
                                 :ARG1 (h2 / he))))
   :ARG1 (a / amr-unknown
            :ARG0-of (s / shame-01)))


# ::snt " Ashamed of drinking ! "
(s / shame-01
   :ARG0 (d / drink-01))


# ::snt And the little prince went away , puzzled .
(a / and
   :op2 (g / go-02
           :ARG0 (p / prince
                    :ARG1-of (p2 / puzzle-01))
           :direction (a2 / away)))


# ::snt Chapter 13 .
(c / chapter)


# ::snt The fourth planet belonged to a businessman .
(b / belong-01
   :ARG0 (p / planet
            :ord (o / ordinal-entity))
   :ARG1 (b3 / businessman))


# ::snt This man was so much occupied that he did not even raise his head at the little prince 's arrival .
(h2 / have-degree-91
    :ARG1 (m / man
             :mod (t / this)
             :part h)
    :ARG2 (o / occupy-01
             :ARG1 m)
    :ARG3 (s / so)
    :ARG6 (r / raise-01
             :ARG0 m
             :ARG1 (h / head)
             :time (a / arrive-01)))


# ::snt " Good morning , " the little prince said to him .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / morning
            :ARG1-of (g / good-02))
   :ARG2 (h / he))


# ::snt " Your cigarette has gone out . "
(g / go-out-18
   :ARG1 (c / cigarette
            :poss (y / you)))


# ::snt " Three and two make five .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt Five and seven make twelve .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt Twelve and three make fifteen .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt Good morning .
(m / morning
   :ARG1-of (g / good-02))


# ::snt FIfteen and seven make twenty - two .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt Twenty - two and six make twenty - eight .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt I have n't time to light it again .
(h / have-03
   :ARG0 (i / i)
   :ARG1 (t / time
            :purpose (l / light-04
                        :ARG0 i)))


# ::snt Twenty - six and five make thirty - one .
(e / equal-01
   :ARG1 (s / sum-of))


# ::snt Phew !
(p / phew)


# ::snt Then that makes five - hundred - and - one - million , six - hundred - twenty - two - thousand , seven - hundred - thirty - one . "
(e / equal-01
   :ARG2 (t / that))


# ::snt " Five hundred million what ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (a2 / amr-unknown))


# ::snt " Eh ?
(e / eh
   :polarity (a / amr-unknown))


# ::snt Are you still there ?
(b / be-located-at-91
   :ARG1 (y / you)
   :ARG2 (t / there)
   :mod (s / still)
   :polarity (a / amr-unknown))


# ::snt Five - hundred - and - one million - - I can n't stop ...
(a / and
   :op2 (p / possible-01
           :ARG1 (s / stop-01)))


# ::snt I have so much to do !
(o / obligate-01
   :ARG1 (i / i)
   :ARG2 (d / do-02
            :ARG1 (m / much)))


# ::snt I am concerned with matters of consequence .
(c / concern-01
   :ARG0 (m / matter
            :ARG1-of (c2 / consequential-01))
   :ARG1 (i / i))


# ::snt Two and five make seven ... "
(e / equal-01
   :ARG2 (s / sum-of))


# ::snt " Five - hundred - and - one million what ? " repeated the little prince , who never in his life had let go of a question once he had asked it .
(r / repeat-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (l2 / let-01
                         :ARG1 (g / go-02
                                  :ARG0 (t / thing
                                           :ARG1-of (q / question-01
                                                       :ARG0 p)))
                         :time (l3 / live-01
                                   :ARG0 p)
                         :time (a2 / ask-01
                                   :ARG0 p
                                   :ARG1 t)
                         :time (e / ever)))
   :ARG1 (a / amr-unknown))


# ::snt The businessman raised his head .
(r / raise-01
   :ARG0 (b / businessman
            :part h)
   :ARG1 (h / head))


# ::snt " During the fifty - four years that I have inhabited this planet , I have been disturbed only three times .
(d / disturb-01
   :ARG1 (i / i)
   :ARG1-of (h / have-frequency-91
               :mod (o / only))
   :time (i2 / inhabit-01
             :ARG0 i
             :ARG1 (p / planet)
             :duration (t2 / temporal-quantity)))


# ::snt The first time was twenty - two years ago , when some giddy goose fell from goodness knows where .
(b / be-temporally-at-91
   :ARG1 (d / disturb-01
            :ord (o / ordinal-entity))
   :ARG2 (b2 / before
             :op1 (n / now)
             :quant (t4 / temporal-quantity)
             :time-of (f3 / fall-01
                          :ARG1 (g4 / goose
                                    :mod (g5 / giddy)
                                    :mod (s2 / some))
                          :ARG3 (l / location
                                   :ARG1-of (k2 / know-01
                                                :ARG0 (g6 / goodness))))))


# ::snt He made the most frightful noise that resounded all over the place , and I made four mistakes in my addition .
(a / and
   :op1 (m / make-01
           :ARG0 (h / he)
           :ARG1 (n / noise
                    :ARG1-of (h2 / have-degree-91
                                 :ARG2 (f2 / frighten-01
                                           :ARG0 n)
                                 :ARG3 (m2 / most))
                    :ARG1-of (r / resound-01
                                :ARG2 (a4 / all-over
                                          :op1 (p / place)))))
   :op2 (m4 / mistake-02
            :ARG0 (i / i)
            :ARG1 (a3 / add-02
                      :ARG0 i)))


# ::snt The second time , eleven years ago , I was disturbed by an attack of rheumatism .
(d / disturb-01
   :ARG0 (a / attack-01
            :ARG0 (r / rheumatism)
            :ARG1 (i / i))
   :ARG1 i
   :time (b / before
            :op1 (n / now)
            :quant (t2 / temporal-quantity))
   :domain (d2 / disturb-01
               :ord (o / ordinal-entity)))


# ::snt I do n't get enough exercise .
(h / have-quant-91
   :ARG1 (e / exercise-02
            :ARG0 (i / i))
   :ARG3 (e2 / enough))


# ::snt I have no time for loafing .
(h / have-03
   :ARG0 (i / i)
   :ARG1 (t / time
            :purpose (l / loaf-01
                        :ARG0 i)))


# ::snt The third time - - well , this is it !
(d / disturb-01
   :ord (o / ordinal-entity)
   :domain (t / this))


# ::snt I was saying , then , five - hundred - and - one millions - - "
(s / say-01
   :ARG0 (i / i))


# ::snt " Millions of what ? "
(a / amr-unknown
   :quant (m / multiple))


# ::snt The businessman suddenly realized that there was no hope of being left in peace until he answered this question .
(r / realize-01
   :ARG0 (b / businessman)
   :ARG1 (h / hopeful-03
            :ARG1 (l / leave-14)
            :time (u / until))
   :manner (s / sudden))


# ::snt " Millions of those little objects , " he said , " which one sometimes sees in the sky . "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (o / object
            :ARG1-of (i / include-91
                        :ARG2 (o3 / object
                                  :mod (l / little)
                                  :mod (t2 / that)
                                  :location (s4 / sky)
                                  :ARG1-of (s2 / see-01
                                               :ARG0 (o2 / one)
                                               :frequency (s3 / sometimes))))
            :quant (m / multiple)))


# ::snt " Flies ? "
(f / fly
   :polarity (a / amr-unknown))


# ::snt " Oh , no .
(n / no
   :mod (o / oh))


# ::snt Little glittering objects . "
(o / object
   :mod (l / little)
   :ARG0-of (g / glitter-01))


# ::snt " Bees ? "
(b / bee
   :polarity (a / amr-unknown))


# ::snt " Oh , no .
(n / no
   :mod (o / oh))


# ::snt Little golden objects that set lazy men to idle dreaming .
(c / cause-01
   :ARG0 (o / object
            :consist-of (g / gold)
            :mod (l / little))
   :ARG1 (d / dream-01
            :ARG0 (m / man)
            :manner (i / idle-01)))


# ::snt As for me , I am concerned with matters of consequence .
(c / concern-01
   :ARG0 (m / matter
            :ARG1-of (c2 / consequential-01))
   :ARG1 (i / i))


# ::snt There is no time for idle dreaming in my life . "
(t2 / time
    :purpose (d2 / dream-01
                 :manner (i2 / idle))
    :time (l / live-01
             :ARG0 (i / i)))


# ::snt " Ah !
(a / ah)


# ::snt You mean the stars ? "
(m / mean-01
   :polarity (a / amr-unknown)
   :ARG0 (y / you)
   :ARG2 (s / star))


# ::snt " Yes , that 's it .
(b / be-it-07
   :ARG1 (t2 / that))


# ::snt The stars . "
(s / star)


# ::snt " And what do you do with five - hundred millions of stars ? "
(a / and
   :op2 (d / do-02
           :ARG0 (y / you)
           :ARG1 (a2 / amr-unknown)
           :ARG3 (s / star)))


# ::snt " Five - hundred - and - one million , six - hundred - twenty - two thousand , seven - hundred - thirty - one .
(h / have-quant-91
   :ARG3 (e / equal))


# ::snt I am concerned with matters of consequence : I am accurate . "
(a / and
   :op1 (c / concern-01
           :ARG0 (m / matter
                    :ARG1-of (c2 / consequential-01))
           :ARG1 (i / i))
   :op2 (a2 / accurate
            :domain i))


# ::snt " And what do you do with these stars ? "
(a / and
   :op2 (d / do-02
           :ARG0 (y / you)
           :ARG1 (a2 / amr-unknown)
           :ARG3 (s / star)))


# ::snt " What do I do with them ? "
(d / do-02
   :ARG0 (i / i)
   :ARG1 (a / amr-unknown)
   :ARG3 (t / they))


# ::snt " Yes . "
(y / yes)


# ::snt " Nothing .
(n / nothing)


# ::snt I own them . "
(o / own-01
   :ARG0 (i / i)
   :ARG1 (t / they))


# ::snt " You own the stars ? "
(o / own-01
   :ARG0 (y / you)
   :ARG1 (s / star)
   :polarity (a / amr-unknown))


# ::snt " Yes . "
(y / yes)


# ::snt " But I have already seen a king who - - "
(c / contrast-01
   :ARG2 (s / see-01
            :ARG0 (i / i)
            :ARG1 (k / king)
            :time (a / already)))


# ::snt " Kings do not own , they reign over .
(c / contrast-01
   :ARG1 (o / own-01
            :ARG0 (k / king))
   :ARG2 (r / reign-01
            :ARG0 k))


# ::snt It is a very different matter . "
(m / matter
   :ARG1-of (d / differ-02
               :degree (v / very))
   :domain (i / it))


# ::snt " And what good does it do you to own the stars ? "
(a / and
   :op2 (c / cause-01
           :ARG0 (o / own-01)
           :ARG1 (g / good-04)))


# ::snt " It does me the good of making me rich . "
(c / cause-01
   :ARG0 (i2 / it)
   :ARG1 (g / good-04
            :ARG1 (m2 / make-02)))


# ::snt " And what good does it do you to be rich ? "
(a / and
   :op2 (c / cause-01
           :ARG0 (r / rich)
           :ARG1 (g / good-04)))


# ::snt " It makes it possible for me to buy more stars , if any are ever discovered . "
(p / possible-01
   :ARG1 (b / buy-01
            :ARG0 (i / i)
            :ARG1 (s / star))
   :condition (d / discover-01
                 :ARG1 s
                 :time (e / ever)))


# ::snt Nevertheless , he still had some more questions .
(h3 / have-concession-91
    :ARG1 (h / have-03
             :ARG0 (h2 / he)
             :ARG1 (t / thing
                      :ARG1-of (q / question-01))
             :mod (s2 / still)))


# ::snt " How is it possible for one to own the stars ? "
(p / possible-01
   :ARG1 (o / own-01
            :ARG0 (o2 / one)
            :ARG1 (s / star))
   :manner (a / amr-unknown))


# ::snt " To whom do they belong ? " the businessman retorted , peevishly .
(r / retort-01
   :ARG0 (b3 / businessman)
   :ARG2 (b2 / belong-01
             :ARG0 (t / they)
             :ARG1 (a / amr-unknown))
   :manner (p / peeve-01
              :ARG1 b3))


# ::snt " I do n't know .
(k / know-01
   :ARG0 (i / i))


# ::snt To nobody . "
(b / belong-01
   :ARG1 (n / nobody))


# ::snt " Then they belong to me , because I was the first person to think of it . "
(b / belong-01
   :ARG0 (t / they)
   :ARG1 (i / i)
   :ARG1-of (c / cause-01
               :ARG0 (p / person
                        :ord (o / ordinal-entity)
                        :domain i
                        :ARG0-of (t2 / think-01
                                     :ARG2 (i2 / it)))))


# ::snt " Is that all that is necessary ? "
(a / all
   :polarity (a2 / amr-unknown)
   :domain (t2 / that)
   :ARG1-of (n / need-01))


# ::snt " Certainly .
(c / certain)


# ::snt When you find a diamond that belongs to nobody , it is yours .
(b / belong-01
   :ARG0 (d / diamond
            :ARG0-of (b2 / belong-01
                         :ARG1 (n / nobody)))
   :ARG1 (y / you)
   :condition (f / find-01
                 :ARG0 y
                 :ARG1 d))


# ::snt When you discover an island that belongs to nobody , it is yours .
(b / belong-01
   :ARG0 (i / island
            :ARG0-of (b2 / belong-01
                         :ARG1 (n / nobody)))
   :ARG1 (y / you)
   :condition (d / discover-01
                 :ARG0 y
                 :ARG1 i))


# ::snt When you get an idea before any one else , you take out a patent on it : it is yours .
(a / and
   :op1 (p / patent-01
           :ARG0 (y / you)
           :ARG1 (i / idea))
   :op2 (b2 / belong-01
            :ARG0 i
            :ARG1 y)
   :condition (g / get-01
                 :ARG0 y
                 :ARG1 i
                 :time (b / before)))


# ::snt So with me : I own the stars , because nobody else before me ever thought of owning them . "
(c / cause-01
   :ARG0 (t / think-01
            :ARG0 (n / nobody)
            :ARG1 (o / own-01
                     :ARG0 n)
            :time (e / ever)
            :time (b / before))
   :ARG1 (o2 / own-01)
   :ARG1-of (r / resemble-01))


# ::snt " Yes , that is true , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / true-01
            :ARG1 (t2 / that)))


# ::snt " And what do you do with them ? "
(a / and
   :op2 (d / do-02
           :ARG0 (y / you)
           :ARG1 (a2 / amr-unknown)
           :ARG2 (t / they)))


# ::snt " I administer them , " replied the businessman .
(r / reply-01
   :ARG0 (b / businessman)
   :ARG2 (a / administer-01
            :ARG0 b
            :ARG1 (t / they)))


# ::snt " I count them and recount them .
(a / and
   :op1 (c / count-01
           :ARG0 (i / i)
           :ARG1 (t / they))
   :op2 (r2 / recount-01
            :ARG0 i
            :ARG1 t))


# ::snt It is difficult .
(d / difficult
   :domain (i / it))


# ::snt But I am a man who is naturally interested in matters of consequence . "
(c / contrast-01
   :ARG2 (m / man
            :domain (i / i)
            :ARG1-of (i2 / interest-01
                         :ARG2 (m2 / matter
                                   :ARG1-of (c2 / consequential-01))
                         :ARG1-of (n / natural-02
                                     :ARG2 i))))


# ::snt The little prince was still not satisfied .
(s / satisfy-01
   :ARG1 (p / prince
            :mod (l / little))
   :mod (s2 / still))


# ::snt But you can not pluck the stars from heaven ... "
(c / contrast-01
   :ARG2 (p2 / possible-01
             :ARG1 (p / pluck-01)))


# ::snt " No .
(n / no)


# ::snt But I can put them in the bank . "
(c / contrast-01
   :ARG2 (p2 / possible-01
             :ARG1 (p / put-01)))


# ::snt " Whatever does that mean ? "
(m / mean-01
   :ARG1 (t / that)
   :ARG2 (a / amr-unknown))


# ::snt " That means that I write the number of my stars on a little paper .
(m / mean-01
   :ARG1 (t / that)
   :ARG2 (w / write-01
            :ARG0 (i / i)
            :ARG1 (n / number
                     :quant-of (s / star
                                  :poss i))
            :location (p / paper)))


# ::snt And then I put this paper in a drawer and lock it with a key . "
(a / and
   :op2 (a2 / and
            :op1 (p / put-01)
            :op2 (l / lock-01))
   :time (t / then))


# ::snt " And that is all ? "
(a / and
   :op2 (a2 / all
            :domain (t / that)
            :polarity (a3 / amr-unknown)))


# ::snt " That is enough , " said the businessman .
(s / say-01
   :ARG0 (b2 / businessman)
   :ARG1 (e / enough
            :domain (t / that)))


# ::snt " It is entertaining , " thought the little prince .
(t / think-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (e / entertain-01
            :ARG0 (i / it)))


# ::snt " It is rather poetic .
(p / poetry
   :domain (i / it)
   :degree (r / rather))


# ::snt But it is of no great consequence . "
(c / contrast-01
   :ARG2 (c2 / consequential-01
             :ARG1 (i / it)
             :degree (g / great)))


# ::snt On matters of consequence , the little prince had ideas which were very different from those of the grown - ups .
(h / have-03
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (i / idea
            :topic (m / matter
                      :ARG1-of (c / consequential-01))
            :ARG1-of (d / differ-02
                        :ARG2 (i2 / idea
                                  :poss (g / grown-up))
                        :degree (v / very))))


# ::snt " I myself own a flower , " he continued his conversation with the businessman , " which I water every day .
(c / continue-02
   :ARG0 (h / he)
   :ARG1 (o / own-01
            :ARG0 h
            :ARG1 (f2 / flower
                      :ARG1-of (w / water-01
                                  :ARG0 h
                                  :frequency (r / rate-entity-91
                                                :ARG3 (t / temporal-quantity)))))
   :ARG2 (b / businessman)
   :ARG3 (c2 / converse-01
             :ARG0 h
             :ARG2 b))


# ::snt I own three volcanoes , which I clean out every week ( for I also clean out the one that is extinct ; one never knows ) .
(o / own-01
   :ARG0 (i / i)
   :ARG1 (v / volcano
            :ARG1-of (c / clean-out-03
                        :ARG0 i
                        :frequency (r / rate-entity-91
                                      :ARG3 (t / temporal-quantity))
                        :ARG1-of (c2 / cause-01
                                     :ARG0 (c3 / clean-out-03
                                               :ARG0 i
                                               :ARG1 (v2 / volcano
                                                         :ARG1-of (i2 / include-91
                                                                      :ARG2 v))
                                               :mod (a / also)
                                               :ARG1-of (c4 / cause-01
                                                            :ARG0 (k / know-01
                                                                     :ARG0 (o2 / one))))))))


# ::snt It is of some use to my volcanoes , and it is of some use to my flower , that I own them .
(c / cause-01
   :ARG0 (o / own-01
            :ARG0 (i / i)
            :ARG1 (a / and))
   :ARG1 (u / use-01
            :beneficiary (a2 / and)
            :degree (s / some)))


# ::snt But you are of no use to the stars ... "
(c / contrast-01
   :ARG2 (u / use-01
            :ARG0 (s / star)
            :ARG1 (y / you)))


# ::snt The businessman opened his mouth , but he found nothing to say in answer .
(c / contrast-01
   :ARG1 (o / open-01
            :ARG0 (b / businessman))
   :ARG2 (f / find-01
            :ARG0 b
            :ARG1 (a / answer-01)))


# ::snt And the little prince went away .
(a / and
   :op2 (g / go-02
           :ARG0 (p / prince)
           :direction (a2 / away)))


# ::snt Chapter 14 .
(c / chapter)


# ::snt The fifth planet was very strange .
(s / strange
   :degree (v / very)
   :domain (p / planet
              :ord (o / ordinal-entity)))


# ::snt It was the smallest of all .
(h / have-degree-91
   :ARG1 (i2 / it)
   :ARG2 (s / small)
   :ARG3 (m / most)
   :ARG5 (a / all))


# ::snt There was just enough room on it for a street lamp and a lamplighter .
# ::snt The little prince was not able to reach any explanation of the use of a street lamp and a lamplighter , somewhere in the heavens , on a planet which had no people , and not one house .
# ::snt But he is not so absurd as the king , the conceited man , the businessman , and the tippler .
# ::snt For at least his work has some meaning .
(c / cause-01
   :ARG0 (m / mean-01
            :ARG1 (w / work-01)
            :degree (s / some)
            :mod (a / at-least)))


# ::snt When he lights his street lamp , it is as if he brought one more star to life , or one flower .
(l2 / light-04
    :ARG0 (h / he)
    :ARG1 (l3 / lamp
              :mod (s2 / street)
              :poss h)
    :ARG1-of (r / resemble-01
                :ARG2 (b / bring-01
                         :ARG0 h
                         :ARG1 (o / or)
                         :ARG3 (l / live-01))))


# ::snt When he puts out his lamp , he sends the flower , or the star , to sleep .
(s / send-02
   :ARG0 (h / he)
   :ARG1 (o / or
            :op1 (f2 / flower)
            :op2 (s3 / star))
   :ARG2 (s2 / sleep-01
             :ARG0 o)
   :time (p / put-out-09
            :ARG0 h
            :ARG1 (l / lamp
                     :poss h)))


# ::snt That is a beautiful occupation .
(o / occupation
   :ARG1-of (b / beautiful-02)
   :domain (t / that))


# ::snt And since it is beautiful , it is truly useful . "
(a / and
   :op2 (c / cause-01
           :ARG0 (b / beautiful-02)
           :ARG1 (u / useful-05)))


# ::snt When he arrived on the planet he respectfully saluted the lamplighter .
(s / salute-01
   :ARG0 (h / he)
   :ARG1 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :manner (r / respect-01)
   :time (a / arrive-01
            :ARG1 h
            :ARG4 (p2 / planet)))


# ::snt " Good morning .
(m / morning
   :ARG1-of (g / good-02))


# ::snt Why have you just put out your lamp ? "
(c / cause-01
   :ARG0 (a / amr-unknown)
   :ARG1 (p / put-out-09
            :ARG0 (y / you)
            :ARG1 (l / lamp
                     :poss y)
            :mod (j / just)))


# ::snt " Those are the orders , " replied the lamplighter .
(r / reply-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG2 (o / order-01
            :ARG2 (t / that)))


# ::snt " Good morning . "
(m / morning
   :ARG1-of (g / good-02))


# ::snt " What are the orders ? "
(o / order-01
   :ARG2 (a / amr-unknown))


# ::snt " The orders are that I put out my lamp .
(o / order-01
   :ARG2 (p / put-out-09
            :ARG0 (i / i)
            :ARG1 (l / lamp
                     :poss i)))


# ::snt Good evening . "
(e / evening
   :ARG1-of (g / good-02))


# ::snt And he lighted his lamp again .
(a / and
   :op2 (l / light-04
           :ARG0 (h / he)
           :ARG1 (l2 / lamp
                     :poss h)
           :mod (a2 / again)))


# ::snt " But why have you just lighted it again ? "
(c / contrast-01
   :ARG2 (c2 / cause-01
             :ARG0 (a / amr-unknown)
             :ARG1 (l / light-04)))


# ::snt " Those are the orders , " replied the lamplighter .
(r / reply-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG2 (o / order-01
            :ARG2 (t / that)))


# ::snt " I do not understand , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (u / understand-01
            :ARG0 p))


# ::snt " There is nothing to understand , " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (n / nothing
            :ARG1-of (u / understand-01)))


# ::snt " Orders are orders .
(o / order
   :domain (o2 / order))


# ::snt Good morning . "
(m / morning
   :ARG1-of (g / good-02))


# ::snt And he put out his lamp .
(a / and
   :op2 (p / put-out-09
           :ARG0 (h / he)
           :ARG1 (l / lamp
                    :poss h)))


# ::snt Then he mopped his forehead with a handkerchief decorated with red squares .
(m / mop-01
   :ARG0 (h / he
            :part f)
   :ARG1 (f / forehead)
   :ARG2 (h2 / handkerchief
             :ARG1-of (d / decorate-01
                         :ARG2 (s / square
                                  :ARG1-of (r / red-02))))
   :time (t / then))


# ::snt " I follow a terrible profession .
(f / follow-02
   :ARG0 (i / i)
   :ARG1 (p / profession
            :ARG1-of (t / terrible-01)))


# ::snt In the old days it was reasonable .
(r / reasonable-02
   :ARG1 (i / it)
   :time (d / day
            :mod (o / old)))


# ::snt I put the lamp out in the morning , and in the evening I lighted it again .
(a / and
   :op1 (p / put-out-09
           :ARG0 (i / i)
           :ARG1 (l / lamp)
           :time (d2 / date-entity))
   :op2 (l2 / light-04
            :ARG0 i
            :ARG1 l
            :time (d / date-entity)
            :mod (a2 / again)))


# ::snt I had the rest of the day for relaxation and the rest of the night for sleep . "
(h / have-03
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (r / rest
                    :part-of (d / day))
            :op2 (r3 / rest
                     :part-of (n / night))))


# ::snt " And the orders have been changed since that time ? "
(a / and
   :op2 (c / change-01
           :polarity (a2 / amr-unknown)
           :ARG1 (o / order-01)
           :time (s / since)))


# ::snt " The orders have not been changed , " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (c / change-01
            :ARG1 (o / order-01)))


# ::snt " That is the tragedy !
(t / tragedy
   :domain (t2 / that))


# ::snt From year to year the planet has turned more rapidly and the orders have not been changed ! "
(a / and
   :op1 (h / have-degree-91
           :ARG1 (t / turn-01)
           :ARG2 (r / rapid)
           :ARG3 (m / more)
           :frequency (y / year))
   :op2 (c / change-01
           :ARG1 (o / order-01)))


# ::snt " Then what ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (a2 / amr-unknown
             :time (t / then)))


# ::snt " Then - - the planet now makes a complete turn every minute , and I no longer have a single second for repose .
(a / and
   :op1 (t / turn-01
           :ARG1 (p / planet)
           :ARG1-of (c / complete-02)
           :time (n / now)
           :frequency (r2 / rate-entity-91))
   :op2 (h / have-03
           :ARG0 (i / i)
           :ARG1 (t2 / temporal-quantity)
           :time (n2 / no-longer))
   :time (t4 / then))


# ::snt Once every minute I have to light my lamp and put it out ! "
(o / obligate-01
   :ARG1 (i / i)
   :ARG2 (a / and
            :op1 (l / light-04
                    :ARG0 i)
            :op2 (p / put-out-09
                    :ARG0 i))
   :frequency (r / rate-entity-91
                 :ARG2 (t / temporal-quantity)))


# ::snt " That is very funny !
(f / funny
   :degree (v / very)
   :domain (t / that))


# ::snt A day lasts only one minute , here where you live ! "
(l / last-01
   :ARG1 (t / temporal-quantity
            :unit (d / day))
   :ARG2 (t2 / temporal-quantity
             :unit (m / minute))
   :mod (o / only)
   :location (l2 / live-01
                 :ARG0 (y / you)))


# ::snt " It is not funny at all ! " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (f / funny
            :domain (i / it)
            :degree (a / at-all)))


# ::snt " While we have been talking together a month has gone by . "
(p / pass-03
   :ARG1 (t / temporal-quantity
            :unit (m / month))
   :duration-of (t2 / talk-01
                    :ARG0 (w / we)
                    :mod (t3 / together)))


# ::snt " A month ? "
(t / temporal-quantity
   :polarity (a / amr-unknown)
   :unit (m / month))


# ::snt " Yes , a month .
(t / temporal-quantity
   :unit (m / month))


# ::snt Thirty minutes .
(t / temporal-quantity
   :unit (m / minute))


# ::snt Thirty days .
(t / temporal-quantity
   :unit (d / day))


# ::snt Good evening . "
(e / evening
   :ARG1-of (g / good-02))


# ::snt And he lighted his lamp again .
(a / and
   :op2 (l / light-04
           :ARG0 (h / he)
           :ARG1 (l2 / lamp
                     :poss h)
           :mod (a2 / again)))


# ::snt As the little prince watched him , he felt that he loved this lamplighter who was so faithful to his orders .
(f / feel-01
   :ARG0 (p / prince
            :mod (l2 / little))
   :ARG1 (l / love-01
            :ARG0 p
            :ARG1 (p2 / person
                      :ARG0-of (l3 / light-04
                                   :ARG1 (l4 / lamp))
                      :ARG1-of (f2 / faithful-00
                                   :ARG2 (t2 / thing
                                             :ARG2-of (o / order-01
                                                         :ARG1 p2)))))
   :time (w / watch-01
            :ARG0 p
            :ARG1 p2))


# ::snt He remembered the sunsets which he himself had gone to seek , in other days , merely by pulling up his chair ; and he wanted to help his friend .
(a / and
   :op1 (r / remember-01
           :ARG0 (h / he
                    :ARG1-of (h3 / have-rel-role-91
                                 :ARG2 (f / friend)))
           :ARG1 (s3 / sunset
                     :ARG1-of (s / seek-01
                                 :purpose-of (g / go-02
                                                :ARG0 h
                                                :manner (p / pull-01
                                                           :ARG0 h
                                                           :ARG1 (c / chair)
                                                           :mod (m / mere)
                                                           :direction (u / up))
                                                :time (d / day
                                                         :mod (o / other))))))
   :op2 (w / want-01
           :ARG0 h
           :ARG1 (h2 / help-01
                     :ARG0 h)))


# ::snt " You know , " he said , " I can tell you a way you can rest whenever you want to ... "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (p / possible-01
            :ARG1 (t / tell-01
                     :ARG0 h)))


# ::snt " I always want to rest , " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (w / want-01
            :ARG0 p
            :ARG1 (r / rest-01
                     :ARG1 p)
            :time (a / always)))


# ::snt For it is possible for a man to be faithful and lazy at the same time .
(c / cause-01
   :ARG0 (p / possible-01
            :ARG1 (a / and)))


# ::snt The little prince went on with his explanation : " Your planet is so small that three strides will take you all the way around it .
(g / go-on-25
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (e / explain-01
            :ARG0 p
            :ARG1 (c / cause-01)))


# ::snt To be always in the sunshine , you need only walk along rather slowly .
(n / need-01
   :ARG0 (y / you)
   :ARG1 (w / walk-01
            :ARG1-of (s / slow-05
                        :degree (r / rather))
            :mod (o / only))
   :purpose (b / be-located-at-91
               :ARG1 y
               :ARG2 (s2 / sunshine)
               :time (a / always)))


# ::snt When you want to rest , you will walk - - and the day will last as long as you like . "
(w / walk-01
   :ARG0 (y / you)
   :time (w2 / want-01
             :ARG0 y
             :ARG1 (r / rest-01
                      :ARG1 y))
   :ARG0-of (c / cause-01
               :ARG1 (l / last-01
                        :ARG1 (d / day)
                        :ARG2 (t / temporal-quantity
                                 :ARG1-of (h / have-quant-91
                                             :ARG3 (e / equal)
                                             :ARG4 (t2 / temporal-quantity
                                                       :ARG1-of (l2 / like-02
                                                                    :ARG0 y)))))))


# ::snt " That does n't do me much good , " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (d / do-02
            :ARG0 (t / that)
            :ARG1 (g / good-04
                     :ARG2 p)
            :ARG2 p))


# ::snt " The one thing I love in life is to sleep . "
(l / love-01
   :ARG0 (i / i)
   :ARG1 (s / sleep-01
            :ARG0 i
            :mod (t / thing))
   :time (l2 / live-01))


# ::snt " Then you 're unlucky , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (l2 / lucky
             :domain (y / you)
             :time (t / then)))


# ::snt " I am unlucky , " said the lamplighter .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (l / light-04
                        :ARG1 (l2 / lamp)))
   :ARG1 (l3 / lucky
             :domain p))


# ::snt " Good morning . "
(m / morning
   :ARG1-of (g / good-02))


# ::snt And he put out his lamp .
(a / and
   :op2 (p / put-out-09
           :ARG0 (h / he)
           :ARG1 (l / lamp
                    :poss h)))


# ::snt Nevertheless he is the only one of them all who does not seem to me ridiculous .
# ::snt Perhaps that is because he is thinking of something else besides himself . "
# ::snt But his planet is indeed too small .
(c / contrast-01
   :ARG2 (h2 / have-degree-91
             :ARG1 (p / planet)
             :ARG2 (s / small)
             :ARG3 (t / too)
             :mod (i2 / indeed)))


# ::snt There is no room on it for two people ... "
(r / room
   :poss (i / it)
   :beneficiary (p / person))


# ::snt What the little prince did not dare confess was that he was sorry most of all to leave this planet , because it was blest every day with 1440 sunsets !
(d / dare-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG2 (c / confess-01
            :ARG0 p
            :ARG1 (h / have-degree-91
                     :ARG1 p
                     :ARG1-of (c2 / cause-01
                                  :ARG0 (b / bless-01
                                           :ARG2 (s / sunset)
                                           :frequency (r / rate-entity-91))))))


# ::snt Chapter 15 .
(c / chapter)


# ::snt The sixth planet was ten times larger than the last one .
(h / have-degree-91
   :ARG1 (p / planet
            :ord (o / ordinal-entity))
   :ARG2 (l / large)
   :ARG3 (t / times)
   :ARG4 (p2 / planet
             :mod (l2 / last)))


# ::snt It was inhabited by an old gentleman who wrote voluminous books .
(i / inhabit-01
   :ARG0 (g / gentleman
            :mod (o / old)
            :ARG0-of (w / write-01
                        :ARG1 (b / book
                                 :mod (v / volume))))
   :ARG1 (i2 / it))


# ::snt " Oh , look !
(a / and
   :op1 (o / oh)
   :op2 (l / look-01
           :ARG0 (y / you)))


# ::snt The little prince sat down on the table and panted a little .
(a / and
   :op1 (s / sit-down-02
           :ARG1 (p2 / prince)
           :location (t / table))
   :op2 (p / pant-01
           :ARG0 p2
           :duration (l2 / little)))


# ::snt He had already traveled so much and so far !
(a2 / and
    :op1 (t / travel-01
            :ARG0 (h / he)
            :quant (m / much))
    :op2 (t2 / travel-01
             :ARG0 h
             :ARG1 (f / far))
    :time (a / already))


# ::snt " Where do you come from ? " the old gentleman said to him .
(s / say-01
   :ARG0 (g / gentleman
            :mod (o / old))
   :ARG1 (c / come-01
            :ARG1 (h / he)
            :ARG3 (a / amr-unknown))
   :ARG2 h)


# ::snt " What is that big book ? " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b / book
            :domain (a / amr-unknown)
            :mod (b2 / big)
            :mod (t / that)))


# ::snt " What are you doing ? "
(d2 / do-02
    :ARG0 (y / you)
    :ARG1 (a / amr-unknown))


# ::snt " I am a geographer , " the old gentleman said to him .
(s / say-01
   :ARG0 (g / gentleman
            :mod (o / old))
   :ARG1 (g2 / geographer
             :domain g)
   :ARG2 (h / he))


# ::snt " What is a geographer ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (g / geographer
            :domain (a2 / amr-unknown)))


# ::snt " A geographer is a scholar who knows the location of all the seas , rivers , towns , mountains , and deserts . "
(s4 / scholar
    :domain (g / geographer)
    :ARG0-of (k / know-01
                :ARG1 (l / location
                         :location-of (a / and
                                         :op1 (s2 / sea)
                                         :op2 (r / river)
                                         :op3 (t / town)
                                         :op4 (m / mountain)
                                         :op5 (d / desert)
                                         :mod (a2 / all)))))


# ::snt " That is very interesting , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (i / interest-01
            :ARG0 (t2 / that)
            :ARG1 p
            :degree (v / very)))


# ::snt " Here at last is a man who has a real profession ! "
(m2 / man
    :ARG0-of (h2 / have-03
                 :ARG1 (p2 / profession
                           :ARG1-of (r / real-04)))
    :time (a / at-last))


# ::snt And he cast a look around him at the planet of the geographer .
(a / and
   :op2 (l / look-01
           :ARG0 (h / he)
           :ARG1 (p / planet)
           :direction (a2 / around
                          :op1 h)))


# ::snt It was the most magnificent and stately planet that he had ever seen .
(h2 / have-degree-91
    :ARG1 (i / it)
    :ARG2 (a / and
             :op1 (m2 / magnificent)
             :op2 (s / stately))
    :ARG3 (m / most)
    :ARG5 (p / planet
             :ARG1-of (s2 / see-01
                          :ARG0 (h / he)
                          :time (e / ever))))


# ::snt " Your planet is very beautiful , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (b / beautiful-02
            :ARG1 (p / planet)
            :degree (v / very)))


# ::snt " Has it any oceans ? "
(h / have-03
   :ARG0 (i / it)
   :ARG1 (o / ocean
            :mod (a / any))
   :polarity (a2 / amr-unknown))


# ::snt " I could n't tell you , " said the geographer .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (p / possible-01
            :ARG1 (t / tell-01
                     :ARG0 g)))


# ::snt " Ah ! "
(a / ah)


# ::snt The little prince was disappointed .
(d / disappoint-01
   :ARG1 (p / prince
            :mod (l / little)))


# ::snt " Has it any mountains ? "
(h2 / have-03
    :polarity (a2 / amr-unknown)
    :ARG0 (i / it)
    :ARG1 (m / mountain
             :mod (a / any)))


# ::snt " I could n't tell you , " said the geographer .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (p / possible-01
            :ARG1 (t / tell-01
                     :ARG0 g)))


# ::snt " And towns , and rivers , and deserts ? "
(a3 / and
    :op2 (a4 / and
             :op1 (t2 / town)
             :op2 (r2 / river)
             :op3 (d2 / desert)
             :polarity (a / amr-unknown)))


# ::snt " I could n't tell you that , either . "
(p2 / possible-01
    :ARG1 (t / tell-01
             :ARG0 (i / i)
             :ARG1 (t2 / that)
             :ARG2 (y / you))
    :mod (e / either))


# ::snt " But you are a geographer ! "
(c / contrast-01
   :ARG2 (g2 / geographer
             :domain (y2 / you)))


# ::snt " Exactly , " the geographer said .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (e / exact))


# ::snt " But I am not an explorer .
(c / contrast-01
   :ARG2 (p / person
            :domain (i / i)
            :ARG0-of (e / explore-01)))


# ::snt I have n't a single explorer on my planet .
(h2 / have-03
    :ARG0 (i / i)
    :ARG1 (p2 / person
              :ARG1-of (s / single-02)
              :ARG0-of (e / explore-01)
              :location (p3 / planet
                            :poss i)))


# ::snt It is not the geographer who goes out to count the towns , the rivers , the mountains , the seas , the oceans , and the deserts .
(p2 / person
    :domain (g / geographer)
    :ARG0-of (g2 / go-02
                 :purpose (c / count-01
                             :ARG0 g
                             :ARG1 (a / and))))


# ::snt The geographer is much too important to go loafing about .
(h / have-degree-91
   :ARG1 (g / geographer)
   :ARG2 (i2 / important-01
             :ARG1 g)
   :ARG3 (t / too
            :quant (m / much))
   :ARG6 (g2 / go-01
             :ARG1 g
             :purpose (l / loaf-01
                         :ARG0 g)))


# ::snt He does not leave his desk .
(l / leave-11
   :ARG0 (h / he)
   :ARG1 (d / desk
            :poss h))


# ::snt But he receives the explorers in his study .
(c / contrast-01
   :ARG2 (r / receive-01
            :ARG0 (h / he)
            :ARG1 (p / person
                     :ARG0-of (e / explore-01))
            :location (s / study
                         :poss h)))


# ::snt He asks them questions , and he notes down what they recall of their travels .
(a3 / and
    :op1 (q2 / question-01
             :ARG0 (h / he)
             :ARG2 (t / they))
    :op2 (n / note-02
            :ARG0 h
            :ARG1 (t3 / thing
                      :ARG1-of (r / recall-02))))


# ::snt And if the recollections of any one among them seem interesting to him , the geographer orders an inquiry into that explorer 's moral character . "
# ::snt " Why is that ? "
(t2 / that
    :ARG1-of (c / cause-01
                :ARG0 (a / amr-unknown)))


# ::snt " Because an explorer who told lies would bring disaster on the books of the geographer .
(c / cause-01
   :ARG1 (l / lie-08
            :ARG0 (p2 / person
                      :ARG0-of (e2 / explore-01))
            :condition-of (b3 / bring-01
                              :ARG1 (d2 / disaster)
                              :ARG2 (b4 / book
                                        :poss (g2 / geographer)))))


# ::snt So would an explorer who drank too much . "
(c / cause-01
   :ARG0 (p / person
            :ARG0-of (e / explore-01)
            :ARG0-of (d / drink-01
                        :ARG1-of (h / have-quant-91
                                    :ARG2 (m / much)
                                    :ARG3 (t2 / too))))
   :ARG1 (t / thing
            :ARG1-of (s / same-01)))


# ::snt " Why is that ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / that
            :ARG1-of (c / cause-01
                        :ARG0 (a2 / amr-unknown))))


# ::snt " Because intoxicated men see double .
(s3 / see-01
    :ARG0 (m2 / man
              :ARG1-of (i2 / intoxicate-01))
    :ARG2 (d / double)
    :ARG0-of (c2 / cause-01
                 :ARG1 (t2 / thing)))


# ::snt Then the geographer would note down two mountains in a place where there was only one . "
# ::snt " I know some one , " said the little prince , " who would make a bad explorer . "
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (k / know-02
            :ARG0 p
            :ARG1 (s2 / someone
                      :ARG1-of (m / make-06
                                  :ARG2 (p2 / person
                                            :ARG0-of (e / explore-01)
                                            :ARG1-of (b / bad-02
                                                        :ARG2 e))))))


# ::snt " That is possible .
(p2 / possible-01
    :ARG1 (t / that))


# ::snt Then , when the moral character of the explorer is shown to be good , an inquiry is ordered into his discovery . "
# ::snt " One goes to see it ? "
(g / go-02
   :polarity (a / amr-unknown)
   :ARG0 (o / one)
   :purpose (s2 / see-01
                :ARG0 o
                :ARG1 (i / it)))


# ::snt " No .
(n / no)


# ::snt That would be too complicated .
(h / have-degree-91
   :ARG1 (t / that)
   :ARG2 (c2 / complicate-01
             :ARG1 t)
   :ARG3 (t2 / too))


# ::snt But one requires the explorer to furnish proofs .
# ::snt For example , if the discovery in question is that of a large mountain , one requires that large stones be brought back from it . "
(e2 / exemplify-01
    :ARG0 (r / require-01
             :ARG0 (o / one)
             :ARG1 (b / bring-01)
             :condition (d / discover-01
                           :ARG1-of (q / question-01))))


# ::snt The geographer was suddenly stirred to excitement .
(s / stir-02
   :ARG1 (g / geographer)
   :ARG3 (e / excite-01)
   :manner (s2 / sudden))


# ::snt " But you - - you come from far away !
(c3 / contrast-01
    :ARG2 (c / come-01
             :ARG1 (y / you)
             :ARG3 (a / away)))


# ::snt You are an explorer !
(p2 / person
    :ARG0-of (e / explore-01)
    :domain (y / you))


# ::snt You shall describe your planet to me ! "
(d2 / describe-01
    :ARG0 (y / you
             :source p)
    :ARG1 (p / planet)
    :beneficiary (i / i))


# ::snt And , having opened his big register , the geographer sharpened his pencil .
(a / and
   :op2 (s / sharpen-01
           :ARG0 (g / geographer)
           :ARG1 (p / pencil
                    :poss g)
           :time (a3 / after)))


# ::snt The recitals of explorers are put down first in pencil .
(p / put-01
   :ARG1 (t / thing
            :ARG1-of (r / recite-01
                        :ARG0 (p2 / person
                                  :ARG0-of (e / explore-01))))
   :direction (d / down)
   :time (f / first)
   :instrument (p3 / pencil))


# ::snt One waits until the explorer has furnished proofs , before putting them down in ink .
# ::snt " Well ? " said the geographer expectantly .
(r / request-response-91
   :ARG0 (g / geographer)
   :manner (e / expect-01
              :ARG0 g))


# ::snt " Oh , where I live , " said the little prince , " it is not very interesting .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (l3 / live-01)
            :ARG1-of i2)
   :ARG1 (a / and
            :op1 (o / oh)
            :op2 (i2 / interest-01)))


# ::snt It is all so small .
(s3 / small
    :domain (i / it
               :mod (a / all))
    :degree (s / so))


# ::snt I have three volcanoes .
(h2 / have-03
    :ARG0 (i / i)
    :ARG1 (v / volcano))


# ::snt Two volcanoes are active and the other is extinct .
(a3 / and
    :op1 (a / activity-06
            :ARG0 (v / volcano))
    :op2 (e / extinct
            :domain (o / other)))


# ::snt But one never knows . "
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (o / one)
            :time (e / ever)))


# ::snt " One never knows , " said the geographer .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (k / know-01
            :ARG0 (o / one)
            :time (e / ever)))


# ::snt " I have also a flower . "
(h2 / have-03
    :ARG0 (i / i)
    :ARG1 (t / thing
             :ARG1-of (f / flower-01))
    :mod (a2 / also))


# ::snt " We do not record flowers , " said the geographer .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (r / record-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                     :ARG1-of (f / flower-01))))


# ::snt " Why is that ?
(t2 / that
    :ARG1-of (c / cause-01
                :ARG0 (a / amr-unknown)))


# ::snt The flower is the most beautiful thing on my planet ! "
(h / have-degree-91
   :ARG1 (t / thing
            :ARG1-of (f / flower-01))
   :ARG2 (b / beautiful-02
            :ARG1 t)
   :ARG3 (m / most)
   :ARG5 (t2 / thing
             :location (p / planet
                          :source-of (i / i))))


# ::snt " We do not record them , " said the geographer , " because they are ephemeral . "
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (r / record-01
            :ARG0 (w / we)
            :ARG1 (t / they)
            :ARG1-of (c / cause-01
                        :ARG0 (e / ephemeral
                                 :domain t))))


# ::snt " What does that mean - - ' ephemeral ' ? "
(m2 / mean-01
    :ARG1 (e / ephemeral)
    :ARG2 (a / amr-unknown))


# ::snt " Geographies , " said the geographer , " are the books which , of all books , are most concerned with matters of consequence .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (b / book
            :ARG1-of (h / have-degree-91
                        :ARG2 (c / concern-02
                                 :ARG1 (m2 / matter
                                           :ARG1-of (c2 / consequential-01)))
                        :ARG3 (m / most)
                        :ARG5 (b2 / book
                                  :mod (a / all)))
            :domain (g2 / geography)))


# ::snt They never become old - fashioned .
(b / become-01
   :ARG1 (t / they)
   :ARG2 (f / fashion
            :mod (o / old))
   :time (e / ever))


# ::snt It is very rarely that a mountain changes its position .
(c / change-01
   :ARG0 (m / mountain)
   :ARG1 (l / location
            :ARG2-of (p / position-01
                        :ARG1 m))
   :ARG1-of (r / rare-02
               :degree (v / very)))


# ::snt We write of eternal things . "
(w3 / write-01
    :ARG0 (w2 / we)
    :ARG1 (t / thing
             :mod (e / eternal)))


# ::snt " But extinct volcanoes may come to life again , " the little prince interrupted .
# ::snt " What does that mean - - ' ephemeral ' ? "
(m2 / mean-01
    :ARG1 (e / ephemeral)
    :ARG2 (a / amr-unknown))


# ::snt " Whether volcanoes are extinct or alive , it comes to the same thing for us , " said the geographer .
(s / say-01
   :ARG0 (g / geographer)
   :ARG1 (s2 / same-01
             :ARG1 (e2 / extinct)
             :ARG2 (l2 / live-01)
             :ARG3 (w / we)))


# ::snt " The thing that matters to us is the mountain .
(m3 / mountain
    :domain (t / thing
               :ARG1-of (m2 / matter-01
                            :ARG2 (w / we))))


# ::snt It does not change . "
(c2 / change-01
    :ARG1 (i / it))


# ::snt " But what does that mean - - ' ephemeral ' ? " repeated the little prince , who never in his life had let go of a question , once he had asked it .
(r / repeat-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG0-of (l2 / let-01
                         :ARG1 (g / go-02
                                  :ARG0 (t / thing
                                           :ARG1-of (q / question-01
                                                       :ARG0 p)))
                         :time (o / once
                                  :op1 (a2 / ask-01
                                           :ARG1 t))
                         :time (e2 / ever
                                   :duration (t2 / thing
                                                 :ARG1-of (l3 / live-01
                                                              :ARG0 p)))))
   :ARG1 (c / contrast-01
            :ARG2 (m / mean-01)))


# ::snt " It means , ' which is in danger of speedy disappearance . ' "
(m2 / mean-01
    :ARG1 (i / it)
    :ARG2 (t / thing
             :ARG1-of (e / endanger-01
                         :ARG1-of (c / cause-01
                                     :ARG0 (d / disappear-01
                                              :ARG1-of (s / speedy-03))))))


# ::snt " Is my flower in danger of speedy disappearance ? "
(e2 / endanger-01
    :polarity (a / amr-unknown)
    :ARG1 (f2 / flower
              :poss (i / i))
    :ARG1-of (c / cause-01
                :ARG0 (d / disappear-01
                         :ARG1-of (s / speedy-03))))


# ::snt " Certainly it is . "
(c2 / certain
    :domain (i2 / it))


# ::snt And I have left her on my planet , all alone ! "
(a4 / and
    :op2 (l / leave-12
            :ARG0 (i / i)
            :ARG1 (s / she)
            :ARG0-of (c / cause-01
                        :ARG1 (a2 / alone
                                  :degree (a3 / all)
                                  :domain s))))


# ::snt That was his first moment of regret .
(m / moment
   :domain (t / that)
   :mod (r / regret-01)
   :ord (o / ordinal-entity)
   :poss (h / he))


# ::snt But he took courage once more .
(c / contrast-01
   :ARG2 (t / take-01
            :ARG0 (h / he)
            :ARG1 (c2 / courage)
            :mod (a / again)))


# ::snt " What place would you advise me to visit now ? " he asked .
(a / ask-01
   :ARG0 (h / he)
   :ARG1 (a2 / advise-01
             :ARG0 (y / you)
             :ARG1 h
             :ARG2 (v / visit-01
                      :ARG0 h)))


# ::snt " The planet Earth , " replied the geographer .
(r / reply-01
   :ARG0 (g / geographer)
   :ARG2 (p2 / planet
             :name (n / name)))


# ::snt " It has a good reputation . "
(h2 / have-03
    :ARG0 (i / it)
    :ARG1 (r / reputation
             :ARG1-of (g / good-02)))


# ::snt And the little prince went away , thinking of his flower .
(a / and
   :op2 (a2 / and
            :op1 (g / go-02)
            :op2 (t / think-01)))


# ::snt Chapter 16 .
(c / chapter)


# ::snt So then the seventh planet was the Earth .
(p2 / planet
    :ord (o / ordinal-entity)
    :domain (p / planet
               :name (n / name))
    :ARG1-of (c / cause-01))


# ::snt The Earth is not just an ordinary planet !
(p / planet
   :mod (o / ordinary
           :mod (j / just))
   :domain (p2 / planet
               :name (n / name)))


# ::snt One can count , there 111 kings ( not forgetting , to be sure , the Negro kings among them ) , 7000 geographers , 900,000 businessmen , 7,500,000 tipplers , 311,000,000 conceited men - - that is to say , about 2,000,000,000 grown - ups .
# ::snt To give you an idea of the size of the Earth , I will tell you that before the invention of electricity it was necessary to maintain , over the whole of the six continents , a veritable army of 462,511 lamplighters for the street lamps .
# ::snt Seen from a slight distance , that would make a splendid spectacle .
(m / make-01
   :ARG0 (t / that)
   :ARG1 (s / spectacle
            :mod (s2 / splendid))
   :condition (s3 / see-01
                  :ARG1 t
                  :manner (d / distance-01
                             :ARG2 t)))


# ::snt The movements of this army would be regulated like those of the ballet in the opera .
(r / regulate-01
   :ARG1 (m / move-01
            :ARG0 (a / army)
            :ARG1-of (r3 / resemble-01
                         :ARG2 (m2 / move-01
                                   :ARG0 (b / ballet
                                            :subevent-of (o / opera))))))


# ::snt First would come the turn of the lamplighters of New Zealand and Australia .
(c / come-03
   :ARG1 (t / turn-01
            :ARG1 (p / person
                     :ARG0-of (l / light-04
                                 :ARG1 (l2 / lamp))))
   :time (f / first))


# ::snt Having set their lamps alight , these would go off to sleep .
(g / go-02
   :ARG0 (t / they)
   :purpose (s / sleep-01
               :ARG0 t)
   :time (a / after
            :op1 (l2 / light-04
                     :ARG0 t)))


# ::snt Next , the lamplighters of China and Siberia would enter for their steps in the dance , and then they too would be waved back into the wings .
(a / and
   :op1 (e / enter-01
           :ARG0 (p / person
                    :ARG0-of (l / light-04
                                :ARG1 (l2 / lamp)))
           :time (n / next)
           :purpose (s / step
                       :poss p
                       :part-of (d2 / dance-01)))
   :op2 (w / wave-02
           :ARG1 p
           :ARG2 (b / back)
           :time (t / then)
           :mod (t2 / too)))


# ::snt After that would come the turn of the lamplighters of Russia and the Indies ; then those of Africa and Europe , then those of South America ; then those of South America ; then those of North America .
(c8 / come-03
    :ARG1 (t2 / turn
              :poss (p / person
                       :ARG0-of (l / light-04
                                   :ARG1 (l2 / lamp)))
              :time (a / after)))


# ::snt And never would they make a mistake in the order of their entry upon the stage .
(a / and
   :op2 (m2 / mistake-02
            :ARG0 (t / they)
            :ARG1 (o / order-03)
            :time (e2 / ever)))


# ::snt It would be magnificent .
(m / magnificent
   :domain (i / it))


# ::snt Only the man who was in charge of the single lamp at the North Pole , and his colleague who was responsible for the single lamp at the South Pole - - only these two would live free from toil and care : they would be busy twice a year .
(l / live-01
   :ARG0 (a2 / and
             :op1 (m / man
                     :ARG1-of (c4 / charge-05
                                  :ARG2 (l2 / lamp
                                            :ARG1-of (s / single-02)
                                            :location (w / world-region))))
             :op2 (c3 / colleague
                      :poss m
                      :ARG0-of (r / responsible-03
                                  :ARG1 (l4 / lamp
                                            :ARG1-of (s2 / single-02))
                                  :location (w2 / world-region
                                                :name (n / name))))
             :mod (p / person))
   :ARG3-of (f / free-04
               :ARG1 a2
               :ARG2 (a / and
                        :op1 (t / toil-01)
                        :op2 (c / care-01)))
   :ARG1-of (c2 / cause-01
                :ARG0 (b / busy-01
                         :ARG1 a2
                         :frequency (r2 / rate-entity-91))))


# ::snt Chapter 17 .
(c / chapter)


# ::snt When one wishes to play the wit , he sometimes wanders a little from the truth .
(w / wander-01
   :ARG0 (o / one)
   :ARG1 (f / from
            :op1 (t / truth))
   :time (w2 / wish-01
             :ARG0 o
             :ARG1 (p / play-02
                      :ARG0 o))
   :degree (l / little)
   :frequency (s / sometimes))


# ::snt I have not been altogether honest in what I have told you about the lamplighters .
(h / honest-01
   :ARG0 (i / i)
   :ARG1 (t2 / thing
             :ARG1-of (t / tell-01
                         :ARG0 i
                         :ARG2 (y / you)
                         :topic (p2 / person
                                    :ARG0-of (l / light-04
                                                :ARG1 (l2 / lamp)))))
   :degree (a / altogether))


# ::snt And I realize that I run the risk of giving a false idea of our planet to those who do not know it .
# ::snt Men occupy a very small place upon the Earth .
(o / occupy-01
   :ARG0 (m / man)
   :ARG1 (p2 / place
             :mod (s / small)
             :location (p / planet)))


# ::snt If the two billion inhabitants who people its surface were all to stand upright and somewhat crowded together , as they do for some big public assembly , they could easily be put into one public square twenty miles long and twenty miles wide .
(p / possible-01
   :ARG1 (p2 / put-01
             :ARG1 (p3 / person
                       :ARG0-of (i / inhabit-01)
                       :ARG2-of (p4 / people-01
                                    :ARG1 (s2 / surface
                                              :poss (i2 / it))))
             :ARG2 (s5 / square
                       :ARG1-of (p6 / public-02)
                       :ARG1-of (l / long-03
                                   :ARG2 (d2 / distance-quantity
                                             :unit (m / mile)))
                       :ARG1-of (w / wide-02
                                   :mod (d3 / distance-quantity
                                            :unit (m2 / mile))))
             :ARG1-of (e / easy-05))
   :condition (s / stand-01
                 :ARG0 p3
                 :ARG1-of (r / resemble-01
                             :ARG2 (d / do-02
                                      :ARG0 p3
                                      :purpose (a3 / assemble-02)))
                 :manner (a2 / and)))


# ::snt All humanity could be piled up on a small Pacific islet .
(p / possible-01
   :ARG1 (p2 / pile-01
             :ARG1 (h / humanity)
             :ARG2 (i / islet)))


# ::snt The grown - ups , to be sure , will not believe you when you tell them that .
(b / believe-01
   :ARG0 (g2 / grown-up)
   :ARG1 (y / you)
   :time (t / tell-01
            :ARG0 y
            :ARG1 (t2 / that)
            :ARG2 g2)
   :mod (t3 / to-be-sure))


# ::snt They imagine that they fill a great deal of space .
(i / imagine-01
   :ARG0 (t / they)
   :ARG1 (f / fill-01
            :ARG1 (s / space)
            :ARG2 t))


# ::snt They fancy themselves as important as the baobabs .
(f / fancy-01
   :ARG0 (t / they)
   :ARG1 (h / have-degree-91
            :ARG1 t
            :ARG2 (i2 / important-01
                      :ARG1 t)
            :ARG3 (e / equal)
            :ARG4 (b / baobab)))


# ::snt You should advise them , then , to make their own calculations .
(r / recommend-01
   :ARG1 (a / advise-01
            :ARG0 (y / you)
            :ARG1 (t / they)
            :ARG2 (c / calculate-01
                     :ARG0 t))
   :ARG2 y)


# ::snt They adore figures , and that will please them .
(a / and
   :op1 (a2 / adore-01
            :ARG0 (t / they)
            :ARG1 (f / figure))
   :op2 (p / please-01
           :ARG1 t
           :ARG2 (t2 / that)))


# ::snt But do not waste your time on this extra task .
(c / contrast-01
   :ARG2 (w / waste-01
            :ARG0 (y / you)
            :ARG1 (t / time
                     :poss y)
            :ARG2 (t2 / task-01)))


# ::snt It is unnecessary .
(n / need-01
   :ARG1 (i / it))


# ::snt You have , I know , confidence in me .
(t / trust-01
   :ARG0 (y / you)
   :ARG2 (i / i)
   :ARG1-of (k / know-01
               :ARG0 i))


# ::snt When the little prince arrived on the Earth , he was very much surprised not to see any people .
(s / surprise-01
   :ARG0 (s2 / see-01
             :ARG0 (p / prince)
             :ARG1 (p2 / person))
   :ARG1 p
   :degree (m / much
              :degree (v / very))
   :time (a2 / arrive-01
             :ARG1 p
             :ARG4 (p3 / planet)))


# ::snt He was beginning to be afraid he had come to the wrong planet , when a coil of gold , the color of the moonlight , flashed across the sand .
# ::snt " Good evening , " said the little prince courteously .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (e2 / evening
             :ARG1-of (g / good-02))
   :manner (c / courteous))


# ::snt " Good evening , " said the snake .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (d / date-entity
            :dayperiod (e / evening)
            :ARG1-of (g / good-02)))


# ::snt " What planet is this on which I have come down ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (p2 / planet
             :ARG4-of (c / come-01
                         :ARG1 p
                         :direction (d / down))
             :domain (a2 / amr-unknown)))


# ::snt " This is the Earth ; this is Africa , " the snake answered .
(a / answer-01
   :ARG0 (s / snake)
   :ARG2 (a2 / and
             :op1 (p / planet)
             :op2 (c / continent)))


# ::snt " Ah !
(a / ah)


# ::snt Then there are no people on the Earth ? "
(p / person
   :location (p2 / planet
                 :name (n2 / name))
   :ARG1-of (r / request-confirmation-91))


# ::snt " This is the desert .
(d2 / desert
    :domain (t / this))


# ::snt There are no people in the desert .
(p / person
   :location (d / desert))


# ::snt The Earth is large , " said the snake .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (l / large
            :domain (p / planet)))


# ::snt The little prince sat down on a stone , and raised his eyes toward the sky .
(a / and
   :op1 (s / sit-down-02
           :ARG1 (p / prince)
           :ARG2 (s2 / stone)
           :direction (d / down))
   :op2 (r / raise-01
           :ARG0 p
           :direction (s3 / sky)))


# ::snt " I wonder , " he said , " whether the stars are set alight in heaven so that one day each one of us may find his own again ...
(s / say-01
   :ARG0 (h / he)
   :ARG1 (w2 / wonder-01
             :ARG0 h
             :ARG1 (t / truth-value
                      :polarity-of (l / light-04
                                      :ARG1 (s2 / star)
                                      :location (h2 / heaven)
                                      :purpose (f / find-01
                                                  :ARG0 (w / we)
                                                  :ARG1 (s3 / star
                                                            :poss w)
                                                  :time (d / day)
                                                  :mod (a / again)
                                                  :ARG1-of (p / possible-01))))))


# ::snt Look at my planet .
(l2 / look-01
    :ARG0 (y / you)
    :ARG1 (p / planet
             :source (i / i)))


# ::snt It is right there above us .
(b2 / be-located-at-91
    :ARG1 (i / it)
    :ARG2 (t / there
             :mod (r / right)
             :direction (a / above)))


# ::snt But how far away it is ! "
(c2 / contrast-01
    :ARG2 (f / far
             :direction (a / away)
             :domain (i / it)
             :degree (s / so)))


# ::snt " It is beautiful , " the snake said .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (b / beautiful-02
            :ARG1 (i / it)))


# ::snt " What has brought you here ? "
(b2 / bring-01
    :ARG0 (a / amr-unknown)
    :ARG1 (y / you)
    :ARG2 (h / here))


# ::snt " I have been having some trouble with a flower , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (h / have-trouble-04
            :ARG0 p
            :ARG1 (f2 / flower)
            :mod (s2 / some)))


# ::snt " Ah ! " said the snake .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (a / ah-01))


# ::snt And they were both silent .
(a / and
   :op2 (s / silent
           :domain (t / they)))


# ::snt " Where are the men ? " the little prince at last took up the conversation again .
(a3 / and
    :op1 (t / take-up-31
            :ARG0 (p / prince)
            :ARG1 (c / converse-01)
            :mod (a / again)
            :time (a2 / at-last))
    :op2 (b2 / be-located-at-91
             :ARG1 (m / man)
             :ARG2 (a4 / amr-unknown)))


# ::snt " It is a little lonely in the desert ... "
(l2 / lonely
    :domain (b / be-located-at-91
               :ARG2 (d / desert))
    :degree (l / little))


# ::snt " It is also lonely among men , " the snake said .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (l / lonely
            :domain (b / be-located-at-91)
            :mod (a2 / also)))


# ::snt The little prince gazed at him for a long time .
(g / gaze-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (h / he)
   :ARG1-of (l2 / long-03))


# ::snt " You are a funny animal , " he said at last .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (a2 / animal
             :mod (f / funny)
             :domain (y / you))
   :time (a / at-last))


# ::snt " You are no thicker than a finger ... "
(h / have-degree-91
   :ARG1 (y / you)
   :ARG2 (t / thick-03
            :ARG1 y)
   :ARG3 (m / more)
   :ARG4 (f / finger))


# ::snt " But I am more powerful than the finger of a king , " said the snake .
# ::snt The little prince smiled .
(s / smile-01
   :ARG0 (p / prince
            :mod (l / little)))


# ::snt " You are not very powerful .
(p / powerful-02
   :ARG1 (y / you)
   :degree (v / very))


# ::snt You have n't even any feet .
(h / have-03
   :ARG0 (y / you)
   :ARG1 (f / foot
            :quant (a / any))
   :mod (e / even))


# ::snt You can not even travel ... "
(p / possible-01
   :ARG1 (t / travel-01
            :ARG0 (y / you))
   :mod (e / even))


# ::snt " I can carry you farther than any ship could take you , " said the snake .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (p / possible-01
            :ARG1 (c / carry-01
                     :ARG0 s2
                     :ARG1-of (h / have-degree-91
                                 :ARG3 (m / more)
                                 :ARG4 (d / distance-quantity
                                          :extent-of (t / take-01
                                                        :ARG0 (s3 / ship
                                                                  :mod (a / any))))))))


# ::snt " Whomever I touch , I send back to the earth from whence he came , " the snake spoke again .
(s / speak-01
   :ARG0 (s2 / snake)
   :ARG1 (s3 / send-01
             :ARG0 s2
             :ARG1 (p / person
                      :ARG1-of (t / touch-01
                                  :ARG0 s2)
                      :ARG1-of (c / come-01))
             :ARG2 (b / back))
   :mod (a / again))


# ::snt " But you are innocent and true , and you come from a star ... "
(c / contrast-01
   :ARG2 (a / and
            :op1 (a2 / and)
            :op2 (c2 / come-01)))


# ::snt The little prince made no reply .
(r / reply-01
   :ARG0 (p / prince
            :mod (l / little)))


# ::snt " You move me to pity - - you are so weak on this Earth made of granite , " the snake said .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (p3 / pity-01
             :ARG0 s2
             :ARG1 (y / you)
             :ARG1-of (c / cause-01
                         :ARG0 (w / weak-02
                                  :ARG1 y
                                  :degree (s3 / so)
                                  :location (p2 / planet
                                                :consist-of (g / granite))))))


# ::snt " I can help you , some day , if you grow too homesick for your own planet .
(p / possible-01
   :ARG1 (h / help-01
            :ARG0 (i / i)
            :ARG1 (y / you)
            :time (d / day))
   :condition (g / grow-02
                 :ARG1 y
                 :ARG2 (h2 / homesick
                           :ARG2-of (h3 / have-degree-91
                                        :ARG1 y
                                        :ARG3 (t / too)))))


# ::snt I can - - "
(p / possible-01
   :ARG1 (d / do-02
            :ARG0 (i / i)))


# ::snt " Oh !
(o / oh)


# ::snt I understand you very well , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (u / understand-01
            :ARG0 p
            :ARG1 (y / you)
            :mod (w / well)))


# ::snt " But why do you always speak in riddles ? "
(c / contrast-01
   :ARG2 (s2 / speak-01
             :ARG0 (y / you)
             :ARG1 (r / riddle)
             :time (a / always)
             :purpose (a2 / amr-unknown)))


# ::snt " I solve them all , " said the snake .
(s / say-01
   :ARG0 (s2 / snake)
   :ARG1 (s3 / solve-01
             :ARG0 s2
             :ARG1 (t / they)))


# ::snt And they were both silent .
(a / and
   :op2 (s / silent
           :domain (t / they)))


# ::snt Chapter 18 .
(c / chapter)


# ::snt The little prince crossed the desert and met with only one flower .
(a / and
   :op1 (c / cross-02
           :ARG0 (p / prince)
           :ARG1 (d / desert))
   :op2 (m / meet-03
           :ARG0 p
           :ARG1 (f / flower)
           :mod (o2 / only)))


# ::snt It was a flower with three petals , a flower of no account at all .
(f2 / flower
    :ARG0-of (h / have-03
                :ARG1 (p / petal))
    :ARG1-of (a / account-01
                :degree (a2 / at-all))
    :domain (i / it))


# ::snt " Good morning , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m2 / morning
             :ARG1-of (g / good-02)))


# ::snt " Good morning , " said the flower .
(s / say-01
   :ARG0 (f / flower-01)
   :ARG1 (m2 / morning
             :ARG1-of (g / good-02)))


# ::snt " Where are the men ? " the little prince asked , politely .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b / be-located-at-91
            :ARG1 (m / man)
            :ARG2 (a2 / amr-unknown))
   :manner (p3 / polite-01))


# ::snt The flower had once seen a caravan passing .
(s / see-01
   :ARG0 (f / flower)
   :ARG1 (p / pass-02
            :ARG0 (c / caravan-01)))


# ::snt " Men ? " she echoed .
(e / echo-01
   :ARG0 (s / she)
   :ARG1 (m / man
            :polarity (a / amr-unknown)))


# ::snt " I think there are six or seven of them in existence .
(t / think-01
   :ARG0 (i / i)
   :ARG1 (e / exist-01
            :ARG1 (t2 / they)))


# ::snt I saw them , several years ago .
(s / see-01
   :ARG0 (i / i)
   :ARG1 (t / they)
   :time (b / before
            :op1 (n / now)
            :quant (s2 / several)))


# ::snt But one never knows where to find them .
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (o / one)
            :ARG1 (l / location
                     :location-of (f / find-01
                                     :ARG0 o
                                     :ARG1 (t / they)))
            :time (e / ever)))


# ::snt The wind blows them away .
(b / blow-01
   :ARG0 (w / wind)
   :ARG1 (t / they)
   :direction (a / away))


# ::snt They have no roots , and that makes their life very difficult . "
# ::snt " Goodbye , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (g / goodbye))


# ::snt " Goodbye , " said the flower .
(s / say-01
   :ARG0 (f / flower)
   :ARG1 (g / goodbye))


# ::snt Chapter 19 .
(c / chapter)


# ::snt After that , the little prince climbed a high mountain .
(c / climb-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / mountain
            :ARG1-of (h / high-02))
   :time (a / after
            :op1 (t / that)))


# ::snt The only mountains he had ever known were the three volcanoes , which came up to his knees .
(v / volcano
   :domain (m / mountain
              :mod (o / only)
              :ARG1-of (k / know-01
                          :ARG0 (h / he
                                   :part k2)
                          :time (e / ever)))
   :ARG1-of (c / come-04
               :ARG2 (u / up-to
                        :op1 (k2 / knee))))


# ::snt And he used the extinct volcano as a footstool .
(a / and
   :op2 (u / use-01
           :ARG0 (h / he)
           :ARG1 (v / volcano)
           :ARG2 (f / footstool)))


# ::snt But he saw nothing , save peaks of rock that were sharpened like needles .
(c / contrast-01
   :ARG2 (s / see-01
            :ARG0 (h / he)
            :ARG1 (n / nothing
                     :ARG2-of (e / except-01
                                 :ARG1 (p / peak
                                          :consist-of (r / rock)
                                          :ARG1-of (s2 / sharpen-01
                                                       :manner (r2 / resemble-01
                                                                   :ARG1 p
                                                                   :ARG2 (n2 / needle))))))))


# ::snt " Good morning , " he said courteously .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (m / morning
            :ARG1-of (g / good-02))
   :manner (c / courtesy))


# ::snt " Good morning - - Good morning - - Good morning , " answered the echo .
(a / answer-01
   :ARG0 (e / echo-01)
   :ARG1 (m2 / morning
             :ARG1-of (g / good-02)))


# ::snt " Who are you ? " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG2 (y / you
            :domain (a / amr-unknown)))


# ::snt " Who are you - - Who are you - - Who are you ? " answered the echo .
(a / answer-01
   :ARG0 (e / echo-01)
   :ARG2 (y / you
            :domain (a2 / amr-unknown)))


# ::snt " Be my friends .
(h / have-rel-role-91
   :ARG0 (y / you)
   :ARG1 (i / i)
   :ARG2 (f / friend))


# ::snt I am all alone , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (a / alone
            :degree (a2 / all)
            :domain h))


# ::snt " I am all alone - - all alone - - all alone , " answered the echo .
(a / answer-01
   :ARG0 (e / echo-01)
   :ARG2 (a2 / alone
             :domain (i / i)
             :mod (a3 / all)))


# ::snt " What a queer planet ! " he thought .
(t / think-01
   :ARG0 (h / he)
   :ARG1 (p / planet
            :mod (q / queer)))


# ::snt " It is altogether dry , and altogether pointed , and altogether harsh and forbidding .
(a / and
   :op1 (d / dry-08
           :ARG1 (i / it)
           :degree (a2 / altogether))
   :op2 (p / pointed
           :degree (a3 / altogether)
           :domain i)
   :op3 (a4 / and
            :op1 (h / harsh-02
                    :ARG1 i)
            :op2 (f / forbidding
                    :domain i)
            :degree (a5 / altogether)))


# ::snt And the people have no imagination .
(a / and
   :op2 (h / have-03
           :ARG0 (p / person)
           :ARG1 (i2 / imagine-01)))


# ::snt They repeat whatever one says to them ...
(r / repeat-01
   :ARG0 (t2 / they)
   :ARG1 (t / thing
            :ARG1-of (s2 / say-01
                         :ARG0 (o / one)
                         :ARG2 t2)
            :mod (a / all)))


# ::snt On my planet I had a flower ; she always was the first to speak ... "
(h / have-03
   :ARG0 (i / i)
   :ARG1 (f / flower
            :ARG0-of (s / speak-01
                        :ord (o / ordinal-entity)
                        :time (a / always)))
   :location (p2 / planet
                 :poss i))


# ::snt Chapter 20 .
(c / chapter)


# ::snt But it happened that after walking for a long time through sand , and rocks , and snow , the little prince at last came upon a road .
# ::snt And all roads lead to the abodes of men .
(a / and
   :op2 (l / lead-01
           :ARG0 (r / road)
           :ARG4 (a3 / abode)))


# ::snt " Good morning , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt He was standing before a garden , all a - bloom with roses .
(s / stand-01
   :ARG1 (h / he)
   :ARG2 (b / before
            :op1 (g / garden
                    :location-of (b2 / bloom-01
                                     :ARG0 (r / rose)))))


# ::snt " Good morning , " said the roses .
(s / say-01
   :ARG0 (r / rose)
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt The little prince gazed at them .
(g / gaze-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / they))


# ::snt They all looked like his flower .
(l / look-02
   :ARG0 (t / they
            :mod (a / all))
   :ARG1 (f / flower
            :poss (h / he)))


# ::snt " Who are you ? " he demanded , thunderstruck .
(d / demand-01
   :ARG0 (h / he
            :mod (t / thunderstruck))
   :ARG1 (a / amr-unknown
            :domain (y2 / you)))


# ::snt " We are roses , " the roses said .
(s / say-01
   :ARG0 (r / rose)
   :ARG1 (r2 / rose
             :domain r))


# ::snt And he was overcome with sadness .
(a / and
   :op2 (o / overcome-01
           :ARG0 (s / sad-02)
           :ARG1 (h / he)))


# ::snt His flower had told him that she was the only one of her kind in all the universe .
(t / tell-01
   :ARG0 (f / flower
            :poss (h / he))
   :ARG1 (u2 / unique-01
             :ARG1 (s / she)
             :ARG3 (u / universe))
   :ARG2 h)


# ::snt And here were five thousand of them , all alike , in one single garden !
(a / and
   :op1 (t / they
           :ARG1-of (a2 / alike-05
                        :mod (a3 / all))
           :location (h / here)
           :location (g / garden)))


# ::snt Then he went on with his reflections : " I thought that I was rich , with a flower that was unique in all the world ; and all I had was a common rose .
(g / go-on-25
   :ARG0 (h / he
            :ARG0-of (h3 / have-03
                         :ARG1 (f / flower
                                  :ARG1-of (u / unique-01
                                              :ARG3 (w / world
                                                       :mod (a2 / all))))
                         :ARG0-of (c3 / cause-01)))
   :ARG1 (r / reflect-02
            :ARG0 h
            :ARG1 (c2 / contrast-01))
   :time (t2 / then))


# ::snt A common rose , and three volcanoes that come up to my knees - - and one of them perhaps extinct forever ... that does n't make me a very great prince ... "
(m / make-02
   :ARG0 (a / and
            :op1 (r / rose)
            :op2 (v2 / volcano
                     :ARG1-of (c2 / come-01
                                  :direction (u / up))
                     :ARG2-of (i2 / include-91
                                  :ARG1 (v3 / volcano
                                            :mod (e / extinct)))))
   :ARG1 (p / prince
            :mod (g / great)
            :domain (i / i)))


# ::snt And he lay down in the grass and cried .
(a2 / and
    :op2 (a / and
            :op1 (l / lie-07)
            :op2 (c / cry-02)))


# ::snt Chapter 21 .
(c / chapter)


# ::snt It was then that the fox appeared .
(a / appear-01
   :ARG1 (f / fox)
   :time (t / then))


# ::snt " Good morning , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt " Good morning , " the little prince responded politely , although when he turned around he saw nothing .
(r / respond-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG2 (m / morning
            :ARG1-of (g / good-02))
   :manner (p2 / polite-01)
   :concession (s / see-01
                  :ARG0 p
                  :ARG1 (n / nothing)
                  :time (t / turn-01
                           :ARG1 p)))


# ::snt " I am right here , " the voice said , " under the apple tree . "
(s / say-01
   :ARG0 (v / voice)
   :ARG1 (i / i
            :location (h / here)))


# ::snt " Who are you ? " asked the little prince , and added , " You are very pretty to look at . "
(a / and
   :op1 (a2 / ask-01
            :ARG0 (p / prince)
            :ARG1 (y2 / you))
   :op2 (a4 / add-01
            :ARG0 p
            :ARG1 (l2 / look-01
                      :ARG0 p
                      :ARG1 y2)))


# ::snt " I am a fox , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (f2 / fox
             :domain f))


# ::snt " Come and play with me , " proposed the little prince .
(p / propose-01
   :ARG0 (p2 / prince
             :mod (l / little))
   :ARG1 (a / and
            :op1 (c / come-01)
            :op2 (p3 / play-01
                     :ARG3 p2)))


# ::snt " I am so unhappy . "
(h / happy-01
   :ARG1 (i / i)
   :mod (s / so))


# ::snt " I can not play with you , " the fox said .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (p / possible-01
            :ARG1 (p2 / play-01
                      :ARG0 f)))


# ::snt " I am not tamed . "
(t / tame-01
   :ARG1 (i / i))


# ::snt " Ah !
(a / ah)


# ::snt Please excuse me , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (e / excuse-01
            :ARG0 (y / you)
            :ARG1 (i / i)))


# ::snt But , after some thought , he added : " What does that mean - - ' tame ' ? "
(c / contrast-01
   :ARG2 (a / add-01
            :ARG0 (h / he)
            :ARG1 (m / mean-01)
            :time (a2 / after)))


# ::snt " You do not live here , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (l / live-01
            :ARG0 (y / you)
            :location (h / here)))


# ::snt " What is it that you are looking for ? "
(l / look-01
   :ARG0 (y / you)
   :ARG1 (a / amr-unknown))


# ::snt " I am looking for men , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (l2 / look-01
             :ARG0 p
             :ARG1 (m / man)))


# ::snt " What does that mean - - ' tame ' ? "
(m / mean-01
   :ARG1 (t / tame-01)
   :ARG2 (a / amr-unknown))


# ::snt " Men , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (m / man))


# ::snt " They have guns , and they hunt .
(a / and
   :op1 (h / have-03
           :ARG0 (t / they)
           :ARG1 (g / gun))
   :op2 (h2 / hunt-01
            :ARG0 t))


# ::snt It is very disturbing .
(d / disturb-01
   :ARG0 (i / it)
   :degree (v / very))


# ::snt They also raise chickens .
(r / raise-03
   :ARG0 (t / they)
   :ARG1 (c / chicken)
   :mod (a / also))


# ::snt These are their only interests .
(i / interest-01
   :ARG0 (t / this)
   :ARG1 (t2 / they)
   :mod (o / only))


# ::snt Are you looking for chickens ? "
(l / look-01
   :ARG0 (y / you)
   :ARG1 (c / chicken)
   :polarity (a / amr-unknown))


# ::snt " No , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (n / no))


# ::snt " I am looking for friends .
(l / look-01
   :ARG0 (i / i)
   :ARG1 (p / person
            :ARG0-of (h / have-rel-role-91
                        :ARG1 i
                        :ARG2 (f / friend))))


# ::snt What does that mean - - ' tame ' ? "
(m / mean-01
   :ARG1 (t / tame-01)
   :ARG2 (a / amr-unknown))


# ::snt " It is an act too often neglected , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (n / neglect-01
            :ARG1 (a / act-02)
            :ARG1-of (h / have-degree-91
                        :ARG2 (o / often)
                        :ARG3 (t / too))
            :frequency o))


# ::snt It means to establish ties . "
(m / mean-01
   :ARG1 (i / it)
   :ARG2 (e / establish-01
            :ARG1 (t / tie-01)))


# ::snt " ' To establish ties ' ? "
(e / establish-01
   :ARG1 (t / tie-01)
   :polarity (a / amr-unknown))


# ::snt " Just that , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (t / that
            :mod (j / just)))


# ::snt " To me , you are still nothing more than a little boy who is just like a hundred thousand other little boys .
(o2 / opine-01
    :ARG0 (i / i)
    :ARG1 (b / boy
             :mod (l / little)
             :ARG1-of (r / resemble-01
                         :ARG2 (b2 / boy
                                   :mod (l2 / little)
                                   :mod (o / other))
                         :mod (j / just))
             :domain (y2 / you)
             :mod (s2 / still)))


# ::snt And I have no need of you .
(a / and
   :op2 (n / need-01
           :ARG0 (i / i)
           :ARG1 (y / you)))


# ::snt And you , on your part , have no need of me .
(a / and
   :op2 (n / need-01
           :ARG0 (y / you)
           :ARG1 (i / i)))


# ::snt To you , I am nothing more than a fox like a hundred thousand other foxes .
(o / opine-01
   :ARG0 (y2 / you)
   :ARG1 (f / fox
            :ARG1-of (r3 / resemble-01
                         :ARG2 (f2 / fox
                                   :mod (o3 / other)))
            :domain (i / i)))


# ::snt But if you tame me , then we shall need each other .
(c / contrast-01
   :ARG2 (n / need-01
            :ARG0 (w / we)
            :ARG1 (o / other)
            :condition (t / tame-01)))


# ::snt To me , you will be unique in all the world .
(o / opine-01
   :ARG0 (i / i)
   :ARG1 (u / unique-01
            :ARG1 (y / you)
            :ARG3 (w / world)))


# ::snt To you , I shall be unique in all the world ... "
(o / opine-01
   :ARG0 (y / you)
   :ARG1 (u / unique-01
            :ARG1 (i / i)
            :ARG3 (w / world)))


# ::snt " I am beginning to understand , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b / begin-01
            :ARG0 (i / i)
            :ARG1 (u / understand-01
                     :ARG0 i)))


# ::snt " There is a flower ...
(f / flower)


# ::snt I think that she has tamed me ... "
(t / think-01
   :ARG0 (i / i)
   :ARG1 (t2 / tame-01
             :ARG0 (s / she)
             :ARG1 i))


# ::snt " It is possible , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (p / possible-01
            :ARG1 (i / it)))


# ::snt " On the Earth one sees all sorts of things . "
(s / see-01
   :ARG0 (o / one)
   :ARG1 (t / thing
            :mod (s2 / sort))
   :location (p / planet
                :name (n / name)))


# ::snt " Oh , but this is not on the Earth ! " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (a / and
            :op1 (o / oh)
            :op2 (c / contrast-01)))


# ::snt The fox seemed perplexed , and very curious .
(s / seem-01
   :ARG1 (a / and
            :op1 (p / perplex-01)
            :op2 (c / curious-01)))


# ::snt " On another planet ? "
(b / be-located-at-91
   :ARG2 (p / planet
            :mod (a2 / another))
   :polarity (a / amr-unknown))


# ::snt " Yes . "
(y / yes)


# ::snt " Are there hunters on this planet ? "
(p / person
   :ARG0-of (h / hunt-01)
   :location (p2 / planet)
   :polarity (a / amr-unknown))


# ::snt " No . "
(n / no)


# ::snt " Ah , that is interesting !
(a / ah-01
   :ARG1 (i2 / interest-01
             :ARG0 (t / that)))


# ::snt Are there chickens ? "
(c / chicken
   :polarity (a / amr-unknown))


# ::snt " No . "
(n / no)


# ::snt " Nothing is perfect , " sighed the fox .
(s / sigh-01
   :ARG0 (f / fox)
   :ARG1 (p / perfect-02
            :ARG1 (n / nothing)))


# ::snt But he came back to his idea .
(c2 / contrast-01
    :ARG2 (c / come-01
             :ARG1 (h / he)
             :ARG4 (i / idea
                      :poss h)
             :direction (b2 / back)))


# ::snt " My life is very monotonous , " the fox said .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (m / monotonous
            :domain (l / life)
            :degree (v / very)))


# ::snt " I hunt chickens ; men hunt me .
(a / and
   :op1 (h / hunt-01
           :ARG0 (i / i)
           :ARG1 (c / chicken))
   :op2 (h2 / hunt-01
            :ARG0 (m / man)
            :ARG1 i))


# ::snt All the chickens are just alike , and all the men are just alike .
(a / and
   :op1 (a2 / alike-05
            :ARG1 (c / chicken)
            :mod (j / just))
   :op2 (a3 / alike-05
            :ARG1 (m / man)
            :mod (j2 / just)))


# ::snt And , in consequence , I am a little bored .
(a / and
   :op2 (c / consequence-03
           :ARG2 (b / bore-02)))


# ::snt But if you tame me , it will be as if the sun came to shine on my life .
(c / contrast-01
   :ARG2 (s / shine-01
            :ARG1 (s2 / sun)
            :ARG2 (l / life)
            :condition (t / tame-01)))


# ::snt I shall know the sound of a step that will be different from all the others .
(k / know-04
   :ARG0 (i / i)
   :ARG1 (s / sound-02
            :ARG1 (s2 / step-01
                      :ARG1-of (d / differ-02
                                  :ARG2 (s3 / step-01
                                            :mod (o / other))))))


# ::snt Other steps send me hurrying back underneath the ground .
(s / send-03
   :ARG0 (s2 / step-01
             :mod (o / other))
   :ARG1 (i / i)
   :ARG4 (u / underneath
            :op1 (g / ground))
   :ARG5 (b / back)
   :manner (h / hurry-01
              :ARG1 i))


# ::snt Yours will call me , like music , out of my burrow .
(c / call-03
   :ARG0 (s / step-01
            :ARG1 (y / you))
   :ARG1 (o / out-06
            :ARG1 (i / i)
            :ARG2 (b / burrow
                     :poss i))
   :ARG2 i
   :ARG1-of (r / resemble-01
               :ARG2 (m / music)))


# ::snt And then look : you see the grain - fields down yonder ?
(a / and
   :op2 (l / look-01
           :ARG0 (y / you)
           :time (t / then))
   :op3 (s / see-01
           :ARG0 y
           :ARG1 (f / field)
           :polarity (a2 / amr-unknown)))


# ::snt I do not eat bread .
(e / eat-01
   :ARG0 (i / i)
   :ARG1 (b / bread))


# ::snt Wheat is of no use to me .
(u / use-01
   :ARG0 (i / i)
   :ARG1 (w / wheat))


# ::snt The wheat fields have nothing to say to me .
(s / say-01
   :ARG0 (f / field
            :mod (w / wheat))
   :ARG1 (n / nothing)
   :ARG2 (i / i))


# ::snt And that is sad .
(a / and
   :op2 (s / sad-02
           :ARG0 (t2 / that)))


# ::snt But you have hair that is the colour of gold .
(c2 / contrast-01
    :ARG2 (h / have-03
             :ARG0 (y / you)
             :ARG1 (h2 / hair)))


# ::snt Think how wonderful that will be when you have tamed me !
(t / think-01
   :ARG0 (y / you)
   :ARG1 (w / wonderful-03
            :ARG1 (t2 / tame-01
                      :ARG0 y)
            :degree (a / amr-unknown)))


# ::snt The grain , which is also golden , will bring me back the thought of you .
(b / bring-01
   :ARG0 (g / grain
            :mod (g2 / golden))
   :ARG1 (t / think-01
            :ARG1 (y / you))
   :ARG2 (i / i)
   :direction (b2 / back))


# ::snt And I shall love to listen to the wind in the wheat ... "
(a / and
   :op2 (l / love-02
           :ARG0 (i / i)
           :ARG1 (l2 / listen-01
                     :ARG0 i)))


# ::snt The fox gazed at the little prince , for a long time .
(g / gaze-01
   :ARG0 (f / fox)
   :ARG1 (p / prince
            :mod (l / little))
   :ARG1-of (l2 / long-03))


# ::snt " Please - - tame me ! " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (t / tame-01
            :ARG0 (y / you)
            :ARG1 h))


# ::snt " I want to , very much , " the little prince replied .
(r / reply-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG2 (w / want-01
            :ARG0 p
            :ARG1 (t / tame-01
                     :ARG0 p)
            :degree (m / much)))


# ::snt " But I have not much time .
(c / contrast-01
   :ARG2 (h / have-03
            :ARG0 (i / i)
            :ARG1 (t / time)))


# ::snt I have friends to discover , and a great many things to understand . "
# ::snt " One only understands the things that one tames , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (u / understand-01
            :ARG0 (o / one)
            :ARG1 (t / thing
                     :ARG1-of (t2 / tame-01
                                  :ARG0 o))
            :mod (o2 / only)))


# ::snt " Men have no more time to understand anything .
(h / have-03
   :ARG0 (m / man)
   :ARG1 (t / time
            :duration-of (u / understand-01
                            :ARG0 m
                            :ARG1 (a / anything))))


# ::snt They buy things all ready made at the shops .
(b / buy-01
   :ARG0 (t / they)
   :ARG1 (t2 / thing
             :ARG1-of (m / make-01
                         :time (a / already)))
   :location (s / shop))


# ::snt But there is no shop anywhere where one can buy friendship , and so men have no friends any more .
(c / contrast-01
   :ARG2 (p / possible-01
            :ARG1 (b / buy-01
                     :ARG0-of (c2 / cause-01
                                  :ARG1 (h / have-rel-role-91
                                           :ARG0 (p2 / person)
                                           :ARG1 (m / man)
                                           :ARG2 (f2 / friend)
                                           :mod (a / anymore))))))


# ::snt If you want a friend , tame me ... "
(t / tame-01
   :ARG0 (y / you)
   :ARG1 (i / i)
   :condition (w / want-01
                 :ARG0 y
                 :ARG1 (h / have-rel-role-91
                          :ARG1 y)))


# ::snt " What must I do , to tame you ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (o / obligate-01
            :ARG2 (d / do-02
                     :ARG0 p)))


# ::snt " You must be very patient , " replied the fox .
(r / reply-01
   :ARG0 (f / fox)
   :ARG2 (o / obligate-01
            :ARG2 (p / patient-01)))


# ::snt " First you will sit down at a little distance from me - - like that - - in the grass .
(s / sit-down-02
   :ARG1 (y / you)
   :time (f / first)
   :location (r / relative-position
                :op1 (i / i)
                :quant (d / distance))
   :direction (d2 / down
                  :location (g / grass))
   :example (t / that))


# ::snt I shall look at you out of the corner of my eye , and you will say nothing .
(a / and
   :op1 (l / look-01
           :ARG0 (i / i)
           :ARG1 (y / you)
           :direction (o / out-of))
   :op2 (s / say-01
           :ARG0 y
           :ARG1 (n / nothing)))


# ::snt Words are the source of misunderstandings .
(s / source-01
   :ARG1 (m / misunderstand-01)
   :ARG2 (w / word))


# ::snt But you will sit a little closer to me , every day ... "
(c2 / contrast-01
    :ARG2 (s / sit-01
             :ARG1 (y / you)
             :ARG1-of (h / have-degree-91
                         :ARG2 (c / close-10
                                  :ARG1 y
                                  :ARG2 (i / i)
                                  :frequency (r2 / rate-entity-91))
                         :ARG3 (m / more
                                  :quant (l / little)))))


# ::snt The next day the little prince came back .
(c / come-01
   :ARG1 (p / prince
            :mod (l / little))
   :direction (b / back)
   :time (d / day
            :mod (n / next)))


# ::snt " It would have been better to come back at the same hour , " said the fox .
# ::snt " If , for example , you come at four o'clock in the afternoon , then at three o'clock I shall begin to be happy .
(b / begin-01
   :ARG0 (i / i)
   :ARG1 (h / happy-01
            :ARG1 i)
   :condition (c / come-01
                 :ARG1 (y / you)
                 :time (d2 / date-entity)
                 :ARG0-of (e / exemplify-01))
   :time (d / date-entity))


# ::snt I shall feel happier and happier as the hour advances .
(c / correlate-91
   :ARG1 (m / more
            :ARG3-of (h / have-degree-91
                        :ARG1 (i / i)
                        :ARG2 (h4 / happy-01
                                  :ARG1 i)))
   :ARG2 (m2 / more
             :ARG3-of (h2 / have-quant-91
                          :ARG1 (a / advance-01
                                   :ARG1 (h3 / hour)))))


# ::snt At four o'clock , I shall already be worrying and jumping about .
(a / and
   :op1 (w / worry-01
           :ARG1 (i / i))
   :op2 (j / jump-03
           :ARG0 i
           :direction (a2 / about))
   :time (d / date-entity)
   :time (a3 / already))


# ::snt I shall show you how happy I am !
(s / show-01
   :ARG0 (i / i)
   :ARG1 (h / happy-01
            :ARG1 i
            :degree (s2 / so))
   :ARG2 (y / you))


# ::snt But if you come at just any time , I shall never know at what hour my heart is to be ready to greet you ...
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (i / i)
            :ARG1 (h3 / hour)
            :time (e / ever)
            :condition (c2 / come-01)))


# ::snt One must observe the proper rites ... "
(o / obligate-01
   :ARG1 (o3 / one)
   :ARG2 (o2 / observe-01
             :ARG0 o3
             :ARG1 (r / rite)))


# ::snt " What is a rite ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (r / rite
            :domain (a2 / amr-unknown)))


# ::snt " Those also are actions too often neglected , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (a / act-02
            :domain (t2 / that)
            :ARG1-of (n2 / neglect-01
                         :ARG1-of (h / have-degree-91
                                     :ARG2 (o / often)
                                     :ARG3 (t3 / too))
                         :frequency o)
            :mod (a3 / also)))


# ::snt " They are what make one day different from other days , one hour from other hours .
(t2 / thing
    :domain (t / they)
    :ARG0-of (m / make-02
                :ARG1 (a / and
                         :op1 (d / differ-02)
                         :op2 (d4 / differ-02))))


# ::snt There is a rite , for example , among my hunters .
(r / rite
   :ARG1-of (h / have-03
               :ARG0 (p / person
                        :ARG0-of (h2 / hunt-01
                                     :ARG1 (i / i))))
   :ARG0-of (e / exemplify-01))


# ::snt Every Thursday they dance with the village girls .
(d / dance-01
   :ARG0 (t / they)
   :ARG2 (g / girl
            :source (v / village))
   :frequency (r / rate-entity-91
                 :ARG4 (d2 / date-entity)))


# ::snt So Thursday is a wonderful day for me !
(c / cause-01
   :ARG1 (d2 / day
             :domain (d / date-entity)
             :ARG1-of (w / wonderful-03)
             :beneficiary (i / i)))


# ::snt I can take a walk as far as the vineyards .
(p / possible-01
   :ARG1 (w / walk-01
            :ARG0 (i / i)
            :extent (f / far
                       :ARG2-of (h / have-degree-91
                                   :ARG1 w
                                   :ARG3 (e / equal)
                                   :ARG4 (v / vineyard)))))


# ::snt But if the hunters danced at just any time , every day would be like every other day , and I should never have any vacation at all . "
# ::snt So the little prince tamed the fox .
(c / cause-01
   :ARG1 (t / tame-01
            :ARG0 (p / prince)
            :ARG1 (f / fox)))


# ::snt And when the hour of his departure drew near - - " Ah , " said the fox , " I shall cry . "
(a / and
   :op1 (s / say-01
           :ARG0 (f / fox)
           :ARG1 (a2 / and)
           :time (h2 / hour
                     :time-of (d / depart-01
                                 :ARG0 f)
                     :ARG1-of (n2 / near-01))))


# ::snt " It is your own fault , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (f / fault-01
            :ARG1 (y / you)
            :ARG2 (i / it)))


# ::snt " I never wished you any sort of harm ; but you wanted me to tame you ... "
(c / contrast-01
   :ARG1 (w / wish-01
            :ARG0 (i / i)
            :ARG1 (h / harm-01)
            :time (e / ever))
   :ARG2 (w2 / want-01
             :ARG1 (t / tame-01
                      :ARG0 i)))


# ::snt " Yes , that is so , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (s2 / so
             :domain (t / that)))


# ::snt " But now you are going to cry ! " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (c / contrast-01
            :ARG2 (c2 / cry-02)))


# ::snt " Yes , that is so , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (s2 / so
             :domain (t / that)))


# ::snt " Then it has done you no good at all ! "
(d / do-02
   :ARG0 (i / it)
   :ARG1 (g / good-04)
   :ARG2 (y / you)
   :mod (a / at-all))


# ::snt " It has done me good , " said the fox , " because of the color of the wheat fields . "
(s / say-01
   :ARG0 (f2 / fox)
   :ARG1 (d / do-02
            :ARG0 (i / it)
            :ARG1 (g / good-04
                     :ARG1 i
                     :ARG2 f2)
            :ARG2 f2
            :ARG1-of (c / cause-01
                        :ARG0 (c2 / color-01
                                  :ARG1 (f / field)))))


# ::snt And then he added : " Go and look again at the roses .
(a / and
   :op1 (a2 / add-01
            :ARG0 (h / he)
            :ARG1 (a3 / and)
            :time (t / then)))


# ::snt You will understand now that yours is unique in all the world .
(u / understand-01
   :ARG0 (y / you)
   :ARG1 (u2 / unique-01
             :ARG1 (r / rose
                      :poss y)
             :ARG3 (w / world))
   :time (n / now))


# ::snt Then come back to say goodbye to me , and I will make you a present of a secret . "
(a / and
   :op1 (c / come-01
           :ARG1 (y / you)
           :direction (b / back)
           :time (t / then)
           :purpose (s / say-01
                       :ARG0 y))
   :op2 (g2 / give-01
            :ARG1 (p / present)
            :ARG2 y
            :manner (r / reveal-01
                       :ARG2 y)))


# ::snt The little prince went away , to look again at the roses .
(g / go-02
   :ARG0 (p / prince
            :mod (l / little))
   :direction (a / away)
   :purpose (l2 / look-01
                :ARG0 p
                :ARG1 (r / rose)
                :mod (a2 / again)))


# ::snt " You are not at all like my rose , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (r / resemble-01
            :ARG1 (y / you)
            :ARG2 (r2 / rose)
            :degree (a / at-all)))


# ::snt " As yet you are nothing .
(n / nothing
   :domain (y / you)
   :time (a / as-yet))


# ::snt No one has tamed you , and you have tamed no one .
(a / and
   :op1 (t / tame-01
           :ARG0 (n / no-one)
           :ARG1 (y / you))
   :op2 (t2 / tame-01
            :ARG0 y
            :ARG1 n))


# ::snt You are like my fox when I first knew him .
(r / resemble-01
   :ARG1 (y / you)
   :ARG2 (f / fox
            :poss (i / i))
   :time (k / know-02
            :ARG0 i
            :ARG1 f
            :ord (o / ordinal-entity)))


# ::snt He was only a fox like a hundred thousand other foxes .
(f2 / fox
    :domain (h / he)
    :ARG1-of (r / resemble-01
                :ARG2 (f3 / fox
                          :mod (o / other)))
    :mod (o2 / only))


# ::snt But I have made him my friend , and now he is unique in all the world . "
(c / contrast-01
   :ARG2 (m / make-01
            :ARG0 (i / i)
            :ARG1 (h / have-rel-role-91
                     :ARG1 i)
            :ARG0-of (c2 / cause-01
                         :ARG1 (u / unique-01
                                  :ARG3 (w / world)
                                  :time (n / now)))))


# ::snt And the roses were very much embarassed .
(a / and
   :op1 (e / embarrass-01
           :ARG1 (r / rose)
           :degree (m / much)))


# ::snt " You are beautiful , but you are empty , " he went on .
(g / go-on-25
   :ARG0 (h / he)
   :ARG1 (c / contrast-01
            :ARG1 (b / beautiful-02)
            :ARG2 (e / empty-02)))


# ::snt " One could not die for you .
(p / possible-01
   :ARG1 (d / die-01
            :ARG1 (o / one)
            :beneficiary (y / you)))


# ::snt To be sure , an ordinary passerby would think that my rose looked just like you - - the rose that belongs to me .
(t / think-01
   :ARG0 (p2 / person
             :ARG0-of (p3 / pass-by-17)
             :mod (o / ordinary))
   :ARG1 (l / look-02
            :ARG0 (r / rose
                     :ARG0-of (b / belong-01))
            :ARG1 (y / you)
            :degree (j / just))
   :mod (t2 / to-be-sure))


# ::snt But in herself alone she is more important than all the hundreds of you other roses : because it is she that I have watered ; because it is she that I have put under the glass globe ; because it is she that I have sheltered behind the screen ; because it is for her that I have killed the caterpillars ( except the two or three that we saved to become butterflies ) ; because it is she that I have listened to , when she grumbled , or boasted , or ever sometimes when she said nothing .
# ::snt Because she is my rose .
(c / cause-01
   :ARG0 (r / rose
            :domain (s / she)
            :poss (i / i)))


# ::snt And he went back to meet the fox .
(a / and
   :op1 (g / go-02
           :ARG0 (h / he)
           :direction (b / back)
           :purpose (m / meet-03
                       :ARG0 h)))


# ::snt " Goodbye , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (g / goodbye))


# ::snt " Goodbye , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (g / goodbye))


# ::snt " And now here is my secret , a very simple secret : It is only with the heart that one can see rightly ; what is essential is invisible to the eye . "
# ::snt " What is essential is invisible to the eye , " the little prince repeated , so that he would be sure to remember .
(r / repeat-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (p2 / possible-01
             :ARG1 (s2 / see-01))
   :purpose (r2 / remember-01
                :ARG0 p
                :ARG1 p2
                :ARG1-of (s / sure-02)))


# ::snt " It is the time you have wasted for your rose that makes your rose so important . "
(t / time
   :ARG1-of (w / waste-01
               :ARG0 (y / you)
               :beneficiary (r / rose
                               :poss y))
   :ARG0-of (m / make-02
               :ARG1 (i / important-01
                        :ARG1 r
                        :degree (s / so))))


# ::snt " It is the time I have wasted for my rose - - " said the little prince , so that he would be sure to remember .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / time
            :ARG1-of (w / waste-01
                        :ARG0 p)
            :beneficiary (r / rose
                            :poss p))
   :purpose (r2 / remember-01
                :ARG0 p
                :ARG1-of (s2 / sure-02)))


# ::snt " Men have forgotten this truth , " said the fox .
(s / say-01
   :ARG0 (f / fox)
   :ARG1 (f2 / forget-01
             :ARG0 (m / man)
             :ARG1 (t / truth)))


# ::snt " But you must not forget it .
(c / contrast-01
   :ARG2 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (f / forget-01
                     :ARG0 y)))


# ::snt You become responsible , forever , for what you have tamed .
(b / become-01
   :ARG1 (y / you)
   :ARG2 (r / responsible-03
            :ARG0 y
            :ARG1 (t2 / thing
                      :ARG1-of (t / tame-01
                                  :ARG0 y))
            :extent (f / forever)))


# ::snt You are responsible for your rose ... "
(r / responsible-03
   :ARG0 (y / you)
   :ARG1 (r2 / rose
             :poss y))


# ::snt " I am responsible for my rose , " the little prince repeated , so that he would be sure to remember .
(r / repeat-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (r2 / responsible-03
             :ARG0 p
             :ARG1 (r3 / rose
                       :poss p))
   :purpose (r4 / remember-01
                :ARG0 p
                :ARG1-of (s / sure-02)))


# ::snt Chapter 22 .
(c / chapter)


# ::snt " Good morning , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt " Good morning , " said the railway switchman .
(s / say-01
   :ARG0 (s2 / switchman
             :mod (r / railway))
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt " What do you do here ? " the little prince asked .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (d / do-02
            :ARG0 (y / you)
            :ARG1 (a2 / amr-unknown)
            :location (h / here)))


# ::snt " I sort out travelers , in bundles of a thousand , " said the switchman .
(s / say-01
   :ARG0 (s2 / switchman)
   :ARG1 (s3 / sort-01
             :ARG0 s2
             :ARG1 (p / person
                      :ARG0-of (t / travel-01))
             :ARG2 (b / bundle-01
                      :ARG0 s2
                      :ARG1 p)))


# ::snt " I send off the trains that carry them ; now to the right , now to the left . "
(s / send-03
   :ARG0 (i / i)
   :ARG1 (t / train
            :ARG0-of (c / carry-01
                        :ARG1 (t2 / they)))
   :ARG5 (a / and
            :op1 (r / right-04)
            :op2 (l / left-20)))


# ::snt And a brilliantly lighted express train shook the switchman 's cabin as it rushed by with a roar like thunder .
(a / and
   :op2 (s / shake-01
           :ARG0 (t / train
                    :ARG1-of (l / light-04
                                :manner (b / brilliant-02)))
           :ARG1 (c / cabin)
           :time (r / rush-01
                    :ARG1 t
                    :ARG0-of (r2 / roar-01
                                 :ARG1-of (r3 / resemble-01
                                              :ARG2 (t2 / thunder))))))


# ::snt " They are in a great hurry , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (h / hurry-01
            :ARG1 (t / they)
            :degree (g / great)))


# ::snt " What are they looking for ? "
(l / look-01
   :ARG0 (t / they)
   :ARG1 (a / amr-unknown))


# ::snt " Not even the locomotive engineer knows that , " said the switchman .
(s / say-01
   :ARG0 (s2 / switchman)
   :ARG1 (k / know-01
            :ARG0 (p / person
                     :ARG0-of (e / engineer-01
                                 :ARG1 (l / locomotive)))
            :ARG1 (t / that)))


# ::snt And a second brilliantly lighted express thundered by , in the opposite direction .
(a / and
   :op2 (t / thunder-01
           :ARG0 (t2 / train
                     :ARG1-of (l / light-04
                                 :manner (b2 / brilliant-02)))
           :direction (b / by)
           :direction (o / opposite-01)))


# ::snt " Are they coming back already ? " demanded the little prince .
(d / demand-01
   :polarity (a2 / amr-unknown)
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (c / come-01
            :ARG1 (t / they)
            :direction (b / back)
            :time (a / already)))


# ::snt " These are not the same ones , " said the switchman .
(s / say-01
   :ARG0 (s2 / switchman)
   :ARG1 (o / one
            :ARG1-of (s3 / same-01)
            :domain (t / this)))


# ::snt " It is an exchange . "
(e / exchange-01
   :domain (i / it))


# ::snt " Were they not satisfied where they were ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (s / satisfy-01
            :ARG1 (t / they)
            :location-of t)
   :polarity (a2 / amr-unknown))


# ::snt And they heard the roaring thunder of a third brilliantly lighted express .
(a / and
   :op2 (h / hear-01
           :ARG0 (t / they)
           :ARG1 (t2 / thunder-01
                     :ARG1-of (r / roar-01))
           :ARG2 (t3 / train
                     :ARG1-of (l / light-04
                                 :manner (b / brilliant-02)))))


# ::snt " Are they pursuing the first travelers ? " demanded the little prince .
(d / demand-01
   :polarity (a / amr-unknown)
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (p2 / pursue-01
             :ARG0 (t / they)
             :ARG1 (p3 / person
                       :ARG0-of (t2 / travel-01
                                    :ord (o / ordinal-entity)))))


# ::snt " They are pursuing nothing at all , " said the switchman .
(s / say-01
   :ARG0 (s2 / switchman)
   :ARG1 (p / pursue-01
            :ARG0 (t / they)
            :ARG1 (n / nothing)))


# ::snt " They are asleep in there , or if they are not asleep they are yawning .
(o / or
   :op1 (s / sleep-01
           :ARG0 (t / they)
           :location (t2 / there))
   :op2 (y / yawn-01
           :ARG0 t
           :condition (s2 / sleep-01
                          :ARG0 t)))


# ::snt Only the children are flattening their noses against the windowpanes . "
(f / flatten-01
   :ARG0 (c / child
            :mod (o / only)
            :part n)
   :ARG1 (n / nose)
   :ARG1-of (c2 / cause-01
                :ARG0 (p / push-01
                         :ARG0 c
                         :ARG1 n
                         :ARG2 (w / windowpane))))


# ::snt " Only the children know what they are looking for , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (k / know-01
            :ARG0 (c / child)
            :ARG1 (t / thing
                     :ARG1-of (l2 / look-01
                                  :ARG0 c))))


# ::snt " They waste their time over a rag doll and it becomes very important to them ; and if anybody takes it away from them , they cry ... "
(a / and
   :op1 (c3 / cause-01
            :ARG0 (w / waste-01
                     :ARG1-of (c / cause-01))
            :ARG1 (b / become-01))
   :op2 (c2 / cry-02
            :condition (t3 / take-away-05)))


# ::snt " They are lucky , " the switchman said .
(s / say-01
   :ARG0 (s2 / switchman)
   :ARG1 (l / lucky
            :domain (t / they)))


# ::snt Chapter 23 .
(c / chapter)


# ::snt " Good morning , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / morning
            :ARG1-of (g / good-02)))


# ::snt " Good morning , " said the merchant .
(s / say-01
   :ARG0 (p / person
            :ARG0-of (m / merchandise-01))
   :ARG1 (m2 / morning
             :ARG1-of (g / good-02)))


# ::snt This was a merchant who sold pills that had been invented to quench thirst .
(s / sell-01
   :ARG0 (p / person
            :ARG0-of (m / merchandise-01)
            :domain (t2 / this))
   :ARG1 (p2 / pill
             :ARG1-of (i / invent-01)
             :purpose (q / quench-01)
             :ARG0-of q))


# ::snt You need only swallow one pill a week , and you would feel no need of anything to drink .
(c / cause-01
   :ARG0 (n / need-01
            :ARG0 (y / you)
            :ARG1 (s / swallow-01)
            :mod (o / only))
   :ARG1 (f / feel-01
            :ARG0 y
            :ARG1 (n2 / need-01
                      :ARG0 y)))


# ::snt " Why are you selling those ? " asked the little prince .
(a / ask-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (s / sell-01
            :ARG0 (y / you)
            :ARG1 (t / that)
            :ARG1-of (c / cause-01
                        :ARG0 (a2 / amr-unknown))))


# ::snt " Because they save a tremendous amount of time , " said the merchant .
# ::snt " Computations have been made by experts .
(m / make-01
   :ARG0 (p / person
            :ARG1-of (e / expert-01))
   :ARG1 (t / thing
            :ARG1-of (c / compute-01)))


# ::snt With these pills , you save fifty - three minutes in every week . "
(s / save-03
   :ARG0 (y / you)
   :ARG1 (r / rate-entity-91
            :ARG1 (t / temporal-quantity)
            :ARG2 (t3 / temporal-quantity))
   :instrument (p / pill
                  :mod (t2 / this)))


# ::snt " And what do I do with those fifty - three minutes ? "
(a / and
   :op1 (d / do-02
           :ARG0 (i / i)
           :ARG1 (a2 / amr-unknown)
           :ARG2 (t / temporal-quantity)))


# ::snt " Anything you like ... "
(d / do-02
   :ARG0 (y2 / you)
   :ARG1 (a2 / anything
             :ARG1-of (l / like-02
                         :ARG0 y2)))


# ::snt Chapter 24 .
(c / chapter)


# ::snt It was now the eighth day since I had had my accident in the desert , and I had listened to the story of the merchant as I was drinking the last drop of my water supply .
# ::snt " Ah , "
(a / ah)


# ::snt I said to the little prince , " these memories of yours are very charming ; but I have not yet succeeded in repairing my plane ; I have nothing more to drink ; and I , too , should be very happy if I could walk at my leisure toward a spring of fresh water ! "
# ::snt " My friend the fox - - " the little prince said to me .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (f / fox
            :ARG0-of (h / have-rel-role-91
                        :ARG1 (i / i)
                        :ARG2 (f2 / friend)))
   :ARG2 i)


# ::snt " My dear little man , this is no longer a matter that has anything to do with the fox ! "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (c / concern-02
            :ARG0 (m2 / matter)
            :ARG1 (f / fox)
            :time (n / no-longer))
   :ARG2 (m / man
            :mod (l / little)
            :poss i
            :mod (d / dear)))


# ::snt " Why not ? "
(c2 / concern-02
    :ARG1-of (c3 / cause-01
                 :ARG0 (a / amr-unknown)))


# ::snt " Because I am about to die of thirst ... "
(c / cause-01
   :ARG0 (d / die-01
            :ARG1 (i / i)
            :ARG1-of (c2 / cause-01
                         :ARG0 (t / thirst-01
                                  :ARG0 i))
            :time (a / about-to)))


# ::snt He did not follow my reasoning , and he answered me : " It is a good thing to have had a friend , even if one is about to die .
(a / and
   :op1 (f / follow-02
           :ARG0 (h / he)
           :ARG1 (r / reason-01))
   :op2 (a2 / answer-01
            :ARG0 h
            :ARG2 (g / good-02)))


# ::snt I , for instance , am very glad to have had a fox as a friend ... "
(g / glad-02
   :ARG0 (h / have-rel-role-91
            :ARG0 (f2 / fox)
            :ARG1 (i / i
                     :ARG0-of (e / exemplify-01))
            :ARG2 (f / friend))
   :ARG1 i
   :degree (v / very))


# ::snt " He has no way of guessing the danger , "
(p / possible-01
   :ARG1 (g / guess-01
            :ARG0 (h / he)
            :ARG1 (d / danger)))


# ::snt " He has never been either hungry or thirsty .
(a / and
   :op1 (h / hunger-01
           :ARG0 (h2 / he))
   :op2 (t / thirst-01
           :ARG0 h2)
   :time (e / ever))


# ::snt A little sunshine is all he needs ... "
(n / need-01
   :ARG0 (h / he)
   :ARG1 (s / sunshine
            :quant (l / little))
   :mod (a / all))


# ::snt But he looked at me steadily , and replied to my thought : " I am thirsty , too .
# ::snt Let us look for a well ... "
(l / look-01
   :ARG0 (w / we)
   :ARG1 (w2 / well))


# ::snt I made a gesture of weariness .
(g2 / gesture-01
    :ARG0 (i / i)
    :ARG1 (w / weary-01
             :ARG1 i))


# ::snt It is absurd to look for a well , at random , in the immensity of the desert .
(a / absurd
   :domain (l / look-01
              :ARG1 (w / well)
              :location (d / desert)
              :manner (r / random)))


# ::snt But nevertheless we started walking .
(h / have-concession-91
   :ARG1 (s / start-01
            :ARG0 (w / we)
            :ARG1 (w2 / walk-01)))


# ::snt When we had trudged along for several hours , in silence , the darkness fell , and the stars began to come out .
(a / and
   :op1 (f / fall-04
           :ARG1 (d / darkness))
   :op2 (b / begin-01
           :ARG0 (s / star)
           :ARG1 (c / come-out-09
                    :ARG1 s))
   :time (t / trudge-01
            :ARG0 (w / we)
            :duration (s2 / several)
            :manner (s3 / silent)))


# ::snt Thirst had made me a little feverish , and I looked at them as if I were in a dream .
(a / and
   :op1 (m / make-02
           :ARG0 (t / thirst-01)
           :ARG1 (f / feverish))
   :op2 (l2 / look-01
            :ARG1 (t2 / they)
            :ARG1-of (r / resemble-01
                        :ARG2 (d / dream-01))))


# ::snt The little prince 's last words came reeling back into my memory : " Then you are thirsty , too ? "
(c / come-01
   :ARG1 (w / word-01
            :ARG0 (p / prince)
            :ARG1 (t3 / truth-value
                      :polarity-of (t / thirst-01
                                      :ARG0 (y / you
                                               :mod (t2 / too))))
            :mod (l / last))
   :ARG4 (m / memory
            :poss (i / i))
   :manner (r / reel-03
              :ARG1 w
              :ARG2 m))


# ::snt I demanded .
(d / demand-01
   :ARG0 (i / i))


# ::snt But he did not reply to my question .
(c / contrast-01
   :ARG2 (r / reply-01
            :ARG0 (h / he)
            :ARG1 (q / question-01)))


# ::snt He merely said to me : " Water may also be good for the heart ... "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (p / possible-01
            :ARG1 (g / good-04))
   :ARG2 (i / i)
   :mod (m / mere))


# ::snt I did not understand this answer , but I said nothing .
(u2 / understand-01
    :ARG0 (i / i)
    :ARG1 (a / answer
             :mod (t / this))
    :concession-of (s / say-01
                      :ARG0 i
                      :ARG1 (n / nothing)))


# ::snt I knew very well that it was impossible to cross - examine him .
(k / know-01
   :ARG0 (i / i)
   :ARG1 (p / possible-01
            :ARG1 (c / crossexamine-01
                     :ARG0 i))
   :degree (w / well
              :degree (v / very)))


# ::snt He was tired .
(t / tire-01
   :ARG1 (h / he))


# ::snt He sat down .
(s / sit-down-02
   :ARG1 (h / he))


# ::snt I sat down beside him .
(s / sit-down-02
   :ARG1 (i / i)
   :location (b / beside
                :op1 (h / he)))


# ::snt And , after a little silence , he spoke again : " The stars are beautiful , because of a flower that can not be seen . "
(a / and
   :op2 (s / speak-01
           :ARG0 (h / he)
           :ARG1 (b / beautiful-02
                    :ARG1-of (c / cause-01
                                :ARG0 (f / flower
                                         :ARG1-of (s6 / see-01
                                                      :ARG1-of (p / possible-01)))))
           :time (a2 / after)
           :mod (a3 / again)))


# ::snt I replied , " Yes , that is so . "
(r / reply-01
   :ARG0 (i / i)
   :ARG2 (s / so
            :domain (t / that)))


# ::snt And , without saying anything more , I looked across the ridges of sand that were stretched out before us in the moonlight .
# ::snt " The desert is beautiful , " the little prince added .
(a / add-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (b / beautiful-02
            :ARG1 (d / desert)))


# ::snt And that was true .
(a / and
   :op2 (t / true-01
           :ARG1 (t2 / that)))


# ::snt I have always loved the desert .
(l / love-01
   :ARG0 (i / i)
   :ARG1 (d / desert)
   :time (a / always))


# ::snt One sits down on a desert sand dune , sees nothing , hears nothing .
(a / and
   :op1 (s / sit-down-02
           :ARG1 (o / one)
           :location (d / dune
                        :consist-of (s2 / sand)))
   :op2 (s3 / see-01
            :ARG0 o
            :ARG1 (n / nothing))
   :op3 (h / hear-01
           :ARG0 o
           :ARG1 (n2 / nothing)))


# ::snt Yet through the silence something throbs , and gleams ...
(a2 / and
    :op1 (t / throb-01
            :ARG1 (s / something))
    :op2 (g / gleam-01
            :ARG0 s)
    :concession (s2 / silent))


# ::snt " What makes the desert beautiful , " said the little prince , " is that somewhere it hides a well ... "
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (m / make-02
            :ARG0 (h / hide-01)
            :ARG1 (b / beautiful-02)))


# ::snt I was astonished by a sudden understanding of that mysterious radiation of the sands .
(a / astonish-01
   :ARG0 (u / understand-01
            :ARG0 (i / i)
            :ARG1 (r / radiate-01)
            :manner (s / sudden))
   :ARG1 i)


# ::snt When I was a little boy I lived in an old house , and legend told us that a treasure was buried there .
(a / and
   :op1 (l / live-01
           :ARG0 (i / i)
           :location (h / house)
           :time (b / boy
                    :domain i))
   :op2 (t / tell-01
           :ARG0 (l3 / legend)
           :ARG1 (b2 / bury-01
                     :location h)
           :ARG2 (w / we)))


# ::snt To be sure , no one had ever known how to find it ; perhaps no one had ever even looked for it .
(a / and
   :op1 (s / sure-02
           :ARG0 (n / no-one)
           :ARG1 (t / thing
                    :manner-of (f / find-01
                                  :ARG0 n))
           :time (e2 / ever)
           :mod (t2 / to-be-sure))
   :op2 (p2 / possible-01
            :ARG1 (l / look-01
                     :ARG0 n
                     :time e2)))


# ::snt But it cast an enchantment over that house .
(c / contrast-01
   :ARG2 (c2 / cast-01
             :ARG0 (i / it)
             :ARG1 (e / enchant-01)
             :ARG2 (h / house)))


# ::snt My home was hiding a secret in the depths of its heart ...
(h / hide-01
   :ARG0 (h2 / home
             :poss (i / i)
             :part h3)
   :ARG1 (s / secret)
   :location (d / deep-02
                :ARG1 (h3 / heart)))


# ::snt " Yes , "
(y / yes)


# ::snt I said to the little prince .
(s / say-01
   :ARG0 (i / i)
   :ARG2 (p / prince
            :mod (l / little)))


# ::snt " The house , the stars , the desert - - what gives them their beauty is something that is invisible ! "
(g2 / give-01
    :ARG0 (s3 / something
              :ARG1-of (s4 / see-01
                           :ARG1-of (p / possible-01)))
    :ARG1 (b / beautiful-02
             :ARG1 (a / and))
    :ARG2 a)


# ::snt " I am glad , " he said , " that you agree with my fox . "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (g / glad-02
            :ARG0 (a / agree-01)
            :ARG1 h))


# ::snt As the little prince dropped off to sleep , I took him in my arms and set out walking once more .
(a2 / and
    :op1 (t / take-01
            :ARG0 (i / i)
            :ARG1 (p / prince))
    :op2 (s / set-out-07
            :ARG0 i
            :manner (w / walk-01)
            :mod (a3 / again))
    :time (d / drop-off-03
             :ARG0 p
             :ARG2 (s2 / sleep-01
                       :ARG0 p)))


# ::snt I felt deeply moved , and stirred .
(f / feel-01
   :ARG0 (i / i)
   :ARG1 (a / and
            :op1 (m / move-05
                    :ARG1 i
                    :ARG1-of (d / deep-02))
            :op2 (s / stir-02
                    :ARG1 i)))


# ::snt It seemed to me that I was carrying a very fragile treasure .
(s / seem-01
   :ARG1 (c / carry-01
            :ARG0 (i / i)
            :ARG1 (t / treasure))
   :ARG2 i)


# ::snt It seemed to me , even , that there was nothing more fragile on all Earth .
(s / seem-01
   :ARG1 (t / thing
            :location (p / planet)
            :ARG1-of (h / have-degree-91
                        :ARG2 (f / fragile)
                        :ARG3 (m / more)))
   :ARG2 (i / i)
   :mod (e / even))


# ::snt What is most important is invisible ... "
(s / see-01
   :ARG1 (t / thing
            :ARG1-of (h / have-degree-91
                        :ARG2 (i2 / important-01
                                  :ARG1 t)
                        :ARG3 (m / most)))
   :ARG1-of (p / possible-01))


# ::snt And I felt him to be more fragile still .
(a / and
   :op2 (f / feel-02
           :ARG0 (i / i)
           :ARG1 (h2 / have-degree-91)))


# ::snt I felt the need of protecting him , as if he himself were a flame that might be extinguished by a little puff of wind ...
# ::snt And , as I walked on so , I found the well , at daybreak .
(a / and
   :op2 (f / find-01
           :ARG0 (i / i)
           :ARG1 (w / well)
           :time (d / daybreak)
           :time (w2 / walk-01
                     :ARG0 i)))


# ::snt Chapter 25 .
(c / chapter)


# ::snt " Men , " said the little prince , " set out on their way in express trains , but they do not know what they are looking for .
# ::snt Then they rush about , and get excited , and turn round and round ... "
(a / and
   :op1 (r / rush-01
           :ARG1 (t / they)
           :ARG2 (a2 / about))
   :op2 (e / excite-01
           :ARG1 t)
   :op3 (t2 / turn-01
            :ARG1 t
            :direction (a3 / and))
   :time (t3 / then))


# ::snt And he added : " It is not worth the trouble ... "
(a / and
   :op2 (a2 / add-01
            :ARG0 (h / he)
            :ARG1 (w / worth-02)))


# ::snt The well that we had come to was not like the wells of the Sahara .
(w / well
   :ARG4-of (c / come-01
               :ARG1 (w2 / we))
   :ARG1-of (r / resemble-01
               :ARG2 (w3 / well
                         :location (d / desert))))


# ::snt The wells of the Sahara are mere holes dug in the sand .
(h / hole
   :ARG1-of (d / dig-01
               :ARG2 (s / sand))
   :mod (m / mere)
   :domain (w / well))


# ::snt This one was like a well in a village .
(r / resemble-01
   :ARG1 (w / well
            :mod (t / this))
   :ARG2 (w2 / well
             :location (v / village)))


# ::snt But there was no village here , and I thought I must be dreaming ...
(c3 / contrast-01
    :ARG2 (a / and
             :op1 (v / village)
             :op2 (t / think-01)))


# ::snt " It is strange , "
(s / strange
   :domain (i / it))


# ::snt I said to the little prince .
(s / say-01
   :ARG0 (i / i)
   :ARG2 (p / prince
            :mod (l / little)))


# ::snt " Everything is ready for use : the pulley , the bucket , the rope ... "
(r / ready-02
   :ARG1 (e / everything
            :example (a / and))
   :ARG2 (u / use-01
            :ARG1 e))


# ::snt He laughed , touched the rope , and set the pulley to working .
(a / and
   :op1 (l / laugh-01
           :ARG0 (h / he))
   :op2 (t / touch-01
           :ARG0 h
           :ARG1 (r / rope))
   :op3 (s / set-08
           :ARG0 h
           :ARG1 (p / pulley)
           :ARG2 (w / work-09
                    :ARG1 p)))


# ::snt And the pulley moaned , like an old weathervane which the wind has long since forgotten .
(a / and
   :op2 (m / moan-01
           :ARG0 (p / pulley)
           :ARG1-of (r / resemble-01
                       :ARG2 (m2 / moan-01
                                 :ARG0 (w / weathervane
                                          :ARG1-of (f / forget-01
                                                      :ARG0 (w2 / wind)
                                                      :time (s / since
                                                               :op1 (l / long))))))))


# ::snt " Do you hear ? " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / truth-value
            :polarity-of (h / hear-01
                            :ARG0 (y / you))))


# ::snt " We have wakened the well , and it is singing ... "
(a / and
   :op1 (w / wake-01
           :ARG0 (w2 / we)
           :ARG1 (w3 / well))
   :op2 (s / sing-01
           :ARG0 w3))


# ::snt " Leave it to me , "
(l / leave-02
   :ARG0 (y / you)
   :ARG1 (i2 / it)
   :ARG2 (i / i))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " It is too heavy for you . "
(h / have-degree-91
   :ARG1 (i2 / it)
   :ARG2 (h2 / heavy)
   :ARG3 (t / too)
   :ARG6 (c / carry-01
            :ARG0 (y / you)
            :ARG1 i2))


# ::snt I hoisted the bucket slowly to the edge of the well and set it there - - happy , tired as I was , over my achievement .
(a / and
   :op1 (h / hoist-01
           :ARG0 (i / i)
           :ARG1 (b / bucket)
           :ARG1-of (s / slow-05)
           :destination (e / edge
                           :part-of (w / well)))
   :op2 (s2 / set-01
            :ARG0 i
            :ARG1 b
            :ARG2 e)
   :ARG0-of (c / cause-01
               :ARG1 (h2 / happy-01
                         :ARG0 (t3 / thing
                                   :ARG1-of (a2 / achieve-01
                                                :ARG0 i))
                         :ARG1 i
                         :concession (t2 / tire-01
                                         :ARG1 i))))


# ::snt The song of the pulley was still in my ears , and I could see the sunlight shimmer in the still trembling water .
# ::snt " I am thirsty for this water , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / thirst-01
            :ARG0 (i / i)
            :ARG1 (w / water)))


# ::snt " Give me some of it to drink ... "
(g / give-01
   :ARG0 (y / you)
   :ARG1 (t / thing
            :ARG1-of (i3 / include-91
                         :ARG2 (i / it))
            :quant (s / some))
   :ARG2 (i2 / i)
   :purpose (d / drink-01
               :ARG0 i2
               :ARG1 t))


# ::snt And I understood what he had been looking for .
(a / and
   :op2 (u / understand-01
           :ARG0 (i / i)
           :ARG1 (t / thing
                    :ARG1-of (l / look-01
                                :ARG0 (h / he)))))


# ::snt I raised the bucket to his lips .
(r / raise-01
   :ARG0 (i / i)
   :ARG1 (b / bucket)
   :ARG4 (l / lip
            :part-of (h / he)))


# ::snt He drank , his eyes closed .
(a / and
   :op1 (d / drink-01
           :ARG0 (h / he))
   :op2 (c / close-01
           :ARG0 h))


# ::snt It was as sweet as some special festival treat .
(h / have-degree-91
   :ARG1 (i2 / it)
   :ARG2 (s / sweet-04)
   :ARG3 (e / equal)
   :ARG4 (f2 / food-dish
             :mod (f / festival)
             :mod (s2 / some)
             :ARG1-of (s3 / special-02)
             :ARG1-of (t / treat-02)))


# ::snt This water was indeed a different thing from ordinary nourishment .
(r2 / resemble-01
    :ARG1 (w / water
             :mod (t / this))
    :ARG2 (t2 / thing
              :ARG2-of (n / nourish-01)
              :mod (o / ordinary))
    :mod (i / indeed))


# ::snt Its sweetness was born of the walk under the stars , the song of the pulley , the effort of my arms .
# ::snt It was good for the heart , like a present .
(g / good-04
   :ARG1 (i / it
            :ARG1-of (r / resemble-01
                        :ARG2 (p / present)))
   :ARG2 (h / heart))


# ::snt When I was a little boy , the lights of the Christmas tree , the music of the Midnight Mass , the tenderness of smiling faces , used to make up , so , the radiance of the gifts I received .
# ::snt " The men where you live , " said the little prince , " raise five thousand roses in the same garden - - and they do not find in it what they are looking for . "
# ::snt " They do not find it , "
(f / find-01
   :ARG0 (t / they)
   :ARG1 (i / it))


# ::snt I replied .
(r / reply-01
   :ARG0 (i / i))


# ::snt " And yet what they are looking for could be found in one single rose , or in a little water . "
# ::snt " Yes , that is true , "
(t / true-01
   :ARG1 (t2 / that))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt And the little prince added : " But the eyes are blind .
(a / and
   :op2 (a2 / add-01
            :ARG0 (p / prince)
            :ARG1 (c / contrast-01)))


# ::snt One must look with the heart ... "
(r / recommend-01
   :ARG1 (l / look-01
            :ARG0 (o / one)
            :instrument (h / heart)))


# ::snt I had drunk the water .
(d / drink-01
   :ARG0 (i / i)
   :ARG1 (w / water))


# ::snt I breathed easily .
(b / breathe-01
   :ARG0 (i / i)
   :ARG1-of (e / easy-05))


# ::snt At sunrise the sand is the color of honey .
(r2 / resemble-01
    :ARG1 (c / color
             :poss (s / sand))
    :ARG2 (c2 / color
              :poss (h / honey))
    :time (r / rise-01
             :ARG1 (s2 / sun)))


# ::snt And that honey color was making me happy , too .
(a / and
   :op2 (m / make-02
           :ARG0 (c / color)
           :ARG1 (h2 / happy-01)
           :mod (t / too)))


# ::snt What brought me , then , this sense of grief ?
(b2 / bring-01
    :ARG0 (a / amr-unknown)
    :ARG1 (s / sense-01
             :ARG0 (i / i)
             :ARG1 (g / grieve-01
                      :ARG1 i)
             :mod (t / this))
    :ARG2 i
    :time (t2 / then))


# ::snt " You must keep your promise , " said the little prince , softly , as he sat down beside me once more .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (o / obligate-01
            :ARG1 (y / you
                     :ARG0-of (p2 / promise-01))
            :ARG2 (h / honor-02
                     :ARG0 y))
   :manner (s2 / soft)
   :time (s3 / sit-down-02
             :ARG1 p
             :location (b / beside)
             :mod (a / again)))


# ::snt " What promise ? "
(t / thing
   :ARG1-of (p2 / promise-01
                :ARG0 (i / i))
   :domain (a / amr-unknown))


# ::snt " You know - - a muzzle for my sheep ...
(t / thing
   :ARG2-of (m2 / muzzle-01
                :ARG1 (s / sheep
                         :poss (i / i))))


# ::snt I am responsible for this flower ... "
(r / responsible-03
   :ARG0 (i / i)
   :ARG1 (f / flower
            :mod (t / this)))


# ::snt I took my rough drafts of drawings out of my pocket .
(t / take-01
   :ARG0 (i / i)
   :ARG1 (p2 / picture
             :ARG1-of (d3 / draft-01)
             :ARG1-of (r / rough-04)
             :ARG1-of (d4 / draw-01))
   :ARG2 (p / pocket
            :poss i))


# ::snt The little prince looked them over , and laughed as he said : " Your baobabs - - they look a little like cabbages . "
(a / and
   :op1 (l / look-01
           :ARG0 (p / prince)
           :ARG1 (t / they))
   :op2 (l3 / laugh-01
            :ARG0 p
            :time (s / say-01
                     :ARG0 p)))


# ::snt " Oh ! "
(o / oh)


# ::snt I had been so proud of my baobabs !
(p / pride-01
   :ARG0 (i / i)
   :ARG1 (b / baobab
            :poss i)
   :degree (s / so))


# ::snt " Your fox - - his ears look a little like horns ; and they are too long . "
(a2 / and
    :op1 (l4 / look-02
             :ARG0 (e / ear
                      :part-of (f / fox
                                  :poss (y / you)))
             :ARG1 (h / horn)
             :degree (l / little))
    :op2 (h2 / have-degree-91
             :ARG1 e
             :ARG2 (l2 / long-03
                       :ARG1 e)
             :ARG3 (t2 / too)))


# ::snt And he laughed again .
(a / and
   :op2 (l / laugh-01
           :ARG0 (h / he)
           :mod (a2 / again)))


# ::snt " You are not fair , little prince , "
(f / fair-01
   :ARG0 (p / prince
            :mod (l / little)))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " I do n't know how to draw anything except boa constrictors from the outside and boa constrictors from the inside . "
# ::snt " Oh , that will be all right , " he said , " children understand . "
(s / say-01
   :ARG0 (h / he)
   :ARG1 (a / all-right
            :domain (t / that)
            :ARG1-of (c / cause-01
                        :ARG0 (u / understand-01
                                 :ARG0 (c2 / child)))))


# ::snt So then I made a pencil sketch of a muzzle .
(s2 / sketch-01
    :ARG0 (i / i)
    :ARG1 (m / muzzle)
    :instrument (p / pencil)
    :time (t / then))


# ::snt And as I gave it to him my heart was torn .
(a / and
   :op2 (t / tear-01
           :ARG1 (h / heart)
           :time (g / give-01)))


# ::snt " You have plans that I do not know about , "
(p2 / plan-01
    :ARG0 (y / you)
    :ARG1 (t / thing
             :ARG1-of (k / know-01
                         :ARG0 (i / i))))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt But he did not answer me .
(h2 / have-concession-91
    :ARG1 (a / answer-01
             :ARG0 (h / he)
             :ARG1 (i / i)))


# ::snt He said to me , instead : " You know - - my descent to the earth ...
(s / say-01
   :ARG0 (h / he)
   :ARG1 (d / descend-01
            :ARG0 h
            :ARG1 (e / earth))
   :ARG2 (i / i)
   :ARG1-of (i2 / instead-of-91))


# ::snt Tomorrow will be its anniversary . "
(a / anniversary
   :time (t / tomorrow)
   :poss (i / it))


# ::snt Then , after a silence , he went on : " I came down very near here . "
(g / go-23
   :ARG0 (h / he)
   :ARG1 (c / come-01
            :ARG1 h
            :ARG4 (n / near-02
                     :ARG1 h)
            :direction (d / down))
   :time (t / then)
   :time (a / after
            :op1 (s / silent)))


# ::snt And he flushed .
(a / and
   :op2 (f / flush-03
           :ARG1 (h / he)))


# ::snt And once again , without understanding why , I had a queer sense of sorrow .
(a2 / and
    :op2 (s / sense-01
            :ARG0 (i / i)
            :ARG1 (s2 / sorrow-01
                      :ARG0 i)
            :mod (q / queer)
            :mod (a / again)
            :ARG1-of (c2 / cause-01
                         :ARG0 (a3 / amr-unknown
                                   :ARG1-of (u2 / understand-01
                                                :ARG0 i)))))


# ::snt One question , however , occurred to me : " Then it was not by chance that on the morning when I first met you - - a week ago - - you were strolling along like that , all alone , a thousand miles from any inhabited region ?
(c / contrast-01
   :ARG2 (q / question-01
            :ARG0 (i / i)
            :ARG1 (t3 / truth-value
                      :polarity-of (s / stroll-01
                                      :ARG0 (y / you)
                                      :manner (a3 / alone
                                                  :degree (a4 / all)
                                                  :ARG1-of (r / resemble-01
                                                              :ARG2 (t2 / that)))
                                      :direction (a6 / along)
                                      :location (r3 / relative-position
                                                    :op1 (r2 / region
                                                             :ARG1-of (i3 / inhabit-01))
                                                    :quant (d2 / distance-quantity))
                                      :time (m / meet-03
                                               :ARG0 i
                                               :ARG1 y
                                               :ord (o2 / ordinal-entity)
                                               :time (b / before)
                                               :time (d / date-entity))
                                      :ARG1-of (c2 / cause-01
                                                   :ARG0 (c3 / chance-02))))))


# ::snt You were on the your back to the place where you landed ? "
(g / go-02
   :ARG1 (y / you)
   :ARG4 (p2 / place
             :location-of (l / land-01
                             :ARG0 y))
   :polarity (a / amr-unknown)
   :direction (b / back))


# ::snt The little prince flushed again .
(f / flush-03
   :ARG1 (p / prince
            :mod (l / little))
   :mod (a / again))


# ::snt And I added , with some hesitancy : " Perhaps it was because of the anniversary ? "
(a4 / and
    :op2 (a / add-01
            :ARG0 (i / i)
            :ARG1 (t / truth-value
                     :polarity-of (p2 / possible-01
                                      :ARG1 (c / cause-01
                                               :ARG0 (a3 / anniversary)
                                               :ARG1 (i2 / it))))
            :manner (h / hesitate-01
                       :ARG0 i)))


# ::snt The little prince flushed once more .
(f / flush-03
   :ARG1 (p / prince
            :mod (l / little))
   :mod (a / again
           :mod (o / once)))


# ::snt He never answered questions - - but when one flushes does that not mean " Yes " ?
(c / contrast-01
   :ARG1 (a / answer-01
            :ARG0 (h / he)
            :ARG1 (q / question-01
                     :ARG2 h)
            :time (e / ever))
   :ARG2 (m / mean-01
            :ARG1 (f / flush-03)
            :ARG2 (y / yes)
            :ARG1-of (r / request-confirmation-91)))


# ::snt " Ah , "
(a / ah)


# ::snt I said to him , " I am a little frightened - - "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (f / frighten-01
            :ARG1 i
            :degree (l / little))
   :ARG2 (h / he))


# ::snt But he interrupted me .
(c / contrast-01
   :ARG2 (i / interrupt-01
            :ARG0 (h / he)
            :ARG1 (i2 / i)))


# ::snt " Now you must work .
(o / obligate-01
   :ARG1 (y / you)
   :ARG2 (w / work-01
            :ARG0 y)
   :time (n / now))


# ::snt You must return to your engine .
(o2 / obligate-01
    :ARG1 (y / you)
    :ARG2 (r / return-01
             :ARG1 y
             :ARG4 (e / engine
                      :poss y)))


# ::snt I will be waiting for you here .
(w / wait-01
   :ARG1 (i / i)
   :ARG2 (y / you)
   :location (h / here))


# ::snt Come back tomorrow evening ... "
(c / come-01
   :ARG1 (y / you)
   :direction (b / back)
   :time (d / date-entity
            :dayperiod (e2 / evening)
            :mod (t / tomorrow)))


# ::snt But I was not reassured .
(h / have-concession-91
   :ARG1 (r / reassure-01
            :ARG1 (i / i)))


# ::snt I remembered the fox .
(r / remember-01
   :ARG0 (i / i)
   :ARG1 (f / fox))


# ::snt One runs the risk of weeping a little , if one lets himself be tamed ...
(r2 / risk-01
    :ARG0 (o / one)
    :ARG2 (w / weep-01
             :ARG0 o
             :degree (l / little))
    :condition (l2 / let-01
                   :ARG0 o
                   :ARG1 (t / tame-01
                            :ARG1 o)))


# ::snt Chapter 26 .
(c / chapter)


# ::snt Beside the well there was the ruin of an old stone wall .
(w / wall
   :mod (o / old)
   :consist-of (s / stone)
   :ARG1-of (r / ruin-01)
   :location (b / beside
                :op1 (w2 / well)))


# ::snt When I came back from my work , the next evening , I saw from some distance away my little price sitting on top of a wall , with his feet dangling .
(s / see-01
   :ARG0 (i / i
            :location (r2 / relative-position))
   :ARG1 (s2 / sit-01
             :ARG1 (p2 / prince
                       :poss i
                       :ARG0-of (d / dangle-01))
             :ARG2 (t / top))
   :time (r / return-01
            :ARG1 i
            :ARG3 (w2 / work-01
                      :ARG0 i)
            :time (d3 / date-entity)))


# ::snt And I heard him say : " Then you do n't remember .
(a / and
   :op2 (h / hear-01
           :ARG0 (i / i)
           :ARG1 (s / say-01)))


# ::snt This is not the exact spot . "
(s2 / spot
    :domain (t / this)
    :mod (e2 / exact))


# ::snt Another voice must have answered him , for he replied to it : " Yes , yes !
(o / obligate-01
   :ARG0 (v / voice
            :mod (a / another))
   :ARG1 (h2 / he)
   :ARG2 (a2 / answer-01)
   :ARG0-of (c / cause-01
               :ARG1 (r / reply-01
                        :ARG0 h2
                        :ARG2 (y / yes))))


# ::snt It is the right day , but this is not the place . "
(c / contrast-01
   :ARG1 (d / day
            :ARG2-of (r / right-06))
   :ARG2 (p / place
            :domain (t / this)))


# ::snt I continued my walk toward the wall .
(c / continue-01
   :ARG0 (i / i)
   :ARG1 (w / walk-01
            :ARG0 i
            :direction (t / toward)))


# ::snt At no time did I see or hear anyone .
(o / or
   :op1 (s / see-01
           :ARG0 (i / i)
           :ARG1 (a / anyone))
   :op2 (h / hear-01
           :ARG0 i
           :ARG1 a)
   :time (e / ever))


# ::snt The little prince , however , replied once again : " -- Exactly .
(c / contrast-01
   :ARG2 (r / reply-01
            :ARG0 (p / prince)
            :ARG2 (e / exact)
            :mod (a / again)))


# ::snt You will see where my track begins , in the sand .
(s / see-01
   :ARG0 (y2 / you)
   :ARG1 (b2 / begin-01
             :ARG1 (t2 / track)
             :location (s3 / sand)))


# ::snt You have nothing to do but wait for me there .
(h2 / have-03
    :ARG0 (y / you)
    :ARG1 (n / nothing
             :ARG1-of (d / do-02
                         :ARG0 y)
             :ARG1-of (c / contrast-01
                         :ARG2 (w2 / wait-01
                                   :ARG1 y
                                   :ARG2 (i / i)
                                   :location (t2 / there)))))


# ::snt I shall be there tonight . "
(t / there
   :location-of (i / i)
   :time (d / date-entity))


# ::snt I was only twenty metres from the wall , and I still saw nothing .
(a / and
   :op1 (b / be-located-at-91
           :ARG1 (i / i)
           :ARG2 (r / relative-position))
   :op2 (s / see-01
           :ARG0 i
           :ARG1 (n / nothing)
           :mod (s2 / still)))


# ::snt After a silence the little prince spoke again : " You have good poison ?
(s / speak-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (t / truth-value
            :polarity-of (h / have-03
                            :ARG0 (i / i)
                            :ARG1 (t2 / thing
                                      :ARG0-of (p2 / poison-01
                                                   :ARG1-of (g / good-02)))))
   :mod (a / again)
   :time (a2 / after
             :op1 (s2 / silent)))


# ::snt You are sure that it will not make me suffer too long ? "
(s2 / sure-02
    :ARG0 (y / you)
    :ARG1 (h / have-degree-91
             :ARG1 (s / suffer-01)
             :ARG2 (l / long-03
                      :ARG1 s)
             :ARG3 (t / too))
    :polarity (a / amr-unknown))


# ::snt I stopped in my tracks , my heart torn asunder ; but still I did not understand .
(c / contrast-01
   :ARG1 (a / and
            :op1 (s / stop-01)
            :op2 (t / tear-01))
   :ARG2 (u / understand-01
            :mod (s2 / still)))


# ::snt " Now go away , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little))
   :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG1 (a / away)
            :time (n / now)))


# ::snt " I want to get down from the wall . "
(w / want-01
   :ARG0 (i / i)
   :ARG1 (g / get-05
            :ARG0 i
            :ARG2 (r / relative-position)))


# ::snt I dropped my eyes , then , to the foot of the wall - - and I leaped into the air .
(a / and
   :op1 (d / drop-01
           :ARG0 (i / i)
           :ARG4 (f / foot
                    :part-of (w / wall))
           :time (t / then))
   :op2 (l / leap-03
           :ARG0 i
           :destination (a2 / air)))


# ::snt There before me , facing the little prince , was one of those yellow snakes that take just thirty seconds to bring your life to an end .
(s3 / snake
    :ARG1-of (y / yellow-02)
    :ARG2-of (t / take-10
                :ARG0 (e / end-01
                         :ARG1 (l2 / life))
                :ARG1 (t2 / temporal-quantity
                          :unit (s2 / second)
                          :mod (j / just)))
    :location (b / before)
    :ARG0-of (f / face-01
                :ARG1 (p / prince
                         :mod (l / little))))


# ::snt Even as I was digging into my pocked to get out my revolver I made a running step back .
(s / step-01
   :ARG1 (i / i)
   :ARG2 (b / back)
   :manner (r / run-02)
   :concession (e / even-as
                  :op1 (d / dig-01
                          :ARG0 i)))


# ::snt But , at the noise I made , the snake let himself flow easily across the sand like the dying spray of a fountain , and , in no apparent hurry , disappeared , with a light metallic sound , among the stones .
# ::snt I reached the wall just in time to catch my little man in my arms ; his face was white as snow .
(m / multi-sentence
   :snt1 (r / reach-01
            :ARG0 (i / i)
            :ARG1 (w2 / wall)
            :time (i2 / in-time))
   :snt2 (h / have-degree-91
            :ARG2 (w / white-03)
            :ARG3 (e / equal)
            :ARG4 (s / snow)))


# ::snt " What does this mean ? "
(m / mean-01
   :ARG1 (t / this)
   :ARG2 (a / amr-unknown))


# ::snt I demanded .
(d / demand-01
   :ARG0 (i / i))


# ::snt " Why are you talking with snakes ? "
(t / talk-01
   :ARG0 (y / you)
   :ARG2 (s / snake)
   :purpose (a / amr-unknown))


# ::snt I had loosened the golden muffler that he always wore .
(l / loosen-01
   :ARG0 (i / i)
   :ARG1 (m / muffler
            :consist-of (g / gold)
            :ARG1-of (w / wear-01
                        :ARG0 (h / he)
                        :time (a / always))))


# ::snt I had moistened his temples , and had given him some water to drink .
(a / and
   :op1 (m / moisten-01
           :ARG0 (i / i)
           :ARG1 (t / temple))
   :op2 (g / give-01
           :ARG0 i
           :ARG1 (w / water)))


# ::snt And now I did not dare ask him any more questions .
(a / and
   :op2 (d / dare-01
           :ARG1 (i / i)
           :ARG2 (q2 / question-01
                     :ARG0 i))
   :time (n / now))


# ::snt He looked at me very gravely , and put his arms around my neck .
(a / and
   :op1 (l / look-01
           :ARG0 (h / he)
           :ARG1 (i / i)
           :manner (g / grave))
   :op2 (p / put-01
           :ARG0 h
           :ARG2 (a3 / around)))


# ::snt I felt his heart beating like the heart of a dying bird , shot with someone 's rifle ...
(f / feel-01
   :ARG0 (i / i)
   :ARG1 (h4 / heart
             :part-of (h2 / he)
             :ARG1-of (b / beat-01
                         :ARG1-of (r / resemble-01
                                     :ARG2 (h3 / heart
                                               :part-of (b2 / bird
                                                            :ARG1-of (d / die-01)
                                                            :ARG1-of (s / shoot-02
                                                                        :ARG2 (r2 / rifle
                                                                                  :poss (s2 / someone)))))))))


# ::snt " I am glad that you have found what was the matter with your engine , " he said .
(s / say-01
   :ARG0 (h / he)
   :ARG1 (g / glad-02
            :ARG0 (f / find-01)
            :ARG1 (i / i)))


# ::snt " Now you can go back home - - "
(p / possible-01
   :ARG1 (g / go-02
            :ARG0 (y / you)
            :ARG4 (h / home)
            :direction (b / back))
   :time (n / now))


# ::snt " How do you know about that ? "
(k / know-01
   :ARG0 (y / you)
   :ARG1 (t / that)
   :manner (a / amr-unknown))


# ::snt I was just coming to tell him that my work had been successful , beyond anything that I had dared to hope .
(c / come-01
   :ARG1 (i / i
            :ARG0-of (h2 / hope-01
                         :ARG2-of (d / dare-01
                                     :ARG1 i)))
   :purpose (t / tell-01
               :ARG0 i
               :ARG1 (s2 / succeed-01)
               :ARG2 (h / he))
   :mod (j / just))


# ::snt He made no answer to my question , but he added : " I , too , am going back home today ... "
(c / contrast-01
   :ARG1 (m / make-01
            :ARG0 (h / he)
            :ARG1 (a / answer-01
                     :ARG0 h))
   :ARG2 (a2 / add-01
             :ARG0 h
             :ARG1 (r / return-01
                      :ARG1 h)))


# ::snt Then , sadly - - " It is much farther ... it is much more difficult ... "
(s / say-01
   :ARG1 (a / and
            :op1 (h / have-degree-91)
            :op2 (h2 / have-degree-91))
   :time (t / then)
   :manner (s2 / sad-02))


# ::snt I realised clearly that something extraordinary was happening .
(r / realize-01
   :ARG0 (i / i)
   :ARG1 (e2 / event
             :mod (e / extraordinary))
   :ARG1-of (c / clear-06))


# ::snt I was holding him close in my arms as if he were a little child ; and yet it seemed to me that he was rushing headlong toward an abyss from which I could do nothing to restrain him ...
(a / and
   :op1 (h / hold-01
           :ARG0 (i / i
                    :ARG0-of (r3 / restrain-01
                                 :ARG1 h2))
           :ARG1 (h2 / he)
           :ARG1-of (c / close-10)
           :ARG1-of (r / resemble-01
                       :ARG2 (c2 / child
                                 :mod (l / little)
                                 :domain h2)))
   :op2 (s / seem-01
           :ARG1 (r2 / rush-01
                     :ARG1 h2)
           :ARG2 i
           :mod (y / yet)))


# ::snt His look was very serious , like some one lost far away .
(l / look-01
   :ARG0 (h / he)
   :ARG2-of (s / serious-01
               :degree (v / very))
   :ARG1-of (r / resemble-01
               :ARG2 (s2 / someone
                         :ARG1-of (l2 / lose-02
                                      :direction (a / away
                                                    :extent (f / far))))))


# ::snt " I have your sheep .
(h / have-03
   :ARG0 (i / i)
   :ARG1 (s / sheep
            :poss (y / you)))


# ::snt And I have the sheep 's box .
(a / and
   :op2 (h / have-03
           :ARG0 (i / i)
           :ARG1 (b / box)))


# ::snt And I have the muzzle ... "
(a / and
   :op2 (h / have-03
           :ARG0 (i / i)
           :ARG1 (m / muzzle)))


# ::snt And he gave me a sad smile .
(a / and
   :op2 (g / give-01
           :ARG0 (h / he)
           :ARG1 (s / smile
                    :ARG1-of (s2 / sad-02))
           :ARG2 (i / i)))


# ::snt I waited a long time .
(w / wait-01
   :ARG1 (i / i)
   :ARG1-of (l / long-03))


# ::snt I could see that he was reviving little by little .
(p / possible-01
   :ARG1 (s / see-01
            :ARG0 (i / i)
            :ARG1 (r / revive-01)))


# ::snt " Dear little man , "
(m2 / man
    :mod (l2 / little)
    :mod (d / dear))


# ::snt I said to him , " you are afraid ... "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (f / fear-01
            :ARG0 (h / he))
   :ARG2 h)


# ::snt He was afraid , there was no doubt about that .
(f / fear-01
   :ARG0 (h / he)
   :mod (c / certain))


# ::snt But he laughed lightly .
(c / contrast-01
   :ARG2 (l / laugh-01
            :ARG0 (h / he)
            :manner (l2 / light-06)))


# ::snt " I shall be much more afraid this evening ... "
(h / have-degree-91
   :ARG1 (i / i)
   :ARG2 (f / fear-01
            :ARG0 i)
   :ARG3 (m / more
            :quant (m2 / much))
   :time (d / date-entity
            :dayperiod (e / evening)
            :mod (t / today)))


# ::snt Once again I felt myself frozen by the sense of something irreparable .
# ::snt And I knew that I could not bear the thought of never hearing that laughter any more .
(a / and
   :op2 (k / know-01
           :ARG0 (i / i)
           :ARG1 (p / possible-01)))


# ::snt For me , it was like a spring of fresh water in the desert .
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (s / spring
            :source-of (w / water
                          :ARG1-of (f / fresh-04))
            :location (d / desert))
   :beneficiary (i2 / i))


# ::snt " Little man , "
(m / man
   :mod (l / little))


# ::snt I said , " I want to hear you laugh again . "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (w / want-01
            :ARG0 i
            :ARG1 (h / hear-01
                     :ARG0 i)))


# ::snt But he said to me : " Tonight , it will be a year ... my star , then , can be found right above the place where I came to the Earth , a year ago ... "
# ::snt " Little man , "
(m / man
   :mod (l / little))


# ::snt I said , " tell me that it is only a bad dream - - this affair of the snake , and the meeting - place , and the star ... "
(s / say-01
   :ARG0 (i / i)
   :ARG1 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (d / dream-01
                     :ARG0 i
                     :ARG1-of (b / bad-07))
            :ARG2 i))


# ::snt But he did not answer my plea .
(c / contrast-01
   :ARG2 (a / answer-01
            :ARG0 (h / he)
            :ARG1 (p / plea)))


# ::snt He said to me , instead : " The thing that is important is the thing that is not seen ... "
(s3 / say-01
    :ARG0 (h / he)
    :ARG1 (i2 / important-01
              :ARG1 (t / thing
                       :ARG1-of (s2 / see-01)))
    :ARG2 (i3 / i)
    :ARG1-of (i / instead-of-91))


# ::snt " Yes , I know ... "
(k / know-01
   :ARG0 (i / i))


# ::snt " It is just as it is with the flower .
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (f / flower)
   :mod (j / just))


# ::snt If you love a flower that lives on a star , it is sweet to look at the sky at night .
(l / look-01
   :ARG1 (s2 / sky
             :time (d / date-entity))
   :ARG1-of (s / sweet-04)
   :condition (l2 / love-01
                  :ARG0 (y / you)
                  :ARG1 (f / flower
                           :ARG0-of (l3 / live-01
                                        :location (s3 / star)))))


# ::snt All the stars are a - bloom with flowers ... "
(b / bloom-01
   :ARG0 (f / flower)
   :location (s / star
                :mod (a / all)))


# ::snt " Yes , I know ... "
(k / know-01
   :ARG0 (i / i))


# ::snt " It is just as it is with the water .
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (w / water)
   :mod (j / just))


# ::snt Because of the pulley , and the rope , what you gave me to drink was like music .
(c / cause-01
   :ARG0 (a / and
            :op1 (p / pulley)
            :op2 (r / rope))
   :ARG1 (r2 / resemble-01
             :ARG1 (t / thing
                      :ARG1-of (g / give-01
                                  :ARG0 (y / you)
                                  :ARG2 (i / i)
                                  :purpose (d / drink-01
                                              :ARG0 i)))
             :ARG2 (m / music)))


# ::snt You remember - - how good it was . "
(r / remember-01
   :ARG0 (y / you)
   :ARG1 (g / good-02
            :ARG1 (i / it)
            :degree (s / so)))


# ::snt " Yes , I know ... "
(k / know-01
   :ARG0 (i / i))


# ::snt " And at night you will look up at the stars .
(a / and
   :op2 (l / look-01
           :ARG0 (y / you)
           :ARG1 (s / star)
           :direction (u / up)
           :time (d / date-entity)))


# ::snt Where I live everything is so small that I can not show you where my star is to be found .
# ::snt It is better , like that .
(h / have-degree-91
   :ARG1 (i2 / it)
   :ARG2 (g / good-02
            :ARG1 i2)
   :ARG3 (m / more)
   :condition (r / resemble-01
                 :ARG1 i2
                 :ARG2 (t / that)))


# ::snt My star will just be one of the stars , for you .
(s / star
   :beneficiary (y / you)
   :poss (i / i)
   :ARG1-of (i2 / include-91
                :ARG2 (s2 / star)
                :mod (j / just)))


# ::snt And so you will love to watch all the stars in the heavens ... they will all be your friends .
(a / and
   :op2 (l / love-01
           :ARG0 (y / you
                    :ARG1-of (h2 / have-rel-role-91
                                 :ARG2 (f / friend)))
           :ARG1 (w / watch-01
                    :ARG0 y)))


# ::snt And , besides , I am going to make you a present ... "
(a / and
   :op1 (m / make-01
           :ARG0 (i / i)
           :ARG1 (p / present)
           :ARG3 (y / you)))


# ::snt He laughed again .
(l / laugh-01
   :ARG0 (h / he)
   :mod (a / again))


# ::snt " Ah , little prince , dear little prince !
(a / and
   :op2 (p2 / prince
            :mod (l2 / little)
            :mod (d / dear)))


# ::snt I love to hear that laughter ! "
(l / love-01
   :ARG0 (i / i)
   :ARG1 (h / hear-01
            :ARG0 i
            :ARG1 (l2 / laugh-01)))


# ::snt " That is my present .
(p / present-01
   :ARG0 (i / i)
   :ARG1 (t / that))


# ::snt Just that .
(t / that
   :mod (j / just))


# ::snt It will be as it was when we drank the water ... "
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (t / time
            :time-of (d / drink-01
                        :ARG0 (w / we)
                        :ARG1 (w2 / water))))


# ::snt " What are you trying to say ? "
(t / try-01
   :ARG0 (y / you)
   :ARG1 (s / say-01
            :ARG0 y
            :ARG1 (a / amr-unknown)))


# ::snt " All men have the stars , " he answered , " but they are not the same things for different people .
(a / answer-01
   :ARG0 (h / he)
   :ARG2 (c / contrast-01
            :ARG1 (h2 / have-03)
            :ARG2 (t / thing
                     :ARG1-of (s2 / same-01
                                  :ARG3 (p / person
                                           :ARG1-of (d2 / differ-02))))))


# ::snt For some , who are travelers , the stars are guides .
(g / guide-01
   :ARG0 (s / star)
   :ARG1 (s2 / some
             :ARG0-of (t / travel-01)))


# ::snt For others they are no more than little lights in the sky .
(o2 / opine-01
    :ARG0 (p / person
             :mod (o / other))
    :ARG1 (l / light
             :mod (l2 / little)
             :location (s / sky)
             :mod (o3 / only)
             :domain (t / they)))


# ::snt For others , who are scholars , they are problems .
(o / opine-01
   :ARG0 (s / scholar)
   :ARG1 (p / problem
            :domain (t / they)))


# ::snt For my businessman they were wealth .
(o / opine-01
   :ARG0 (b / businessman
            :poss (i / i))
   :ARG1 (w / wealth
            :domain (t / they)))


# ::snt But all these stars are silent .
(c / contrast-01
   :ARG2 (s2 / silent
             :domain (s / star)))


# ::snt You - - you alone - - will have the stars as no one else has them - - "
(h / have-03
   :ARG0 (y / you
            :mod (a / alone))
   :ARG1 (s / star)
   :ARG1-of (r / resemble-01
               :ARG2 (h2 / have-03
                         :ARG0 (a2 / anyone)
                         :ARG1 s)))


# ::snt " What are you trying to say ? "
(t / try-01
   :ARG0 (y / you)
   :ARG1 (s / say-01
            :ARG0 y
            :ARG1 (a / amr-unknown)))


# ::snt " In one of the stars I shall be living .
(l / live-01
   :ARG0 (i / i)
   :location (s / star
                :ARG1-of (i2 / include-91
                             :ARG2 (s2 / star))))


# ::snt In one of them I shall be laughing .
(l / laugh-01
   :ARG0 (i / i)
   :location (s / star
                :ARG1-of (i2 / include-91
                             :ARG2 (t / they))))


# ::snt And so it will be as if all the stars were laughing , when you look at the sky at night ... you - - only you - - will have stars that can laugh ! "
# ::snt And he laughed again .
(a / and
   :op2 (l / laugh-01
           :ARG0 (h / he)
           :mod (a2 / again)))


# ::snt " And when your sorrow is comforted ( time soothes all sorrows ) you will be content that you have known me .
# ::snt You will always be my friend .
(h / have-rel-role-91
   :ARG0 (y / you)
   :ARG1 (i / i)
   :ARG2 (f / friend)
   :time (a / always))


# ::snt You will want to laugh with me .
(w / want-01
   :ARG0 (y / you)
   :ARG1 (l / laugh-01
            :ARG0 y
            :accompanier (i / i)))


# ::snt And you will sometimes open your window , so , for that pleasure ... and your friends will be properly astonished to see you laughing as you look up at the sky !
(a / and
   :op1 (o / open-01
           :ARG0 (y / you
                    :ARG1-of (h / have-rel-role-91
                                :ARG2 (f / friend)))
           :ARG1 (w / window
                    :poss y)
           :time (s / sometimes)
           :purpose (p / pleasure))
   :op2 (a2 / astonish-01
            :ARG0 (s2 / see-01)
            :manner (p2 / proper)))


# ::snt Then you will say to them , ' Yes , the stars always make me laugh ! ' And they will think you are crazy .
(a / and
   :op1 (s / say-01
           :ARG0 (y / you)
           :ARG1 (a3 / and)
           :ARG2 (t2 / they)
           :time (t / then))
   :op2 (t3 / think-01
            :ARG0 t2
            :ARG1 (c / crazy-03
                     :ARG1 y)))


# ::snt It will be a very shabby trick that I shall have played on you ... "
(t3 / trick-01
    :ARG0 (i / i)
    :ARG1 (y / you)
    :mod (s2 / shabby
             :degree (v2 / very)))


# ::snt And he laughed again .
(a / and
   :op2 (l / laugh-01
           :ARG0 (h / he)
           :mod (a2 / again)))


# ::snt " It will be as if , in place of the stars , I had given you a great number of little bells that knew how to laugh ... "
(r / resemble-01
   :ARG1 (g / give-01
            :ARG0 (i / i)
            :ARG1 (b2 / bell
                      :ARG0-of (k / know-01
                                  :ARG1 (l2 / laugh-01)))
            :ARG2 (y / you)
            :ARG1-of (i2 / instead-of-91
                         :ARG2 (g3 / give-01
                                   :ARG0 i
                                   :ARG1 (s2 / star)
                                   :ARG2 y))))


# ::snt And he laughed again .
(a / and
   :op2 (l / laugh-01
           :ARG0 (h / he)
           :mod (a2 / again)))


# ::snt Then he quickly became serious : " Tonight - - you know ... do not come , " said the little prince .
(s / say-01
   :ARG0 (p / prince
            :mod (l / little)
            :ARG1-of (b / become-01
                        :ARG2 (s2 / serious-01
                                  :ARG1 p)
                        :ARG1-of (q / quick-02)
                        :time (t / then)))
   :ARG1 (c / come-01
            :ARG1 (y / you)
            :time (d / date-entity)))


# ::snt " I shall not leave you , "
(l / leave-15
   :ARG0 (i / i)
   :ARG1 (y / you))


# ::snt I said .
(s / say-01
   :ARG0 (i / i))


# ::snt " I shall look as if I were suffering .
(l / look-02
   :ARG0 (i / i)
   :ARG1 (h / have-manner-91
            :ARG2 (s2 / suffer-01)))


# ::snt I shall look a little as if I were dying .
(l / look-02
   :ARG0 (i / i)
   :ARG1 (h / have-manner-91
            :ARG2 (d2 / die-01))
   :degree (l3 / little))


# ::snt It is like that .
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (t / that))


# ::snt Do not come to see that .
(c / come-01
   :ARG1 (y / you)
   :purpose (s / see-01
               :ARG0 y
               :ARG1 (t / that)))


# ::snt It is not worth the trouble ... "
(w / worth-02
   :ARG1 (i / it)
   :ARG2 (t / trouble-05
            :ARG2 i))


# ::snt " I shall not leave you . "
(l / leave-15
   :ARG0 (i / i)
   :ARG1 (y / you))


# ::snt But he was worried .
(c / contrast-01
   :ARG2 (w2 / worry-01
             :ARG1 (h / he)))


# ::snt " I tell you - - it is also because of the snake .
(t / tell-01
   :ARG0 (i / i)
   :ARG1 (c / cause-01
            :ARG0 (s / snake)
            :mod (a / also))
   :ARG2 (y / you))


# ::snt He must not bite you .
(o2 / obligate-01
    :ARG1 (b2 / bite-01
              :ARG0 (h2 / he)
              :ARG1 (y2 / you)))


# ::snt Snakes - - they are malicious creatures .
(s / snake
   :mod (c / creature
           :mod (m / malicious)))


# ::snt This one might bite you just for fun ... "
(p / possible-01
   :ARG1 (b / bite-01
            :ARG0 (o / one)
            :ARG1 (y / you)
            :purpose (f / fun-01)))


# ::snt " I shall not leave you . "
(l / leave-15
   :ARG0 (i / i)
   :ARG1 (y / you))


# ::snt But a thought came to reassure him : " It is true that they have no more poison for a second bite . "
(c / contrast-01
   :ARG2 (c2 / come-01
             :ARG1 (t / think-01)))


# ::snt That night I did not see him set out on his way .
(s / see-01
   :ARG0 (i / i)
   :ARG1 (s2 / set-out-07
             :ARG0 (h / he)
             :ARG1 (w / way
                      :poss h))
   :time (d / date-entity
            :dayperiod (n / night)
            :mod (t / that)))


# ::snt He got away from me without making a sound .
(g / get-away-08
   :ARG0 (h / he)
   :source (i / i)
   :manner (s2 / sound-02
               :ARG1 h))


# ::snt When I succeeded in catching up with him he was walking along with a quick and resolute step .
(s / succeed-01
   :ARG0 (i / i)
   :ARG1 (c / catch-up-04
            :ARG1 i
            :ARG2 (h / he))
   :time (w / walk-01
            :ARG0 h
            :ARG1-of (q / quick-02)
            :manner (r2 / resolute)))


# ::snt He said to me merely : " Ah !
(s / say-01
   :ARG0 (h / he)
   :ARG1 (a / ah)
   :ARG2 (i / i)
   :manner (m / mere))


# ::snt You are there ... "
(y / you
   :location (t / there))


# ::snt And he took me by the hand .
(a / and
   :op2 (t / take-01
           :ARG0 (h / he)
           :ARG1 (i / i)
           :manner (h2 / hand)))


# ::snt But he was still worrying .
(c / contrast-01
   :ARG2 (w / worry-01
            :ARG1 (h / he)
            :time (s2 / still)))


# ::snt " It was wrong of you to come .
(c / come-01
   :ARG1 (y / you)
   :ARG1-of (w / wrong-02))


# ::snt You will suffer .
(s / suffer-01
   :ARG0 (y / you))


# ::snt I shall look as if I were dead ; and that will not be true ... "
(a / and
   :op1 (r / resemble-01
           :ARG1 (i / i)
           :ARG2 (i2 / i
                     :ARG1-of (d2 / die-01)))
   :op2 (t / true-01
           :ARG1 r))


# ::snt I said nothing .
(s / say-01
   :ARG0 (i / i)
   :ARG1 (n / nothing))


# ::snt " You understand ... it is too far .
(u / understand-01
   :ARG0 (y / you)
   :ARG1 (h / have-degree-91
            :ARG1 (i2 / it)
            :ARG2 (f / far)
            :ARG3 (t / too)))


# ::snt It is too heavy . "
(h / have-degree-91
   :ARG1 (i2 / it)
   :ARG2 (h2 / heavy)
   :ARG3 (t / too))


# ::snt I said nothing .
(s / say-01
   :ARG0 (i / i)
   :ARG1 (n / nothing))


# ::snt " But it will be like an old abandoned shell .
(c / contrast-01
   :ARG2 (r / resemble-01
            :ARG1 (i / it)
            :ARG2 (s / shell
                     :ARG1-of (a / abandon-01))))


# ::snt There is nothing sad about old shells ... "
(s / sad-02
   :ARG0 (s2 / shell
             :mod (o / old)))


# ::snt I said nothing .
(s / say-01
   :ARG0 (i / i)
   :ARG1 (n / nothing))


# ::snt He was a little discouraged .
(d / discourage-01
   :ARG1 (h / he)
   :degree (l / little))


# ::snt But he made one more effort : " You know , it will be very nice .
(c / contrast-01
   :ARG2 (e / effort-01
            :ARG0 (h / he)
            :ARG1 (n / nice-01)
            :mod (m2 / more)))


# ::snt I , too , shall look at the stars .
(l / look-01
   :ARG0 (i / i
            :mod (t / too))
   :ARG1 (s / star))


# ::snt All the stars will be wells with a rusty pulley .
(s / star
   :domain (w / well
              :ARG0-of (h / have-03
                          :ARG1 (p / pulley
                                   :mod (r / rust))))
   :mod (a / all))


# ::snt All the stars will pour out fresh water for me to drink ... "
(p / pour-01
   :ARG0 (s / star
            :mod (a / all))
   :ARG1 (w / water
            :ARG1-of (f / fresh-04))
   :purpose (d / drink-01
               :ARG0 (i / i)
               :ARG1 w)
   :direction (o / out))


# ::snt I said nothing .
(s / say-01
   :ARG0 (i / i)
   :ARG1 (n / nothing))


# ::snt " That will be so amusing !
(a / amuse-01
   :ARG0 (t / that)
   :degree (s / so))


# ::snt You will have five hundred million little bells , and I shall have five hundred million springs of fresh water ... "
(a / and
   :op1 (h / have-03
           :ARG0 (y / you)
           :ARG1 (b / bell))
   :op2 (h2 / have-03
            :ARG0 (i / i)
            :ARG1 (s / spring
                     :source-of (w / water
                                   :ARG1-of (f / fresh-04)))))


# ::snt And he too said nothing more , because he was crying ...
(a / and
   :op2 (s / say-01
           :ARG0 (h / he)
           :ARG1 (n / nothing)
           :ARG1-of (c / cause-01
                       :ARG0 (c2 / cry-02
                                 :ARG0 h))))


# ::snt " Here it is .
(i / it
   :location (h / here))


# ::snt Let me go on by myself . "
(a / allow-01
   :ARG0 (y / you)
   :ARG1 (g / go-on-15
            :ARG1 (i / i)
            :mod (b / by-oneself)))


# ::snt And he sat down , because he was afraid .
(a / and
   :op2 (s / sit-down-02
           :ARG1 (h / he)
           :ARG1-of (c / cause-01
                       :ARG0 (f / fear-01
                                :ARG0 h))))


# ::snt Then he said , again : " You know - - my flower ...
(s / say-01
   :ARG0 (h / he)
   :ARG1 (f / flower
            :poss h)
   :time (t / then)
   :mod (a / again))


# ::snt I am responsible for her .
(r / responsible-03
   :ARG0 (i / i)
   :ARG2 (s / she))


# ::snt And she is so weak !
(a / and
   :op2 (w / weak-02
           :ARG1 (s / she)
           :degree (s2 / so)))


# ::snt She is so naïve !
(n / naive
   :degree (s2 / so)
   :domain (s / she))


# ::snt She has four thorns , of no use at all , to protect herself against all the world ... "
(h / have-03
   :ARG0 (s / she)
   :ARG1 (t / thorn
            :ARG1-of (u / use-01
                        :degree (a2 / at-all)))
   :purpose (p / protect-01
               :ARG0 t
               :ARG1 s
               :ARG2 (w / world)))


# ::snt I too sat down , because I was not able to stand up any longer .
(s / sit-down-02
   :ARG1 (i / i
            :mod (t / too))
   :ARG1-of (c / cause-01
               :ARG0 (p / possible-01
                        :ARG1 (s2 / stand-up-07
                                  :ARG1 i
                                  :ARG1-of (l / long-03
                                              :mod (a / any))))))


# ::snt " There now - - that is all ... "
(t / that
   :mod (a / all)
   :time (n / now))


# ::snt He still hesitated a little ; then he got up .
(m / multi-sentence
   :snt1 (h / hesitate-01
            :ARG0 (h2 / he)
            :mod (s / still)
            :degree (l / little))
   :snt2 (g / get-05
            :ARG1 h2
            :ARG2 (u / up)
            :time (t / then)))


# ::snt He took one step .
(s / step-01
   :ARG1 (h / he))


# ::snt I could not move .
(p / possible-01
   :ARG1 (m / move-01
            :ARG1 (i / i)))


# ::snt There was nothing but a flash of yellow close to his ankle .
(f / flash
   :ARG1-of (y / yellow-02)
   :ARG1-of (c2 / close-10
                :ARG2 (a / ankle
                         :part-of (h / he)))
   :mod (n2 / nothing-but))


# ::snt He remained motionless for an instant .
(r / remain-01
   :ARG1 (h / he)
   :duration (i / instant)
   :manner (m / move-01))


# ::snt He did not cry out .
(c / cry-out-03
   :ARG0 (h / he))


# ::snt He fell as gently as a tree falls .
(h2 / have-degree-91
    :ARG1 (f / fall-01
             :ARG1 (h / he))
    :ARG2 (g / gentle)
    :ARG3 (e / equal)
    :ARG4 (f2 / fall-01
              :ARG1 (t / tree)))


# ::snt There was not even any sound , because of the sand .
(s / sound-02
   :mod (a / any
           :mod (e / even))
   :ARG1-of (c / cause-01
               :ARG0 (s2 / sand)))


# ::snt Chapter 27 .
(c / chapter)


# ::snt And now six years have already gone by ...
(a / and
   :op2 (g / go-on-15
           :ARG1 (t / temporal-quantity)
           :time (a2 / already))
   :time (n / now))


# ::snt I have never yet told this story .
(t / tell-01
   :ARG0 (i / i)
   :ARG1 (s / story
            :mod (t2 / this))
   :time (e / ever)
   :time (y / yet))


# ::snt The companions who met me on my return were well content to see me alive .
(c / content-01
   :ARG0 (s / see-01
            :ARG0 (c2 / companion
                      :ARG0-of (m / meet-03
                                  :time (r / return-01)))
            :ARG1 (l / live-01))
   :ARG1 c2
   :mod (w / well))


# ::snt I was sad , but I told them : " I am tired . "
(c / contrast-01
   :ARG1 (s / sad-02
            :ARG1 (i / i))
   :ARG2 (t / tell-01
            :ARG0 i
            :ARG1 (t3 / tire-01
                      :ARG1 i)
            :ARG2 (t2 / they)))


# ::snt Now my sorrow is comforted a little .
(c / comfort-01
   :ARG1 (s / sorrow-01
            :ARG0 (i / i))
   :time (n / now)
   :degree (l / little))


# ::snt That is to say - - not entirely .
(s / say-01
   :ARG1 (e / entire))


# ::snt But I know that he did go back to his planet , because I did not find his body at daybreak .
(c / contrast-01
   :ARG2 (k / know-01
            :ARG0 (i / i)
            :ARG1 (g / go-back-19)
            :ARG1-of (c2 / cause-01
                         :ARG0 (f / find-01
                                  :ARG0 i
                                  :ARG1 (b / body)
                                  :time (d / daybreak)))))


# ::snt It was not such a heavy body ... and at night I love to listen to the stars .
(a / and
   :op1 (b / body
           :mod (h / heavy))
   :op2 (l / love-01
           :ARG0 (i / i)
           :ARG1 (l2 / listen-01
                     :ARG0 i)))


# ::snt It is like five hundred million little bells ...
(r / resemble-01
   :ARG1 (i / it)
   :ARG2 (b / bell
            :mod (l / little)))


# ::snt But there is one extraordinary thing ... when I drew the muzzle for the little prince , I forgot to add the leather strap to it .
# ::snt He will never have been able to fasten it on his sheep .
(p / possible-01
   :time (e / ever)
   :ARG1 (f / fasten-01
            :ARG0 (h / he)
            :ARG1 (i / it)
            :ARG2 (s / sheep
                     :poss h)))


# ::snt So now I keep wondering : what is happening on his planet ?
(k / keep-02
   :ARG1 (w / wonder-01
            :ARG0 (i / i)
            :ARG1 (e / event))
   :time (n / now))


# ::snt Perhaps the sheep has eaten the flower ...
(p2 / possible-01
    :ARG1 (e / eat-01
             :ARG0 (s / sheep)
             :ARG1 (f / flower)))


# ::snt The little prince shuts his flower under her glass globe every night , and he watches over his sheep very carefully ... "
(a / and
   :op1 (s / shut-01
           :ARG0 (p / prince)
           :ARG1 (g / globe
                    :consist-of (g2 / glass)
                    :op1-of (u / under
                               :location-of (f2 / flower
                                                :mod (l2 / little)
                                                :poss p)))
           :time (r / rate-entity-91))
   :op2 (w / watch-01
           :ARG0 p
           :ARG1 (s3 / sheep)
           :manner (c / careful)))


# ::snt Then I am happy .
(h / happy-01
   :ARG1 (i / i)
   :time (t / then))


# ::snt And there is sweetness in the laughter of all the stars .
(a / and
   :op2 (s / sweet-05
           :ARG1 (l / laugh-01)))


# ::snt On some one evening he forgot the glass globe , or the sheep got out , without making any noise , in the night ... "
(o / or
   :op1 (f / forget-01
           :ARG0 (h / he)
           :ARG1 (g / globe
                    :consist-of (g2 / glass)))
   :op2 (e / escape-01
           :ARG0 (s / sheep)
           :time (d / date-entity)
           :manner (s3 / sound-02
                       :ARG1 s))
   :time (d2 / date-entity
             :dayperiod (e2 / evening)
             :mod (s2 / some)))


# ::snt And then the little bells are changed to tears ...
(a / and
   :op2 (c / change-01
           :ARG1 (b / bell)
           :ARG2 (t2 / tear-03)
           :time (t / then)))


# ::snt Here , then , is a great mystery .
(m / mystery
   :mod (g / great)
   :time (t / then)
   :location (h / here))


# ::snt For you who also love the little prince , and for me , nothing in the universe can be the same if somewhere , we do not know where , a sheep that we never saw has - - yes or no ? -- eaten a rose ...
# ::snt Look up at the sky .
(l / look-01
   :ARG0 (y / you)
   :ARG1 (s / sky)
   :direction (u / up))


# ::snt Has the sheep eaten the flower ?
(e / eat-01
   :ARG0 (s / sheep)
   :ARG1 (f / flower)
   :polarity (a / amr-unknown))


# ::snt And you will see how everything changes ...
(a / and
   :op2 (s / see-01
           :ARG0 (y / you)
           :ARG1 (h / have-manner-91)))


# ::snt And no grown - up will ever understand that this is a matter of so much importance !
(a / and
   :op2 (u / understand-01
           :ARG0 (g / grown-up)
           :ARG1 (t / this
                    :ARG1-of (m / matter-01
                                :ARG1-of (i / important-01
                                            :mod (m2 / much
                                                     :degree (s / so)))))
           :time (e2 / ever)))


# ::snt This is , to me , the loveliest and saddest landscape in the world .
(o / opine-01
   :ARG0 (i / i)
   :ARG1 (l / landscape
            :domain (t / this)
            :ARG1-of (h / have-degree-91
                        :ARG2 (l2 / lovely)
                        :ARG3 (m / most)
                        :ARG5 (w / world))
            :ARG1-of (h2 / have-degree-91
                         :ARG2 (s / sad-02
                                  :ARG1 l)
                         :ARG3 (m2 / most)
                         :ARG5 w)))


# ::snt It is here that the little prince appeared on Earth , and disappeared .
(a / and
   :op1 (a2 / appear-01
            :ARG1 (p / prince)
            :location (e / earth))
   :op2 (d / disappear-01
           :ARG1 p)
   :location (h / here))


# ::snt Look at it carefully so that you will be sure to recognise it in case you travel some day to the African desert .
(l / look-01
   :ARG0 (y / you)
   :ARG1 (i / it)
   :manner (c / careful)
   :purpose (r / recognize-02
               :ARG0 y
               :ARG1 i
               :ARG1-of (e / ensure-01)
               :condition (t / travel-01
                             :ARG0 y)))


# ::snt Wait for a time , exactly under the star .
(w / wait-01
   :ARG1 (y / you)
   :duration (t / time)
   :location (u / under
                :op1 (s / star)
                :manner (e / exact)))


# ::snt Then , if a little man appears who laughs , who has golden hair and who refuses to answer questions , you will know who he is .
(k / know-01
   :ARG0 (y / you)
   :ARG1 (m / man
            :mod (l / little)
            :ARG0-of (l2 / laugh-01)
            :ARG0-of (h / have-03
                        :ARG1 (h2 / hair
                                  :mod (g / golden)))
            :ARG0-of (r / refuse-01
                        :ARG1 (a2 / answer-01
                                  :ARG1 (q / question-01))))
   :condition (a / appear-01
                 :ARG1 m
                 :time (t / then)))


# ::snt If this should happen , please comfort me .
(c / comfort-01
   :ARG0 (y / you)
   :ARG1 (i / i)
   :condition (t / this))


